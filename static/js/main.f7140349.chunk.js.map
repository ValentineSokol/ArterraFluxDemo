{"version":3,"sources":["assets/logo.png","assets/error.png","assets/success.png","serviceWorker.js","global-styles.js","constants.js","utils/unitConvertion.js","components/FluxProvider.js","components/Header.js","utils/dateUtils.js","components/Markets/Market/CountdownTimer.js","components/Markets/Market/EndDate.js","components/Markets/Market/ResolutionDate.js","utils/stringManipulation.js","components/Markets/Market/ExtraInfo.js","components/OrderProvider.js","components/Markets/Market/OutcomeButton.js","components/ModalButton.js","components/Spinner.js","components/Loader.js","components/Markets/Market/UserPositions/CancelButton.js","components/Markets/Market/UserPositions/OpenOrders.js","components/Markets/Market/UserPositions/FilledOrderButton.js","components/Markets/Market/UserPositions/FilledOrders.js","components/Markets/Market/UserPositions/UserPositions.js","components/Markets/Market/MarketContent.js","utils/marketsUtils.js","components/Markets/Market/ResolutedSection.js","components/Markets/Market/Market.js","components/Markets/Markets.js","components/OwnerPortal/OwnerPortalMarket.js","components/OwnerPortal/OwnerPortal.js","components/Modal.js","components/Markets/Market/OrderInput.js","components/Markets/Market/ChangeablePrice.js","components/Markets/Market/OrderForm.js","components/Markets/Market/OrderRes.js","components/Markets/Market/OrderLoader.js","components/Markets/Market/OrderModal.js","components/App.js","components/Dashboard/explorer-api.js","components/Dashboard/formatData.js","components/Dashboard/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","daiToDollars","num","toFixed","initialState","flux","balance","reducer","state","action","type","payload","connect","a","fluxInstance","Flux","walletConnection","isSignedIn","getFDaiBalance","account","accountId","parseInt","claimFDai","console","log","FluxContext","React","createContext","FluxProvider","children","useReducer","dispatch","Provider","value","Logo","styled","img","HeaderContainer","header","LoginButton","button","AccountInfo","span","AllowanceWarning","div","Header","useContext","reloadApp","reload","undefined","getAccountId","then","updatedBalance","catch","err","error","onClick","id","src","fluxLogo","alt","signOut","signIn","moreThanWeekFromNow","time","Date","getTime","timeDiff","TimeValue","CountDownTimer","days","hours","minutes","seconds","completed","Moment","EndDate","endTime","ended","format","TimeIndicator","ResolutionDate","zeroPadTime","date","renderer","CountdownTimer","capitalize","s","charAt","toUpperCase","slice","ExtraInfoContainer","ShowInfoButton","Title","p","Info","ExtraInfo","data","market","useState","showInfo","toggleShowInfo","outcome","price","OrderContext","OrderProvider","order","Button","Label","LastTradedPrice","MarketPrice","OutcomeButton","label","binary","index","color","lastTradedPrice","last_price_for_outcomes","hasLastTradedPrice","ColoredButton","className","StyledButton","Spinner","spinner","StyledSpinner","Loader","ButtonData","BoldText","CancelText","selected","setSelected","cancelOrder","canceled","setCanceled","spend","filled","OpenOrders","orders","selectedOrder","setSelectedOrder","StyledHeader","buttons","map","i","outcome_tags","outcomes","CancelButton","key","HeaderSection","sharesFilled","FilledOrderButton","Container","OrderSection","ButtonContainer","ModalButton","UserPositions","closeModal","updateMarketOrders","setOrders","useEffect","mounted","document","body","style","overflow","filterUserOrders","end_time","Description","description","openOrders","FilledOrders","filledOrders","ButtonSection","h1","PositionsButton","FirstHeader","SecondHeader","ThirdHeader","TopSection","MarketContent","props","marketOrders","setMarketOrders","showPositions","setShowPositions","extra_info","getAndSetMarketPrices","getMarketPrices","alert","tag","push","addMarket","marketId","categories","signedMessage","Error","markets","JSON","parse","localStorage","getItem","Array","isArray","unshift","publicKey","toString","setItem","stringify","success","getMarkets","length","removeMarket","indexToRemove","findIndex","splice","ResolutedContainer","ResolutionTitle","h2","Resolution","ClaimButton","ResolutedSection","updateBalance","claimable","setClaimable","updateClaimable","getClaimable","res","onClaimClick","canClaim","setCanClaim","setLoads","claimEarnings","resolution","loads","winning_outcome","MarketContainer","AllMarketsButton","Link","Market","specificId","resoluted","to","MarketsContainer","Markets","OwnerPortalMarket","resolute","winningOutcome","resolute_bond","message","outcomeTag","OwnerPortalContainer","ShowHideButton","MarketCreator","display","flexDirection","padding","OwnerPortal","isOwner","setIsOwner","setDescription","setCategories","extraInfo","setExtraInfo","setOutcomes","setDate","getDate","setEndtime","show","toggleShow","outcomeTags","setOutcomeTags","outcomeInputs","showsMarkets","setShowsMarkets","getIsOwner","htmlFor","onChange","e","updatedTags","setOutcomeTag","target","createMarket","preventDefault","categoryArray","split","connection","signer","signMessage","txRes","atob","status","SuccessValue","ownerPortalMarkets","onSubmit","event","placeholder","FadeIn","keyframes","MoveUp","ModalContainer","Blackground","Modal","blackground","onBlackgroundClick","Input","input","Demonination","changeValue","denomination","focus","createRef","ref","StaticPrice","ChangeButton","ChangeablePrice","changePrice","marketOrder","setMarketOrder","OrderInput","Row","Key","Value","OrderForm","signedIn","marketPrice","placeOrder","setPrice","setSpend","ResIcon","Text","LinkText","OrderRes","amountOfShares","ErrorIcon","SuccessIcon","open","tx","FluxLogo","OrderLoader","OrderModal","orderContext","dispatchOrderContext","dispatchFlux","loading","setLoading","orderRes","setOrderRes","setAmountOfShares","transaction","hash","App","setMarkets","params","marketIds","getMarketsById","formatMarkets","txLoading","wamp","Wampy","realm","getFunctionCallArgs","txHash","fetch","method","headers","jsonrpc","json","returned","result","actions","FunctionCall","args","callWamp","procedure","Promise","resolve","reject","call","onSuccess","dataArr","onError","getTransactions","allPlaceOrders","filter","t","action_args","method_name","placeOrderArgProms","signerId","all","placeOrderArgs","placeOrderTxWithArgs","validTx","allMarketCreations","marketCreationArgProms","marketCreationArgs","createdMarketTxWithArgs","validMarketTx","ordersPlaced","marketsCreated","ordersMappedToMarkets","ordersMappedByMarket","forEach","market_id","timestamp","mapOrdersToMarkets","groupedByDateAndMerged","Object","keys","marketData","orderData","dates","dateString","getMonth","getFullYear","price_per_share","outcomeData","dataObj","priceList","avg","reduce","sum","val","ChartContainer","Dashboard","charts","setCharts","loadingState","setLoadingState","fetchData","allData","formatData","mapOutcomeTagsToOutcomes","mappedData","elems","lines","colors","entry","dataKey","stroke","width","height","formatter","name","formatToolTip","getAllMarkets","allMarkets","ReactDOM","render","basename","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7140349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ef2536e4.png\";","module.exports = __webpack_public_path__ + \"static/media/error.636d6b5f.png\";","module.exports = __webpack_public_path__ + \"static/media/success.ca1d9d6c.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { DARK_BLUE } from './constants';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\t\r\n\tbody {\r\n\t\tmargin: 0!important;\r\n\t\tfont-family: \"Roboto\", sans-serif;\r\n\t\tcolor: ${DARK_BLUE};\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t}\r\n`\r\n\r\nexport default GlobalStyle;","export const PINK = \"#FF009C\";\r\nexport const O_PINK = \"rgba(255,0,156, 0.4)\";\r\nexport const BLUE = \"#5400FF\";\r\nexport const DARK_BLUE = \"#084486\";\r\nexport const LIGHT_GRAY = \"#d3d3d3\";\r\nexport const DARK_GRAY = \"#BBBDC0\";\r\nexport const API_URL = process.env.NODE_ENV === 'production' ? \"https://api.flux.market\" : \"http://localhost:3001\";\r\nexport const GREEN = \"#26a65b\"\r\nexport const YELLOW = \"#F7CA18\"\r\nexport const RED = \"#f03434\"\r\nexport const WHITE = \"#FFFFFF\"\r\nexport const TRACKING_ID = \"UA-159992242-1\";\r\nexport const NEAR_RPC_URL = \"https://rpc.nearprotocol.com\"\r\nexport const PRE_PAID_GAS = 10000000000000000;","import { GREEN, YELLOW, RED, WHITE } from \"../constants\"\r\n\r\nexport const daiToDollars = (num) => {\r\n\treturn (num / 10 ** 17).toFixed(2)\r\n}\r\n\r\nexport const dollarsToDai = (num) => {\r\n\treturn parseInt((num * 10 ** 17).toFixed(2))\r\n}\r\n\r\nexport const yoctoToNear = (num) => {\r\n\treturn (num / 10 ** 23)\r\n\t// return (num / 10 ** 23).toFixed(2)\r\n}\r\n\r\nexport const nearToYocto = (num) => {\r\n\treturn (num * 10 ** 23).toFixed(2)\r\n}\r\n\r\nexport const toEarnings = (order) => {\r\n\tif (order) {\r\n\t\treturn daiToDollars(order.amount / order.price * 100);\r\n\t} \r\n\treturn 0;\r\n} \r\n\r\nexport const allowanceToColor = (yocto) => {\r\n\tif (yocto === null) {\r\n\t\treturn WHITE\r\n\t}\t\t\t\t\t\t\t\t \r\n\telse if (yocto >= 50000000000000000) {\r\n\t\treturn GREEN\r\n\t}\t\t\t\t\t\t\t\t \r\n\telse if (yocto < 50000000000000000) {\r\n\t\treturn YELLOW\r\n\t}\r\n\telse {\r\n\t\treturn RED\r\n\t}\t\t\r\n}","import React, {useReducer} from 'react';\r\nimport Flux from 'flux-sdk';\r\n\r\nconst initialState = {\r\n\tflux: null,\r\n\tbalance: null,\r\n};\r\nconst reducer = (state, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'connected': {\r\n\t\t\treturn state = {\r\n\t\t\t\t...state,\r\n\t\t\t\tflux: action.payload.flux\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase 'balanceUpdate': {\r\n\t\t\treturn state = {\r\n\t\t\t\t...state, \r\n\t\t\t\tbalance: action.payload.balance\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault : {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const connect = async () => {\r\n\tconst fluxInstance = new Flux();\r\n\t await fluxInstance.connect(\"fluxprotocol-phase-point-two\");\r\n\t if (fluxInstance.walletConnection.isSignedIn()) {\r\n\t const balance = await fluxInstance.getFDaiBalance(fluxInstance.account.accountId);\r\n\t if (parseInt(balance) === 0) {\r\n\t  try {\r\n\t   await fluxInstance.claimFDai();\r\n\t  } catch {\r\n\t   console.log(\"user just has no balance\")\r\n\t  }\r\n\t }\r\n\t }\r\n\t return fluxInstance;\r\n   }\r\n\r\nexport const FluxContext = React.createContext(initialState)\r\n\r\nexport const FluxProvider = ({children}) => {\r\n\tconst [flux, dispatch] = useReducer(reducer, initialState)\r\n\r\n\treturn(\r\n\t\t<FluxContext.Provider value={[flux, dispatch]}>{children}</FluxContext.Provider>\r\n\t)\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport fluxLogo from '../assets/logo.png';\r\nimport styled from 'styled-components';\r\nimport { daiToDollars } from '../utils/unitConvertion';\r\nimport { DARK_GRAY, WHITE, DARK_BLUE } from '../constants';\r\nimport { FluxContext } from './FluxProvider';\r\n\r\nconst Logo = styled.img`\r\n\tdisplay: inline-block;\r\n\talign-self: center;\r\n\twidth: 13%;\r\n\r\n`\r\n\r\nconst HeaderContainer = styled.header`\r\n\tdisplay: flex;\r\n\tposition: fixed;\r\n\tz-index: 99;\r\n\tbackground-color: white;\r\n\tjustify-content: space-between;\r\n\tvertical-align: middle;\r\n\talign-items: center;\r\n\tpadding: 2% 5%;\r\n\tfont-weight: bold;\r\n\ttop: 0;\r\n\tmax-height: 70px;\r\n\twidth: 90%;\r\n\tborder-bottom: 1px solid ${DARK_GRAY};\r\n\tbox-shadow: 0px 0px 1px rgba(0, 0, 0, 0.25);\r\n\tfont-size: 12px;\r\n\r\n\t@media (min-width: 560px) {\r\n\t\tpadding: 1% 5%;\r\n\t}\r\n`\r\n\r\nconst LoginButton = styled.button`\r\n\talign-self: center;\r\n\tcolor: ${DARK_BLUE};\r\n\tbackground-color: ${WHITE};\r\n\tborder: 1px solid ${DARK_BLUE};\r\n\tborder-radius: 6px;\r\n\tpadding: 8px 12px;\r\n\tfont-weight: bold;\r\n\r\n\tfont-size: 10px;\r\n`\r\nconst AccountInfo = styled.span`\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\ttext-align: center;\r\n`\r\n\r\n/* TODO: Finish allowance warning */\r\nconst AllowanceWarning = styled.div`\r\n\tdisplay: none; \r\n\tcolor: red;\r\n\tborder: 1px solid red;\r\n\tborder-radius: 50%;\r\n\tposition: absolute;\r\n\twidth: 12px;\r\n\tfont-size: 10px;\r\n\tright: -18px;\r\n\ttop: 1px;\r\n\r\n`\r\n\r\nfunction Header() {\r\n\tconst [{flux, balance}, dispatch] = useContext(FluxContext);\r\n\tconst isSignedIn = flux.walletConnection.isSignedIn();\r\n\t\r\n\tconst reloadApp = () => {\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif ((balance === null || balance === undefined) && flux.isSignedIn()) {\r\n\r\n\t\tflux.getFDaiBalance(flux.getAccountId).then(updatedBalance => \r\n\t\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}})\r\n\t\t).catch(err => console.error(err))\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<HeaderContainer>\r\n\t\t  <Logo onClick={reloadApp} id=\"header-logo\" src={fluxLogo} alt=\"our company logo\"/>\r\n\t\t  {\r\n\t\t\t\t!isSignedIn\r\n\t\t\t\t? \r\n\t\t\t  <LoginButton onClick={() => {\r\n\t\t\t\t\tflux.signIn()\r\n\t\t\t\t}} >Sign in</LoginButton>\r\n\t\t\t\t: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<AccountInfo> {flux.getAccountId()} <AllowanceWarning>!</AllowanceWarning> </AccountInfo>\r\n\t\t\t\t\t\t<AccountInfo> {balance !== undefined ? `$${daiToDollars(balance)}` : null}</AccountInfo>\r\n\t\t\t\t\t\t<LoginButton onClick={() => {\r\n\t\t\t\t\t\t\tflux.signOut()\r\n\t\t\t\t\t\t\treloadApp()\r\n\t\t\t\t\t\t}}>Sign out</LoginButton>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t  }\r\n\t\t</HeaderContainer>\r\n\t);\r\n\r\n}\r\n\r\nexport default Header;\r\n","const timeDiff = time => {\r\n\tconst now = new Date().getTime();\r\n\tconst diff = time - now; \r\n\treturn diff;\r\n}\r\n\r\nexport const moreThanWeekFromNow = time => {\r\n\tconst diff = timeDiff(time);\r\n\treturn diff > 604800000;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TimeValue = styled.span`\r\n\tfont-weight: bold;\r\n`;\r\nexport default function CountDownTimer({ days, hours, minutes, seconds, completed }) {\r\n\tif (completed) {\r\n\t  return <div>Market ended</div>;\r\n\t} else {\r\n\t  return <div> ends in: <TimeValue>{days} days {hours < 10 ? \"0\" + hours : hours}:{minutes < 10 ? \"0\" + minutes : minutes }:{seconds < 10 ? \"0\" + seconds : seconds}</TimeValue></div>;\r\n\t}\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Moment from 'react-moment';\r\n\r\nconst TimeValue = styled(Moment)`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nexport default function EndDate({endTime, ended}) {\r\n\r\n\treturn <div>{!ended ? \"resolution date\" : \"ended\"}: <TimeValue format=\"DD/MM/YYYY\">{new Date(endTime)}</TimeValue></div>\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { moreThanWeekFromNow } from '../../../utils/dateUtils.js';\r\nimport Countdown from 'react-countdown-now';\r\nimport CountdownTimer from './CountdownTimer.js';\r\nimport EndDate from './EndDate.js';\r\nimport { DARK_BLUE } from '../../../constants.js';\r\n\r\nconst TimeIndicator = styled.span`\r\n\tfont-size: 12px;\r\n  color: ${DARK_BLUE};\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\ttext-align: right;\r\n\tpadding-top: 18px;\r\n`;\r\n\r\nexport default function ResolutionDate({endTime}) {\r\n\tconst ended = endTime <= new Date().getTime();\r\n\t\r\n\treturn (\r\n\t\t<TimeIndicator>\r\n\t\t\t{\r\n\t\t\t\tmoreThanWeekFromNow(endTime) || ended ? <EndDate ended={ended} endTime={endTime}/> : \t<Countdown zeroPadTime={2} date={endTime} renderer={CountdownTimer} />\r\n\t\t\t}\r\n\t\t</TimeIndicator>\r\n\t)\r\n};","export const capitalize = (s) => {\r\n\tif (!s) return;\r\n\treturn s.charAt(0).toUpperCase() + s.slice(1)\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE, WHITE } from '../../../constants';\r\n\r\nconst ExtraInfoContainer = styled.div`\r\n\tpadding: 20px 0 ;\r\n`;\r\n\r\nconst ShowInfoButton = styled.button`\r\n\tborder: 1px solid ${DARK_BLUE};\r\n\tmargin: 0;\r\n\tpadding: 0 4px;\r\n\twidth: 18px;\r\n\theight: 17px;\r\n\tcolor: ${DARK_BLUE};\r\n\ttext-align: center;\r\n\tdisplay: block;\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${WHITE};\r\n\tmargin:  auto;\r\n\tdisplay: block;\r\n`\r\n\r\nconst Title = styled.p`\r\n\tfont-weight: medium;\r\n\tmargin: 0;\r\n\tfont-size: 12px;\r\n`\r\nconst Info = styled.p`\r\n\tfont-weight: lighter;\r\n\tmargin: 0;\r\n\tfont-size: 12px;\r\n`\r\n\r\nexport default function ExtraInfo({data, market}) {\r\n\tlet [showInfo, toggleShowInfo] = useState(false);\r\n\r\n\treturn (\r\n\t\t<ExtraInfoContainer>\r\n\t\t\t<ShowInfoButton onClick={() => toggleShowInfo(!showInfo)}>{showInfo ? \"-\" : \"+\"}</ShowInfoButton>\r\n\t\t\t{\r\n\t\t\t\tshowInfo && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Title>extra info:</Title> \r\n\t\t\t\t\t\t<Info>{data}</Info>\r\n\t\t\t\t\t\t<Info>Market id: {market.id}</Info>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</ExtraInfoContainer>\r\n\t)\r\n};","import React, {useReducer} from 'react';\r\n\r\nconst initialState = {\r\n\tmarket: null, \r\n\toutcome: null, \r\n\tprice: null\r\n};\r\nconst reducer = (state, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'startOrderPlacement': {\r\n\t\t\treturn state = {\r\n\t\t\t\tmarket: action.payload.market,\r\n\t\t\t\toutcome: action.payload.outcome,\r\n\t\t\t\tprice: action.payload.price\r\n\t\t\t}\r\n\t\t} \r\n\t\tcase 'stopOrderPlacement': {\r\n\t\t\treturn state = initialState;\r\n\t\t} \r\n\t\tdefault : {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const OrderContext = React.createContext(initialState)\r\n\r\nexport const OrderProvider = ({children}) => {\r\n\tconst [order, dispatch] = useReducer(reducer, initialState)\r\n\r\n\treturn(\r\n\t\t<OrderContext.Provider value={[order, dispatch]}>{children}</OrderContext.Provider>\r\n\t)\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE, DARK_GRAY , BLUE } from '../../../constants';\r\nimport { OrderContext } from '../../OrderProvider';\r\n\r\nexport const Button = styled.button`\r\n\twidth: 100%;\r\n\tbackground-color: white;\r\n\tborder-radius: 6px;\r\n\tpadding: 10px 15px;\r\n\tmargin: 5px 0;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\t-webkit-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\t-moz-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tcolor: ${DARK_BLUE};\r\n\t@media (min-width: 560px) {\r\n\t\tpadding: 15px 25px;\r\n\t}\r\n\t&:active {\r\n\t\tbox-shadow: none;\r\n\t\t-webkit-box-shadow: none;\r\n\t\t-moz-box-shadow: none;\r\n\t}\r\n`;\r\n\r\nconst Label = styled.span`\r\nfont-size: 12px;\r\nwidth: 50%;\r\nfont-weight: bold;\r\ntext-align: left;\r\n`;\r\nconst LastTradedPrice = styled.span`\r\nwidth: 25%;\r\nfont-size: 20px;\r\ntext-align: center;\r\n`;\r\nconst MarketPrice = styled.span`\r\ntext-align: right;\r\nwidth: 25%;\r\nfont-size: 20px;\r\nfont-weight: bold;\r\n`;\r\n\r\nconst OutcomeButton = ({label, binary, index, market, price}) => {\r\n\tconst [orderModal, dispatch] = useContext(OrderContext)\r\n\tconst color = binary ? index === 0 ? DARK_GRAY : BLUE : DARK_BLUE;\r\n\tconst lastTradedPrice = market.last_price_for_outcomes[index];\r\n\tconst hasLastTradedPrice = !!lastTradedPrice;\r\n\r\n\tconst ColoredButton = styled(Button)`\r\n\t\tborder: 1px solid ${color};\r\n\t`\r\n\treturn (\r\n\r\n\t\t<ColoredButton \r\n\t\t\tonClick={() => dispatch({type: 'startOrderPlacement', payload: {market, outcome: index, price}})} \r\n\t\t>\r\n\t\t\t<Label>{label}</Label>\r\n\t\t\t<LastTradedPrice>{hasLastTradedPrice ? lastTradedPrice + \"¢\" : \"--\"}</LastTradedPrice>\r\n\t\t\t<MarketPrice>{price < 100 ? price + \"¢\" : \"--\"}</MarketPrice>\r\n\t\t</ColoredButton>\r\n\r\n\t)\r\n}\r\n\r\nexport default OutcomeButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default ({color, onClick ,children, className}) => {\r\n\tconst StyledButton = styled.button`\r\n\t\tbackground-color: ${color};\r\n\t\tcolor: white;\r\n\t\tborder-radius: 10px;\r\n\t\tfont-size: 20px;\r\n\t\tfont-weight: bold;\r\n\t\twidth: 100%;\r\n\t\tmargin-top: 18px;\r\n\t\tpadding: 18px;\r\n\t`;\r\n\treturn <StyledButton className={className} onClick={onClick}>{children}</StyledButton>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE } from '../constants';\r\n\r\nconst Spinner = styled.div `\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\twidth: 80px;\r\n\theight: 80px;\r\n\tleft: calc(50% - 40px);\r\n\ttop: calc(50% - 40px);\r\n\r\n\t& div {\r\n\t\tanimation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n\t\ttransform-origin: 40px 40px;\r\n\t}\r\n\t& div:after {\r\n\t\tcontent: \" \";\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 6px;\r\n\t\theight: 6px;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: ${DARK_BLUE};\r\n\t\tmargin: -4px 0 0 -4px;\r\n\t}\r\n\t& div:nth-child(1) {\r\n\t\tanimation-delay: -0.036s;\r\n\t}\r\n\t& div:nth-child(1):after {\r\n\t\ttop: 63px;\r\n\t\tleft: 63px;\r\n\t}\r\n\t& div:nth-child(2) {\r\n\t\tanimation-delay: -0.072s;\r\n\t}\r\n\t& div:nth-child(2):after {\r\n\t\ttop: 68px;\r\n\t\tleft: 56px;\r\n\t}\r\n\t& div:nth-child(3) {\r\n\t\tanimation-delay: -0.108s;\r\n\t}\r\n\t& div:nth-child(3):after {\r\n\t\ttop: 71px;\r\n\t\tleft: 48px;\r\n\t}\r\n\t& div:nth-child(4) {\r\n\t\tanimation-delay: -0.144s;\r\n\t}\r\n\t& div:nth-child(4):after {\r\n\t\ttop: 72px;\r\n\t\tleft: 40px;\r\n\t}\r\n\t& div:nth-child(5) {\r\n\t\tanimation-delay: -0.18s;\r\n\t}\r\n\t& div:nth-child(5):after {\r\n\t\ttop: 71px;\r\n\t\tleft: 32px;\r\n\t}\r\n\t& div:nth-child(6) {\r\n\t\tanimation-delay: -0.216s;\r\n\t}\r\n\t& div:nth-child(6):after {\r\n\t\ttop: 68px;\r\n\t\tleft: 24px;\r\n\t}\r\n\t& div:nth-child(7) {\r\n\t\tanimation-delay: -0.252s;\r\n\t}\r\n\t& div:nth-child(7):after {\r\n\t\ttop: 63px;\r\n\t\tleft: 17px;\r\n\t}\r\n\t& div:nth-child(8) {\r\n\t\tanimation-delay: -0.288s;\r\n\t}\r\n\t& div:nth-child(8):after {\r\n\t\ttop: 56px;\r\n\t\tleft: 12px;\r\n\t}\r\n\t@keyframes lds-roller {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n`\r\n  \r\n\r\nconst spinner = () => <Spinner ><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></Spinner>\r\n\r\nexport default spinner;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Spinner from './Spinner';\r\n\r\nconst StyledSpinner = styled(Spinner) `\r\n\tleft: calc(50% - 32px);\r\n\ttop: calc(50vh - 32px);\r\n`;\r\n\r\nfunction Loader() {\r\n\treturn (\r\n\t\t<StyledSpinner />\r\n\t);\r\n\r\n}\r\n\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from './../OutcomeButton';\r\nimport { DARK_BLUE, DARK_GRAY } from '../../../../constants';\r\nimport { daiToDollars } from '../../../../utils/unitConvertion';\r\n\r\nconst ButtonData = styled.span`\r\n\twidth: 25%;\r\n\ttext-align: center;\r\n\tfont-size: 20px;\r\n`\r\nconst Label = styled.span`\r\n\twidth: 25%;\r\n\ttext-align: center;\r\n\tfont-size: 12px;\r\n\tfont-weight: bold;\r\n`\r\n\r\nconst BoldText = styled.span`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst CancelText = styled.p`\r\n\tfont-size: 20px;\r\n\ttext-align: center;\r\n\tmargin: 0;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tfont-weight: bold;\r\n`\r\n\r\nexport default ({order, label, selected, setSelected, cancelOrder}) => {\r\n\tconst [canceled, setCanceled] = useState(false);\r\n\r\n\tconst ColoredButton = styled(Button)`\r\n\t\tborder: 1px solid ${selected ? DARK_BLUE : DARK_GRAY };\r\n\t\tbackground-color: ${selected ? DARK_BLUE : \"white\"};\r\n\t\tcolor: ${selected ? \"white\" : DARK_BLUE};\r\n\t\tmargin: 10px 0 ;\r\n\r\n\t`;\r\n\r\n\treturn (\r\n\t\tcanceled ? null : (\r\n\t\t\t<ColoredButton onClick={() => {\r\n\t\t\t\tif (!selected) setSelected();\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetCanceled(true);\r\n\t\t\t\t\tcancelOrder();\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t\t{selected ? <CancelText>cancel order</CancelText> : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Label><BoldText>{label}</BoldText></Label>\r\n\t\t\t\t\t\t<ButtonData>{order.price}¢</ButtonData>\r\n\t\t\t\t\t\t<ButtonData><BoldText>${daiToDollars(order.spend)}</BoldText></ButtonData>\r\n\t\t\t\t\t\t<ButtonData>{(order.filled / order.spend * 100).toFixed(2)}%</ButtonData>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</ColoredButton>\r\n\t\t)\r\n\t)\r\n}","import React, {useState, useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header, HeaderSection } from '../MarketContent';\r\nimport CancelButton from './CancelButton';\r\nimport { FluxContext } from './../../../FluxProvider';\r\n\r\nconst OpenOrders = ({orders, market}) => {\r\n\tconst [selectedOrder, setSelectedOrder] = useState(null)\r\n\tconst [{flux}, dispatch] = useContext(FluxContext);\r\n\tconst StyledHeader = styled(Header)`\r\n\t\ttext-align: center;\r\n\t\twidth: 25%;\r\n\t`\r\n\r\n\tconst buttons = orders.map((order, i) => {\r\n\t\tconst cancelOrder = async () => {\r\n\t\t\tawait flux.cancelOrder(market.id, order.outcome, order.id)\r\n\t\t\tconst updatedBalance = await flux.getFDaiBalance().catch(err => console.error(err));\r\n\t\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\r\n\t\t};\r\n\t\tlet selected = i === selectedOrder;\r\n\t\tlet label = market.outcome_tags[order.outcome];\r\n\t\tif (market.outcomes === 2) {\r\n\t\t\tlabel = order.outcome === 0 ? \"NO\" : \"YES\";\r\n\t\t}\r\n\t\treturn <CancelButton label={label} cancelOrder={cancelOrder} setSelected={() => setSelectedOrder(i) } selected={selected} order={order} key={i} />\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeaderSection>\r\n\t\t\t\t<StyledHeader>contract</StyledHeader>\r\n\t\t\t\t<StyledHeader>price per share</StyledHeader>\r\n\t\t\t\t<StyledHeader>order value</StyledHeader>\r\n\t\t\t\t<StyledHeader>% filled</StyledHeader>\r\n\t\t\t</HeaderSection>\r\n\t\t\t{buttons}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport default OpenOrders","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from './../OutcomeButton';\r\nimport { DARK_BLUE } from '../../../../constants';\r\nimport { daiToDollars } from '../../../../utils/unitConvertion';\r\n\r\nconst ButtonData = styled.span`\r\n\twidth: 25%;\r\n\ttext-align: center;\r\n\tfont-size: 20px;\r\n`\r\nconst Label = styled.span`\r\n\twidth: 25%;\r\n\ttext-align: center;\r\n\tfont-size: 12px;\r\n\tfont-weight: bold;\r\n\r\n`\r\n\r\nconst BoldText = styled.span`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nexport default ({order, label}) => {\r\n\tconst ColoredButton = styled(Button)`\r\n\t\tborder: 1px solid ${DARK_BLUE};\r\n\t\tmargin: 10px 0 ;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<ColoredButton>\r\n\t\t\t<Label>{label}</Label>\r\n\t\t\t<ButtonData>{order.price}¢</ButtonData>\r\n\t\t\t<ButtonData><BoldText>${daiToDollars(order.spend)}</BoldText></ButtonData>\r\n\t\t\t<ButtonData>{daiToDollars(order.sharesFilled * 100)}</ButtonData>\r\n\t\t</ColoredButton>\r\n\t)\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header, HeaderSection } from '../MarketContent';\r\nimport FilledOrderButton from './FilledOrderButton';\r\n\r\nexport default ({orders, market}) => {\r\n\tconst StyledHeader = styled(Header)`\r\n\t\ttext-align: center;\r\n\t\twidth: 25%;\r\n\t`;\r\n\r\nlet buttons = orders.map((order, i) => {\r\n\tlet label = market.outcome_tags[order.outcome];\r\n\tif (market.outcomes === 2) {\r\n\t\tlabel = order.outcome === 0 ? \"NO\" : \"YES\";\r\n\t}\r\n\treturn <FilledOrderButton label={label} order={order} key={i} />\r\n})\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeaderSection>\r\n\t\t\t\t<StyledHeader>contract</StyledHeader>\r\n\t\t\t\t<StyledHeader>price per share</StyledHeader>\r\n\t\t\t\t<StyledHeader>order value</StyledHeader>\r\n\t\t\t\t<StyledHeader>shares</StyledHeader>\r\n\t\t\t</HeaderSection>\r\n\t\t\t{buttons}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport ModalButton from '../../../ModalButton';\r\nimport { DARK_BLUE } from '../../../../constants';\r\nimport Loader from '../../../Loader';\r\nimport OpenOrders from './OpenOrders';\r\nimport FilledOrders from './FilledOrders';\r\nimport { Description } from './../MarketContent';\r\nimport ResolutionDate from '../ResolutionDate';\r\nimport { FluxContext } from \"./../../../FluxProvider\";\r\n\r\nconst Container = styled.div`\r\n\tbackground-color: white;\r\n\tanimation: fadein 500ms linear;\r\n\tposition: fixed;\r\n\twidth: 90%;\r\n\theight: calc(100% - 70px);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpadding: 0 5%;\r\n\tz-index: 2;\r\n\tpadding-top: 71px;\r\n\r\n\t@keyframes fadein {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\r\n\t\t100% {\r\n\t\t\topacity: 100;\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst OrderSection = styled.div`\r\n\theight: 67%;\r\n\toverflow: scroll;\r\n`;\r\n\r\nconst Title = styled.p`\r\n\tfont-weight: 500;\r\n\tfont-size: 14px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n\tposition: absolute;\r\n\twidth: 90%!important;\r\n\tbottom: 3%;\r\n\tbackground-color:white;\r\n`;\r\nconst CancelButton = styled(ModalButton)`\r\n\twidth: 100%!important;\r\n\tbottom: 3%;\r\n`;\r\n\r\nconst UserPositions = ({closeModal, market, accountId, updateMarketOrders}) => {\r\n\tconst [{flux}, dispatch] = useContext(FluxContext)\r\n\tconst [orders, setOrders] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mounted = false;\r\n\t\tdocument.body.style.overflow = 'hidden';\r\n\t\tif (mounted === false) setOrders(flux.filterUserOrders(market, flux.getAccountId()));\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.overflow = 'scroll';\r\n\t\t\tmounted = true;\r\n\t\t};\r\n\t}, [setOrders, market, accountId]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{\torders === null ? <Loader /> : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ResolutionDate endTime={market.end_time} />\r\n\t\t\t\t\t<Description>{market.description}</Description>\r\n\t\t\t\t\t<OrderSection>\r\n\t\t\t\t\t\t<Title>my open orders</Title>\r\n\t\t\t\t\t\t<OpenOrders market={market} orders={orders.openOrders} />\r\n\t\t\t\t\t\t<Title>my filled orders</Title>\r\n\t\t\t\t\t\t<FilledOrders market={market} orders={orders.filledOrders}/>\r\n\t\t\t\t\t</OrderSection>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t }\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<CancelButton color={DARK_BLUE} onClick={closeModal}>{orders === null ? \"Cancel\" : \"Done\"}</CancelButton>\r\n\t\t \t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserPositions;","import React, { useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { capitalize } from '../../../utils/stringManipulation';\r\nimport { DARK_BLUE, LIGHT_GRAY } from '../../../constants';\r\nimport ExtraInfo from './ExtraInfo.js';\r\nimport OutcomeButton from './OutcomeButton.js';\r\nimport UserPositions from './UserPositions/UserPositions.js';\r\nimport ResolutionDate from './ResolutionDate.js';\r\nimport { FluxContext } from '../../FluxProvider';\r\n\r\nconst ButtonSection = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Description = styled.h1`\r\n\tfont-size: 24px;\r\n\tcolor: ${DARK_BLUE};\r\n\tpadding-top: 55px;\r\n\tdisplay: block;\r\n\tfont-weight: 500;\r\n\tmargin: 0 auto;\r\n`\r\n\r\nconst PositionsButton = styled.p`\r\n\ttext-decoration: underline;\r\n\tcolor: ${DARK_BLUE};\r\n\tfont-weight: bold;\r\n\tfont-size: 14px;\r\n\tpadding: 14px 0;\r\n\ttext-align: center;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const HeaderSection = styled.div`\r\n\tcolor: ${LIGHT_GRAY};\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: calc(100% - 30px);\r\n\tpadding: 0 15px;\r\n\tmargin: auto;\r\n`;\r\n\r\nexport const Header = styled.p`\r\n\tfont-size: 10px;\r\n\tfont-weight: 900;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n`\r\n\r\nconst FirstHeader = styled(Header)`\r\n\twidth: 50%;\r\n\ttext-align: left;\r\n`;\r\n\r\nconst SecondHeader = styled(Header)`\r\n\twidth: 25%;\r\n\ttext-align: center;\r\n`;\r\nconst ThirdHeader = styled(Header)`\r\n\twidth: 25%;\r\n\ttext-align: right;\r\n`;\r\n\r\nconst TopSection = styled.div`\r\n\tposition: relative;\r\n\tz-index: 1;\r\n`\r\n\r\nconst MarketContent = ({...props}) => {\r\n\tconst [{flux}, dispatch] = useContext(FluxContext);\r\n\tconst [marketOrders, setMarketOrders] = useState([]);\r\n\tconst [market, setMarket] = useState(props.market);\r\n\tconst [showPositions, setShowPositions] = useState(false);\r\n\tconst { end_time, description, outcomes, outcome_tags, extra_info } = market;\r\n\r\n\tuseEffect(() => {\r\n\t\r\n\t\tgetAndSetMarketPrices();\r\n\t\r\n\t}, []);\r\n\r\n\r\n\tconst getAndSetMarketPrices = async () => {\r\n\t\ttry {\r\n\t\tconst marketOrders = await market.getMarketPrices()\r\n\t\tsetMarketOrders(marketOrders)\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\talert('Something went wrong! Look up the console');\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t}\r\n\r\n\tconst getAndSetOrderbook = async () => {\r\n\t\tmarket.orderbooks = await market.getOrderbooks();\r\n\t\tsetMarket(market);\r\n\t}\r\n\tlet buttons = [];\r\n\tif (outcomes > 2) {\r\n\t\tbuttons = outcome_tags.map((tag, i) => (\r\n\t\t\t<OutcomeButton market={market} label={tag} price={marketOrders[i]} index={i} key={i} />\r\n\t\t));\r\n\t} else {\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tbuttons.push(<OutcomeButton market={market} price={marketOrders[i]} label={i === 0 ? \"NO\" : \"YES\" } binary index={i} key={i} />)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TopSection>\r\n\t\t\t\t<ResolutionDate endTime={end_time} />\r\n\t\t\t</TopSection>\r\n\t\t\t<Description>\r\n\t\t\t\t{ capitalize(description) }\r\n\t\t\t\t<ExtraInfo data={extra_info} market={market}/>\r\n\t\t\t</Description>\r\n\t\t\t\r\n\t\t\t<HeaderSection>\r\n\t\t\t\t<FirstHeader>contract</FirstHeader>\r\n\t\t\t\t<SecondHeader>last price traded</SecondHeader>\r\n\t\t\t\t<ThirdHeader>market price:</ThirdHeader>\r\n\t\t\t</HeaderSection>\r\n\t\t\t<ButtonSection>\r\n\t\t\t\t{buttons}\r\n\t\t\t</ButtonSection>\r\n\t\t\t{showPositions && <UserPositions updateMarketOrders={getAndSetMarketPrices} market={market} closeModal={() => setShowPositions(false)}/>}\r\n\t\t\t<PositionsButton onClick={() => setShowPositions(true)}>my positions</PositionsButton>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default MarketContent;","export const addMarket = async (marketId, description, accountId ,categories, signedMessage) => {\r\n\tif (typeof marketId !== \"number\") throw new Error(\"Invalid marketId type\");\r\n\tlet markets = JSON.parse(localStorage.getItem('markets'));\r\n\tif (!Array.isArray(markets)) {\r\n\t\tmarkets = []; \r\n\t}\r\n\tmarkets.unshift({\r\n\t\t\t marketId,\r\n\t\t\t description,\r\n\t\t\t accountId,\r\n\t\t\t categories,\r\n\t\t\t publicKey: signedMessage.publicKey.toString() \r\n\t\t});\r\n\tlocalStorage.setItem(\"markets\", JSON.stringify(markets));\r\n\twindow.location.reload();\r\n\treturn { success: true };\r\n}\r\n\r\n\r\n\r\nexport const getMarkets = async (categories) => {\r\n\tif (categories.length === undefined) throw new Error(\"categories need to be an array, pass an empty array if no category filters\");\r\n\tlet markets = JSON.parse(localStorage.getItem('markets'));\r\n\tif (!Array.isArray(markets)) markets = [];\r\n\tconsole.log(markets);\r\n\treturn { markets }; \r\n}\r\n\r\nexport const removeMarket = async (marketId) => {\r\n\tconsole.log('deleting...');\r\n\tconst markets = JSON.parse(localStorage.getItem('markets'));\r\n\tif (!Array.isArray(markets)) return;\r\n\tconst indexToRemove = markets.findIndex(market => market.marketId == marketId);\r\n\tconsole.log(marketId);\r\n\tconsole.log('deleting...' + markets[indexToRemove]);\r\n\tmarkets.splice(indexToRemove, 1);\r\n\tconsole.log(\"Market removed!\" + markets[indexToRemove]);\r\n\tlocalStorage.setItem('markets', JSON.stringify(markets));\r\n\twindow.location.reload();\r\n\treturn JSON.stringify({ success: true });\r\n}\r\nexport const updateMarket = (market) => {\r\n\tconst markets = JSON.parse(localStorage.getItem('markets'));\r\n\tif (!Array.isArray(markets)) return;\r\n\tconst index = markets.findIndex(market => market.marketId == market.id);\r\n\tmarkets[index] = market;\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE } from '../../../constants';\r\nimport ResolutionDate from './ResolutionDate';\r\nimport { Description } from './MarketContent';\r\nimport { capitalize } from '../../../utils/stringManipulation';\r\nimport { daiToDollars } from '../../../utils/unitConvertion';\r\nimport { FluxContext } from '../../FluxProvider';\r\nimport {removeMarket} from '../../../utils/marketsUtils';\r\n\r\nconst ResolutedContainer = styled.div`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n`;\r\nconst ResolutionTitle = styled.h2`\r\n\tfont-weight: 400;\r\n\tfont-size: 14px;\r\n`;\r\nconst Resolution = styled.span`\r\n\twidth: 100%;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst ClaimButton = styled.button`\r\n\tbackground-color: ${DARK_BLUE};\r\n\tcolor: white;\r\n\tborder-radius: 6px;\r\n\tpadding: 15px;\r\n\tfont-size: 16px;\r\n\tborder: none;\r\n\tbox-sizing: border-box;\r\n  -webkit-box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\r\n  -moz-box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\r\n  box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\r\n\twidth: 100%;\r\n\tleft: 10%;\r\n\tfont-weight: bold;\r\n\tbottom: 25px;\r\n\tmargin: 25px 0;\r\n`;\r\nconst ResolutedSection = ({market}) => {\r\n\tconst [{flux}, dispatch] = useContext(FluxContext);\r\n\r\n\tconst updateBalance = async () => {\r\n\t\tconst updatedBalance = await flux.getFDaiBalance(flux.getAccountId());\r\n\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\r\n\t}\r\n\tconst [claimable, setClaimable] = useState(null);\r\n\tconst updateClaimable = () => {\r\n\t\tconst claimableAmount = flux.getClaimable(market.id, flux.getAccountId()).then(res => setClaimable(res));\r\n\t\treturn claimableAmount;\r\n\t}\r\n\r\n\tconst onClaimClick = async () => {\r\n\t\tif (canClaim === false) return;\r\n\t\tsetCanClaim(false);\r\n\t\tsetLoads(true);\r\n\t\ttry {\r\n\t\t\tawait flux.claimEarnings(market.id, flux.getAccountId());\r\n\t\t\tupdateClaimable();\r\n\t\t\tupdateBalance();\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\talert('Something went wrong. Look into the console!');\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t\tremoveMarket(market.id);\r\n\t\tsetLoads(false);\r\n\t\tsetCanClaim(true);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mounted = false;\r\n\t\tif (!mounted) updateClaimable();\r\n\t\treturn () => {\r\n\t\t\tmounted = true;\r\n\t\t};\r\n\t}, []);\r\n\tconst [loads, setLoads] = useState(false);\r\n\tconst [canClaim, setCanClaim] = useState(true);\r\n\r\n\tlet resolution;\r\n\tif (market.outcomes === 2) {\r\n\t\tif (market.winning_outcome === 0) resolution = \"NO\";\r\n\t\telse if (market.winning_outcome === 1) resolution = \"Yes\";\r\n\t\telse resolution = \"Invalid\";\r\n\t} else {\r\n\t\tresolution = market.outcome_tags[market.winning_outcome] ? market.outcome_tags[market.winning_outcome] : \"invalid\"\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ResolutedContainer>\r\n\t\t\t<ResolutionDate endTime={market.end_time}/>\r\n\t\t\t<Description>{capitalize(market.description)}</Description>\r\n\t\t\t<ResolutionTitle>\r\n\t\t\t\tResolution: <Resolution>{resolution}</Resolution>\r\n\t\t\t</ResolutionTitle>\r\n\r\n\t\t\t<ClaimButton onClick={onClaimClick}> {loads? 'Working...' : `Claim $${daiToDollars(claimable)}`}</ClaimButton> \r\n \t</ResolutedContainer>\r\n\t);\r\n};\r\n\r\nexport default ResolutedSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE, PINK } from '../../../constants';\r\nimport ResolutedSection from './ResolutedSection';\r\nimport MarketContent from './MarketContent.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MarketContainer = styled.div`\r\n  width: 90%;\r\n  padding: 0 5%;\r\n\tmargin-top: 25px;\r\n  position: static;\r\n\tcolor: ${DARK_BLUE};\r\n  display: block;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n  -webkit-box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\r\n  -moz-box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\r\n  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\r\n  margin-left: 5%;\r\n\r\n\t@media (min-width: 560px) {\r\n\t\toverflow: auto;\r\n\t\tmargin-bottom: 25px; \r\n\t}\r\n\r\n`;\r\n\r\nconst AllMarketsButton = styled(Link)`\r\n\tpadding-top: 14px;\r\n\tcolor: ${PINK};\r\n\tborder: none;\r\n\tfont-size: 18px;\r\n\ttext-align: center;\r\n\tdisplay: block;\r\n`\r\n\r\nfunction Market({market, specificId}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t<MarketContainer >\r\n\t\t\t{\r\n\t\t\t\tmarket \r\n\t\t\t\t?\r\n\t\t\t\t\t!market.resoluted ? <MarketContent specificId={specificId} market={market}/> : <ResolutedSection market={market}/>\r\n\t\t\t\t:\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\t\t</MarketContainer>\r\n\t\t{specificId &&<AllMarketsButton to=\"/\"> all markets</AllMarketsButton>}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Market;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Market from './Market/Market';\r\nimport Spinner from '../Spinner';\r\n\r\nconst MarketsContainer = styled.div`\r\n  width: 100%;\r\n  display: block;\r\n  margin: 0 auto;\r\n\tmargin-top: 80px;\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media (min-width: 560px) {\r\n\t\tmargin-top: 115px;\r\n\t}\r\n`\r\n\r\nconst Markets = ({markets, specificId}) => {\r\n\treturn (\r\n\t\t<MarketsContainer id=\"markets-container\">\r\n\t\t\t\t\r\n\t\t\t{\r\n\t\t\t\tmarkets === null ? \r\n\t\t\t\t<Spinner /> \r\n\t\t\t\t:\r\n\t\t\t\tmarkets.map((market) => (\r\n\t\t\t\t\t<Market market={market} specificId={specificId} key={market.id}/>\r\n\t\t\t\t))\r\n\t\t\t}\t\r\n\t\t</MarketsContainer>\r\n\t);\r\n}\r\n\r\nexport default (Markets);\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport BN from 'bn.js';\r\nimport { FluxContext } from '../FluxProvider';\r\nimport { PRE_PAID_GAS } from './../../constants';\r\nimport { removeMarket } from './../../utils/marketsUtils';\r\nimport Loader from '../Loader';\r\n\r\nconst Market = styled.div`\r\n\r\n`;\r\nconst OwnerPortalMarket = ({ market }) => {\r\n\tconst [loads, setLoads] = useState(false);\r\n\tconst [{flux}, dispatch] = useContext(FluxContext);\r\n\tconst deleteMarket = () => removeMarket(market.id);\r\n\tconst resolute = async (winningOutcome) => {\r\n\t\tconsole.log(\"resoluting...\");\r\n\t\ttry {\r\n\t\t\tsetLoads(true);\r\n\t\t\tawait flux.resolute(market.id, winningOutcome, market.resolute_bond);\r\n\t\t} \r\n\t\tcatch (err){\r\n\t\t\tconsole.error(err)\r\n\t\t\talert(err.message);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tsetLoads(false);\r\n\t\t\twindow.location.reload();\r\n\t\t}\r\n\t}\r\n\r\n\tlet resoluteButtons = [];\r\n\tif (market.outcomes === 2) {\r\n\t\tresoluteButtons = [<button key={0} onClick={() => resolute(0)}>resolute NO</button>, <button key={1} onClick={() => resolute(1)}>resolute YES</button>];\r\n\t} else {\r\n\t\tresoluteButtons = market.outcome_tags.map((outcomeTag, i) => (<button key={i} onClick={() => resolute(i)}>resolute {outcomeTag}</button>));\r\n\t\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t{loads && <Loader />}\r\n\t\t<Market>\r\n\t\t\t<p>{market.id}. {market.description}</p>\r\n\t\t\t<p>Resoluting markets is not available at the moment... </p>\r\n\t\t\t{\r\n\t\t\t\t/*\r\n\t\t\t{!market.resoluted ? \r\n\t\t\t<>\r\n\t\t\t\t<p>Resolutable: { market.end_time < new Date().getTime() ? \"true\" : \"false\" } </p>\r\n\t\t\t\t{resoluteButtons}\r\n\t\t\t\t<button onClick={() => resolute(null)}>Resolute invalid</button>\r\n\t\t\t</>\r\n\t\t  : \r\n\t\t\t<>\r\n\t\t\t\t<p>Resoluted: {market.outcome_tags[market.winning_outcome]} </p>\r\n\t\t\t</>\t\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t\t\t\r\n\t\t\t<button onClick={deleteMarket}> Delete</button>\r\n\t\t</Market>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\nexport default OwnerPortalMarket;","import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport OwnerPortalMarket from './OwnerPortalMarket';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport BN from 'bn.js';\r\nimport { FluxContext } from '../FluxProvider';\r\nimport {addMarket} from '../../utils/marketsUtils';\r\nimport Loader from '../Loader';\r\n\r\nconst OwnerPortalContainer = styled.div`\r\n\tpadding-top: 250px;\r\n\tbackground-color: white;\r\n`;\r\nconst ShowHideButton = styled.button`\r\n\tpadding-top: 250px;\r\n\tposition: absolute;\r\n`;\r\nconst MarketCreator = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\tpadding: '2px',\r\n};\r\n\r\nconst OwnerPortal = ({markets = []}) => {\r\n\tconst [{flux}, dispatch] = useContext(FluxContext);\r\n\tconst [isOwner, setIsOwner] = useState(false);\r\n\tconst [description, setDescription] = useState('new market');\r\n\tconst [categories, setCategories] = useState();\r\n\tconst [extraInfo, setExtraInfo] = useState('');\r\n\tconst [outcomes, setOutcomes] = useState(2);\r\n\tconst [endTime, setEndtime] = useState(new Date(new Date().setDate(new Date().getDate() + 1)));\r\n\tconst [show, toggleShow] = useState(false);\r\n\tconst [outcomeTags, setOutcomeTags] = useState([]);\r\n\tconst outcomeInputs = [];\r\n\tconst [loads, setLoads] = useState(false);\r\n\tconst [showsMarkets, setShowsMarkets] = useState(false);\r\n\r\n\tconst getIsOwner = async () => {\r\n    if (!flux.walletConnection.isSignedIn()) return false;\r\n\treturn true;\r\n\t}\r\n\t\r\n\tconst setOutcomeTag = (value, i) => {\r\n\t\tconst updatedTags = outcomeTags;\r\n\t\tupdatedTags[i] = value;\r\n\t\tif (!updatedTags[i]) {\r\n\t\t\talert(`Input ${i} is changed incorrectly!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetOutcomeTags(updatedTags);\r\n\t}\r\n\r\n\tif (outcomes > 2) {\r\n\t\tfor (let i = 0; i < outcomes; i++) {\r\n\t\t\toutcomeInputs.push(\r\n\t\t\t\t<div key={i}>\r\n\t\t\t\t<label htmlFor={`outcome${i}`}>{`Outcome ${i + 1}: `}</label>\r\n\t\t\t\t<input id={`outcome${i}`} type=\"text\" value={outcomeTags[i]} onChange={e => setOutcomeTag(e.target.value, i)}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t} \r\n\r\n  useEffect(() => {\r\n    getIsOwner().then(res => setIsOwner(res));\r\n  }, []);\r\n\r\n\r\n  const showMarketAdmin = () => {\r\n\tsetShowsMarkets(!showsMarkets);\r\n  };\r\n  const ChangeOutcomes = (e) => {\r\n\t  let { value } = e.target;\r\n\t  setOutcomes(value);\r\n  }\r\n\tconst createMarket = async (e) => {\r\n\t\tif (outcomes < 2) { \r\n\t\t\talert('Number of outcomes must be greater then 1');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"creating market...\");\r\n\t\tsetLoads(true);\r\n\t\te.preventDefault();\r\n\t\tconst categoryArray = categories && categories.length > 0 ? categories.split(\",\") : [];\r\n\t\ttry {\r\n\t\tconst signedMessage = await flux.account.connection.signer.signMessage(\"market_creation\", flux.getAccountId(), \"default\")\r\n\t\tconst txRes = await flux.createMarket(description, extraInfo, parseInt(outcomes), outcomeTags, [\"test\"], endTime.getTime(), 0);\r\n\t\tconst marketId = parseInt(atob(txRes.status.SuccessValue));\r\n\t\tconst { success } =  await addMarket(marketId, description, flux.getAccountId(), categoryArray, signedMessage);\r\n\t\tif (success) return; \r\n\t\tthrow new Error(\"Market wasn't successfully added to server\");\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\talert('Something went wrong. Look into the console!');\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(outcomeTags);\r\n\t\t}\r\n\t}\r\n\tconst ownerPortalMarkets = \tmarkets.map((market, key) => <OwnerPortalMarket key={key} market={market}/>);\r\n\treturn (\r\n\t\tisOwner ?\r\n\t\t<>\r\n\t\t\t{loads && <Loader />}\r\n\t\t\t<ShowHideButton onClick={e => toggleShow(!show)}>{show ? \"-\" : \"+\"}</ShowHideButton>\r\n\t\t\t{show && <OwnerPortalContainer>\r\n\t\t\t\t<label>New market:</label>\r\n\t\t\t\t<form style={MarketCreator}  onSubmit={ (e) => createMarket(e) }>\r\n\t\t\t\t\t<label htmlFor='desc'>Name:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='desc'\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tonChange={event => setDescription(event.target.value)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor='categories'>Categories:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='categories'\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={categories}\r\n\t\t\t\t\t\tplaceholder=\"categories\"\r\n\t\t\t\t\t\tonChange={event => setCategories(event.target.value)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor='extraInfo'>Extra Info:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={extraInfo}\r\n\t\t\t\t\t\tplaceholder=\"extra info\"\r\n\t\t\t\t\t\tonChange={event => setExtraInfo(event.target.value)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor='outcomes'> Number of outcomes:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t   \tid = 'outcomes'\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={outcomes}\r\n\t\t\t\t\t\tonChange={ChangeOutcomes}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{outcomeInputs}\r\n\r\n\t\t\t\t\t<label>end time:</label>\r\n\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\tvalue={endTime}\r\n\t\t\t\t\t\tonChange={setEndtime} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">Create Market</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<button onClick={showMarketAdmin}>{showsMarkets? 'Hide Markets' : 'Show Markets'} </button>\r\n\t\t\t\t{ showsMarkets && ownerPortalMarkets }\r\n\t\t\t\t\r\n\t\t\t</OwnerPortalContainer>}\r\n\t\t</>\r\n\t\t:\r\n\t\t<div></div>\r\n\t);\r\n};\r\n\r\nexport default OwnerPortal;","import React, { useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst FadeIn = keyframes`\r\n\tfrom {\r\n\t\topacity: 0;\r\n\t}\r\n\tto {\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\n\r\nconst MoveUp = keyframes`\r\n\tfrom {\r\n\t\tbottom: -40vh;\r\n\t}\r\n\tto {\r\n\t\tbottom: 0;\r\n\t}\r\n`;\r\n\r\n\r\nconst ModalContainer = styled.div`\r\n\tbackground-color: white;\r\n\tposition: fixed;\r\n\tbottom: 0;\r\n\twidth: 90%;\r\n\tz-index: 102;\r\n\tanimation: ${MoveUp} 500ms linear;\r\n\tpadding: 0 5%;\r\n\tpadding-bottom: 18px;\r\n`\r\n\r\nconst Blackground = styled.div`\r\n\tposition: fixed;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\ttop: 0;\r\n\tanimation: ${FadeIn} 500ms linear;\r\n\tleft: 0;\r\n\toverflow: hidden;\r\n\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\tz-index: 101;\r\n`\r\nfunction Modal({className, children, blackground, onBlackgroundClick}) {\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tdocument.body.style.overflow = 'hidden';\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.overflow = 'scroll';\r\n\t\t}\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{blackground && <Blackground onClick={onBlackgroundClick}/>}\r\n\t\t\t<ModalContainer className={className}>\r\n\t\t\t\t{children}\r\n\t\t\t</ModalContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n\r\nexport default Modal;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE } from '../../../constants';\r\n\r\nconst Input = styled.input`\r\n\tborder: 1px solid ${DARK_BLUE};\r\n\tborder-radius: 10px;\r\n\tcolor: ${DARK_BLUE};\r\n\tbox-shadow: none;\r\n\tfont-size: 18px;\r\n\tfont-weight: bold;\r\n\ttext-align: right;\r\n\tmax-width: 90px;\r\n\tpadding: 7px 7px;\r\n\tfont-weight: bold;\r\n\tz-index: 4;\r\n`;\r\n\r\nconst Demonination = styled.span`\r\n\tfont-size: 18px;\r\n\tcolor: ${DARK_BLUE};\r\n\tfont-weight: bold;\r\n\tz-index: 5;\r\n\tposition: absolute;\r\n\tleft: 7px;\r\n\ttop: 7px;\r\n\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tposition: relative;\r\n`\r\n\r\nexport default ({value, changeValue, denomination, focus}) => {\r\n\tlet input = React.createRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (focus) input.focus();\r\n\t},[]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Demonination>{denomination}</Demonination>\r\n\t\t\t<Input type=\"number\" value={value} ref={ref => input = ref} onChange={e => changeValue(e.target.value)}/>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport OrderInput from './OrderInput';\r\n\r\nlet StaticPrice = styled.span`\r\n\tmargin: 0 5px;\r\n\tfont-size: 18px;\r\n\tvertical-align: middle;\r\n\r\n`;\r\n\r\nlet ChangeButton = styled.span`\r\n\tfont-size: 12px;\r\n\ttext-decoration: underline;\r\n\tfont-weight: 400;\r\n`\r\n\r\nexport default function ChangeablePrice({price, changePrice}) {\r\n\tlet [marketOrder, setMarketOrder] = useState(true);\r\n\r\n\tif (price === 100) {\r\n\t\tprice = 50;\r\n\t\tchangePrice(50);\r\n\t}\r\n\r\n\treturn (\r\n\t\tmarketOrder && price !== 100 ? (\r\n\t\t\t<div onClick={() => setMarketOrder(false)}>\r\n\t\t\t\t<StaticPrice>{price}¢</StaticPrice>\r\n\t\t\t\t<ChangeButton >change</ChangeButton>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<OrderInput value={price} denomination={\"¢\"} focus={true} changeValue={changePrice} />\r\n\t\t)\r\n\t)\r\n};","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ChangeablePrice from './ChangeablePrice';\r\nimport OrderInput from './OrderInput';\r\nimport { PINK, DARK_BLUE } from '../../../constants';\r\nimport Button from '../../ModalButton';\r\n\r\nconst CancelButton = styled.p`\r\n\tcolor: ${PINK};\r\n\tfont-size: 18px;\r\n\tfont-weight: lighter;\r\n\ttext-decoration: underline;\r\n\ttext-align: right;\r\n`\r\n\r\nconst Row = styled.div`\r\n\twidth: 100%;\r\n\tfont-size: 18px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding-bottom: 6px;\r\n\tpadding-top: 12px;\r\n\tborder-bottom: 1px solid ${DARK_BLUE};\r\n`\r\nconst Key = styled.p`\r\n\tmargin: 0;\r\n`\r\nconst Value = styled.span`\r\n\tfont-weight: bold;\r\n`\r\n\r\nconst OrderForm = ({market, signedIn, outcome, closeModal, marketPrice, placeOrder}) => {\r\n\tconst [price, setPrice] = useState(marketPrice);\r\n\tconst [spend, setSpend] = useState(1);\r\n\tlet label;\r\n\tif (market) {\r\n\t\tconst outcomeTagExists = !!market.outcome_tags[outcome];\r\n\t\tlabel = outcomeTagExists ? market.outcome_tags[outcome] : outcome === 0 ? \"NO\" : \"YES\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CancelButton onClick={closeModal}>cancel</CancelButton>\r\n\t\t\t<Row>\r\n\t\t\t\t<Key>contract:</Key>\r\n\t\t\t\t<Value>{label}</Value>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Key>price per contract:</Key>\r\n\t\t\t\t<Value>\r\n\t\t\t\t<ChangeablePrice changePrice={setPrice} price={price} />\r\n\t\t\t\t</Value>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Key>total cost:</Key>\r\n\t\t\t\t<OrderInput value={spend} denomination={\"$\"} changeValue={setSpend}/>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Button onClick={() => signedIn && placeOrder(price, spend)} color={signedIn ? DARK_BLUE : \"grey\"}>{signedIn ? \"BUY CONTRACT\" : \"PLEASE SIGN IN\"}</Button>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default OrderForm;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE, PINK } from '../../../constants';\r\nimport ErrorIcon from './../../../assets/error.png'\r\nimport SuccessIcon from './../../../assets/success.png'\r\nimport ModalButton from '../../ModalButton';\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\n\r\nconst ResIcon = styled.img`\r\n\theight: 75px;\r\n\twidth: 75px;\r\n\tdisplay: block;\r\n\tpadding-top: 15px;\r\n\tmargin: auto;\r\n`;\r\nconst Text = styled.p`\r\n\tfont-size: 19px;\r\n\tfont-weight: lighter;\r\n\ttext-align: center;\r\n\tpadding: 10px 0;\r\n\tmargin: 0;\r\n\tcolor: ${DARK_BLUE};\r\n`;\r\n\r\nconst Title = styled.div`\r\n\tfont-size: 24px;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tpadding-top: 45px;\r\n\tpadding-bottom: 10px;\r\n\tcolor: ${DARK_BLUE};\r\n`;\r\n\r\nconst BoldText = styled.span`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst LinkText = styled(Text)`\r\n\ttext-decoration: underline;\r\n\tfont-size: 14px;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport default function OrderRes({amountOfShares, res, closeModal}) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>{!res.error ? \"Success\" : \"Something went wrong\"}</Title>\r\n\t\t\t<ResIcon src={!res.error ? SuccessIcon : ErrorIcon} alt=\"logo reflecting if the order faield or was successful\"/>\r\n\t\t\t<Text>{!res.error ? \"order placed for\" : \"couldn't place order for\"} <BoldText>{amountOfShares.toFixed(2)} shares</BoldText></Text>\r\n\t\t\t{!res.error && <LinkText onClick = {() => window.open(`https://explorer.nearprotocol.com/transactions/${res.tx}`)}>view tx</LinkText>}\r\n\t\t\t<ModalButton onClick={closeModal} color={!res.error ? DARK_BLUE : PINK}>{!res.error ? \"Done\" : \"Close\"}</ModalButton>\r\n\t\t</Container>\r\n\t)\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DARK_BLUE } from '../../../constants';\r\nimport fluxLogo from './../../../assets/logo.png'\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst Title = styled.div`\r\n\tfont-size: 24px;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tpadding-top: 45px;\r\n\tpadding-bottom: 10px;\r\n\tcolor: ${DARK_BLUE};\r\n\t\r\n`;\r\n\r\nconst FluxLogo = styled.img`\r\n\theight: 125px;\r\n\twidth: 125px;\r\n\tdisplay: block;\r\n\tpadding-top: 15px;\r\n\tmargin: auto;\r\n\tanimation: wiggle 1.5s linear infinite;\r\n\r\n\t@keyframes wiggle {\r\n    0% { transform: rotate(0deg); }\r\n   \t50% { transform: rotate(0deg); }\r\n   \t70% { transform: rotate(30deg); }\r\n   \t90% { transform: rotate(-30deg); }\r\n  \t100% { transform: rotate(0deg); }\r\n\t}\r\n\r\n\r\n`;\r\n\r\nconst Text = styled.p`\r\n\tfont-size: 19px;\r\n\tfont-weight: lighter;\r\n\ttext-align: center;\r\n\tpadding: 10px 0;\r\n\tmargin: 0;\r\n\tpadding-bottom: 45px;\r\n\tcolor: ${DARK_BLUE};\r\n`;\r\n\r\nconst BoldText = styled.span`\r\n\tfont-weight: bold;\r\n`;\r\nexport default function OrderLoader({amountOfShares}) {\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>Processing</Title>\r\n\t\t\t<FluxLogo src={fluxLogo}/>\r\n\t\t\t<Text>placing order for <BoldText>{amountOfShares.toFixed(2)} shares</BoldText></Text>\r\n\t\t</Container>\r\n\t)\r\n};","import React, { useContext, useState } from 'react';\r\nimport Modal from './../../Modal';\r\nimport OrderForm from './OrderForm';\r\nimport OrderRes from './OrderRes';\r\nimport OrderLoader from './OrderLoader';\r\nimport { OrderContext } from '../../OrderProvider';\r\nimport { FluxContext } from '../../FluxProvider';\r\nimport { dollarsToDai } from '../../../utils/unitConvertion';\r\nimport { updateMarket } from '../../../utils/marketsUtils';\r\n\r\nfunction OrderModal() {\r\n\tconst [ orderContext, dispatchOrderContext ] = useContext(OrderContext);\r\n\tconst [ {flux}, dispatchFlux ] = useContext(FluxContext);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\tconst [ orderRes, setOrderRes ] = useState(null);\r\n\tconst [ amountOfShares, setAmountOfShares ] = useState(0);\r\n\tconst market = orderContext.market;\r\n\tconst signedIn = flux.isSignedIn();\r\n\t\r\n\tconst closeModal = () => {\r\n\t\tsetOrderRes(null);\r\n\t\tdispatchOrderContext({type: 'stopOrderPlacement'});\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\tconst placeOrder = async (price, spend) => {\r\n\t\tconst shares = spend / price * 100\r\n\t\tsetAmountOfShares(shares);\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await flux.placeOrder(market.id, orderContext.outcome, dollarsToDai(spend), parseInt(price)).catch(err => console.error(err));\r\n\t\t\tconst updatedBalance = await flux.getFDaiBalance().catch(err => console.error(err));\r\n\t\t\tdispatchFlux({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\r\n\t\t\tsetOrderRes({error: false, tx: res.transaction.hash});\r\n\r\n\t\t} catch (err){\r\n\t\t\tconsole.error(err);\r\n\t\t\tsetOrderRes({error: true})\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\tmarket && <Modal blackground={true} onBlackgroundClick={closeModal}>\r\n\t\t\t{\r\n\t\t\t\t!loading && orderRes !== null ?\r\n\t\t\t\t<OrderRes closeModal={closeModal} res={orderRes} amountOfShares={amountOfShares}/>\r\n\t\t\t\t:\r\n\t\t\t\tloading \r\n\t\t\t\t?\r\n\t\t\t\t<OrderLoader amountOfShares={amountOfShares}/>\r\n\t\t\t\t:\r\n\t\t\t\t<OrderForm closeModal={closeModal} signedIn={signedIn} market={market} placeOrder={placeOrder} marketPrice={orderContext.price} outcome={orderContext.outcome} />\r\n\t\t\t}\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default OrderModal;","import React, { useEffect, useContext, useState} from 'react';\r\nimport Header from './Header';\r\nimport Markets from './Markets/Markets';\r\nimport OwnerPortal from './OwnerPortal/OwnerPortal';\r\nimport OrderModal from './Markets/Market/OrderModal';\r\nimport Loader from './Loader';\r\nimport { FluxContext, connect } from './FluxProvider';\r\nimport { OrderProvider } from './OrderProvider';\r\nimport {getMarkets} from '../utils/marketsUtils';\r\n\r\nfunction App({...props}) {\r\n  const [{flux}, dispatch] = useContext(FluxContext);\r\n  const [markets, setMarkets] = useState([]);\r\n\r\n  const specificId = props.match.params.marketId;\r\n  \r\n  useEffect(() => {\r\n    connect().then( async fluxInstance => {\r\n      dispatch({type: 'connected', payload: {flux: fluxInstance}});\r\n      let marketIds = [];\r\n      if (specificId) {\r\n        marketIds = [parseInt(specificId)];\r\n      } else {\r\n        const res = await getMarkets([])\r\n        marketIds = res.markets.length > 0 ? res.markets.map(market => parseInt(market.marketId)) : [];\r\n      }\r\n      fluxInstance.getMarketsById(marketIds).then(res => {\r\n        setMarkets(fluxInstance.formatMarkets(res));\r\n      })\r\n    })\r\n  }, [specificId]);\r\n\r\n\r\n\r\n  return (\r\n    flux ?\r\n    <>\r\n      <OwnerPortal markets={markets}/>\r\n      <Header />\r\n      <OrderProvider>\r\n        <Markets specificId={specificId} markets={markets}/>\r\n        <OrderModal />\r\n      </OrderProvider>\r\n    </>\r\n    :\r\n    <Loader txLoading={true}/>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { Wampy } from 'wampy'\r\nimport { providers, Account } from 'nearlib';\r\nimport { NEAR_RPC_URL } from '../../constants';\r\nconst WAMP_NEAR_EXPLORER_URL = 'wss://near-explorer-wamp.onrender.com/ws'\r\nconst WAMP_NEAR_EXPLORER_TOPIC_PREFIX = 'com.nearprotocol.testnet.explorer'\r\n\r\nconst wamp = new Wampy(WAMP_NEAR_EXPLORER_URL, { realm: 'near-explorer' })\r\n\r\nasync function getFunctionCallArgs(txHash, accountId) {\r\n    const res = await fetch(`https://rpc.nearprotocol.com`, {\r\n        method: 'POST',\r\n        headers: { 'Content-type': 'application/json; charset=utf-8' },\r\n        body: JSON.stringify({\r\n            method: 'tx',\r\n            params: [txHash, accountId],\r\n            id: 'dontcare',\r\n            jsonrpc: '2.0'\r\n        }),\r\n    })\r\n\r\n    const json = await res.json();\r\n    return {returned: json.result.status.SuccessValue !== undefined ? atob(json.result.status.SuccessValue) : false,...JSON.parse(atob(json.result.transaction.actions[0].FunctionCall.args))}\r\n}\r\n\r\nasync function callWamp(procedure, args) {\r\n    return new Promise((resolve, reject) => wamp.call(\r\n        `${WAMP_NEAR_EXPLORER_TOPIC_PREFIX}.${procedure}`,\r\n        args,\r\n        {\r\n            onSuccess(dataArr) {\r\n                resolve(dataArr[0])\r\n            },\r\n            onError(err) {\r\n                reject(err);\r\n            }\r\n        }\r\n    ));\r\n}\r\n\r\nexport async function getTransactions(accountId = '') {\r\n    const tx = await callWamp(\r\n        `select`,\r\n        [\r\n            `\r\n                SELECT \r\n                    transactions.hash,\r\n                    transactions.signer_id as signerId,\r\n                    blocks.timestamp as timestamp,\r\n                    actions.action_type as type,\r\n                    actions.action_args as action_args\r\n                FROM\r\n                    transactions\r\n                LEFT JOIN blocks ON blocks.hash = transactions.block_hash\r\n                LEFT JOIN actions ON actions.transaction_hash = transactions.hash\r\n                WHERE\r\n                    receiver_id = :accountId\r\n                ORDER BY blocks.height ASC\r\n            `,\r\n            {accountId}\r\n        ],\r\n    );\r\n    const allPlaceOrders = tx.filter(t => t.type === \"FunctionCall\" && JSON.parse(t.action_args).method_name === \"place_order\");\r\n    const placeOrderArgProms = allPlaceOrders.map(transaction => getFunctionCallArgs(transaction.hash, transaction.signerId));\r\n    const placeOrderArgs = await Promise.all(placeOrderArgProms);\r\n    const placeOrderTxWithArgs = allPlaceOrders.map((t, i) => ({args: placeOrderArgs[i], ...t}))\r\n    const validTx = placeOrderTxWithArgs.filter(tx => tx.args.returned === \"\")\r\n    \r\n    const allMarketCreations = tx.filter(t => t.type === \"FunctionCall\" && JSON.parse(t.action_args).method_name === \"create_market\");\r\n    const marketCreationArgProms = allMarketCreations.map(transaction => getFunctionCallArgs(transaction.hash, transaction.signerId));\r\n    const marketCreationArgs = await Promise.all(marketCreationArgProms);\r\n    const createdMarketTxWithArgs = allMarketCreations.map((t, i) => ({args: marketCreationArgs[i], ...t}))\r\n    const validMarketTx = createdMarketTxWithArgs.filter(tx => tx.args.returned)\r\n    return {\r\n        ordersPlaced: validTx,\r\n        marketsCreated: validMarketTx\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","export default data => {\r\n\t/* goal:\r\n\t\t {\r\n\t\t\t marketId: {\r\n\t\t\t\t description: \"description\",\r\n\t\t\t\t data: [\r\n\t\t\t\t\t {date: exampleDate, outcome1: price, outcome2: price [...]},\r\n\t\t\t\t\t {...}\r\n\t\t\t\t ]\r\n\t\t\t }\r\n\t\t }\r\n\t*/\r\n\r\n\tconst ordersMappedToMarkets = mapOrdersToMarkets(data);\t\r\n\tconst groupedByDateAndMerged = {};\r\n\tObject.keys(ordersMappedToMarkets).forEach(marketId => {\r\n\t\tconst marketData = ordersMappedToMarkets[marketId];\r\n\t\tconst orderData = ordersMappedToMarkets[marketId].data;\r\n\t\tconst dates = [];\r\n\t\tgroupedByDateAndMerged[marketId] = {description: marketData.description, data:[]};\r\n\r\n\t\torderData.forEach(order => {\r\n\t\t\tconst date = new Date(order.timestamp);\r\n\t\t\tconst dateString = date.getDate() + \"/\" + (parseInt(date.getMonth()) + 1) + \"/\" + date.getFullYear();\r\n\t\t\tif (!dates[dateString]) dates[dateString] = [];\r\n\t\t\tif (!dates[dateString][order.outcome]) dates[dateString][order.outcome] = [];\r\n\t\t\tdates[dateString][order.outcome].push(order.price_per_share)\r\n\t\t})\r\n\r\n\t\tObject.keys(dates).forEach(date => {\r\n\t\t\tconst outcomeData = dates[date];\r\n\t\t\tconst dataObj = {date}\r\n\t\t\toutcomeData.forEach((priceList, outcome) => {\r\n\t\t\t\tconst avg = (priceList.reduce((sum, val) => sum + val) / priceList.length).toFixed(2);\r\n\t\t\t\tdataObj[outcome] = avg;\r\n\t\t\t})\r\n\t\t\tgroupedByDateAndMerged[marketId].data.push(dataObj);\r\n\t\t});\r\n\r\n\t})\r\n\r\n\treturn groupedByDateAndMerged;\r\n\t\r\n}\r\n\r\n\r\nfunction mapOrdersToMarkets(data) {\r\n\tconst ordersMappedByMarket = {};\r\n\r\n\tdata.ordersPlaced.forEach(order => {\r\n\t\tconst marketId = order.args.market_id;\r\n\t\tif (!ordersMappedByMarket[marketId]) ordersMappedByMarket[marketId] = {}\r\n\t\tif (!ordersMappedByMarket[marketId][\"data\"]) ordersMappedByMarket[marketId][\"data\"] = []\r\n\r\n\t\tordersMappedByMarket[marketId][\"data\"].push({\r\n\t\t\t...order.args,\r\n\t\t\ttimestamp: order.timestamp\r\n\t\t})\r\n\t});\r\n\r\n\t\r\n\tdata.marketsCreated.forEach(tx => {\r\n\t\tconst marketId = tx.args.returned;\r\n\t\tconst description = tx.args.description;\r\n\t\tif (ordersMappedByMarket[marketId]) ordersMappedByMarket[marketId].description = description;\r\n\t})\r\n\treturn ordersMappedByMarket;\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { getTransactions } from './explorer-api';\r\nimport { FluxContext, connect } from '../FluxProvider';\r\nimport formatData from './formatData';\r\nimport allTxLatest from './allTxLatest';\r\nimport { LineChart, Line, YAxis, XAxis, Tooltip } from 'recharts';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartContainer = styled.div`\r\n\tpadding: 0 5%;\r\n`\r\n\r\nconst Title = styled.h1`\r\n`\r\n\r\nfunction Dashboard() {\r\n\tconst [flux, dispatch] = useContext(FluxContext);\r\n\tconst [charts, setCharts] = useState([]);\r\n\tconst [loadingState, setLoadingState] = useState(\"fetching\");\r\n\r\n\tconst fetchData = async () => {\r\n\t\tconst allData = await getTransactions(\"flux-protocol-dev\");\r\n\t\treturn JSON.stringify(allData);\r\n\t}\r\n\r\n\tconst formatToolTip = (value, name, outcomeTags) => {\r\n\r\n\t\tif (outcomeTags.length > 0) {\r\n\t\t\tname = outcomeTags[name];\r\n\t\t} else {\r\n\t\t\tname = name === \"0\" ? \"NO\" : \"YES\";\r\n\t\t}\r\n\t\treturn [value, name]\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tfetchData().then(tx => {\r\n\t\t\tsetLoadingState(\"formatting\");\r\n\t\t\tconst data = formatData(JSON.parse(tx));\r\n\t\t\tmapOutcomeTagsToOutcomes(data).then(mappedData => {\r\n\r\n\t\t\t\tconst elems = Object.keys(mappedData).map((marketId, i) => {\r\n\r\n\t\t\t\t\tconst marketData = data[marketId];\r\n\t\t\t\t\tlet lines = []\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst colors = [\r\n\t\t\t\t\t\t\"red\",\r\n\t\t\t\t\t\t\"blue\",\r\n\t\t\t\t\t\t\"purple\",\r\n\t\t\t\t\t]\r\n\t\t\t\t\t\r\n\t\t\t\t\tmarketData.data.forEach(entry => {\r\n\t\t\t\t\t\tconst keys = Object.keys(entry);\r\n\t\t\t\t\t\tfor (let i = 0; i < keys.length -1; i++) {\r\n\t\t\t\t\t\t\tconst outcome = keys[i];\r\n\t\t\t\t\t\t\tif (!lines[outcome]) lines[outcome] = <Line type=\"monotone\" dataKey={outcome} key={i} stroke={colors[i]}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (marketData.description !== \"new market\") {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ChartContainer key={i} >\r\n\t\t\t\t\t\t\t\t<Title>{marketData.description}</Title>\r\n\t\t\t\t\t\t\t\t<LineChart width={400} height={400} data={marketData.data}>\r\n\t\t\t\t\t\t\t\t\t{lines}\r\n\t\t\t\t\t\t\t\t\t<Tooltip formatter={(value, name) => formatToolTip(value, name, marketData.outcomeTags)} />\r\n\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"date\"/>\r\n\t\t\t\t\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t</ChartContainer>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetCharts(elems);\r\n\t\t\t\tsetLoadingState(null);\r\n\t\t\t});\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst mapOutcomeTagsToOutcomes = async (data) => {\r\n\t\tconst fluxInstance = await connect();\r\n\t\tconst allMarkets=  await fluxInstance.getAllMarkets();\r\n\t\t\r\n\t\tObject.keys(data).forEach(marketId => {\r\n\t\t\tconst market = allMarkets[marketId];\r\n\t\t\tdata[marketId][\"outcomeTags\"] = market.outcome_tags;\r\n\t\t})\r\n\t\r\n\t\treturn data;\r\n\t}\r\n\r\n\tif (loadingState === \"fetching\") {\r\n\t\treturn (\r\n\t\t\t<div> fetching latest order data from NEAR explorer... </div>\r\n\t\t)\r\n\t} else if (loadingState === \"formatting\") {\r\n\t\treturn <div> formatting data... </div>\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{charts}\r\n\t\t\t</div>\r\n\t\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport GlobalStyles from  \"./global-styles\";\r\nimport App from './components/App';\r\nimport { FluxProvider } from './components/FluxProvider';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nReactDOM.render(\r\n\t<>\r\n\t\t<GlobalStyles/>\r\n\t\t<FluxProvider>\r\n\t\t\t\t<Router basename=\"/ArterraFluxDemo\">\r\n\t\t\t\t\t<Route exact path=\"/\" component={App}/>\r\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard}/>\r\n\t\t\t\t\t<Route path=\"/market/:marketId?\" component={App}/>\r\n\t\t\t\t</Router>\r\n\t\t</FluxProvider>\r\n\t</>\r\n\t, \r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}