{"version":3,"sources":["assets/error.png","assets/success.png","serviceWorker.js","global-styles.js","constants.js","utils/unitConvertion.js","components/FluxProvider.js","components/Header.js","utils/dateUtils.js","components/Markets/Market/CountdownTimer.js","components/Markets/Market/EndDate.js","components/Markets/Market/ResolutionDate.js","utils/stringManipulation.js","components/Markets/Market/ExtraInfo.js","components/OrderProvider.js","components/Markets/Market/OutcomeButton.js","components/ModalButton.js","components/Spinner.js","components/Loader.js","components/Markets/Market/UserPositions/CancelButton.js","components/Markets/Market/UserPositions/OpenOrders.js","components/Markets/Market/UserPositions/FilledOrderButton.js","components/Markets/Market/UserPositions/FilledOrders.js","components/Markets/Market/UserPositions/UserPositions.js","components/Markets/Market/MarketContent.js","utils/marketsUtils.js","components/Markets/Market/ResolutedSection.js","components/Markets/Market/Market.js","components/Markets/Markets.js","components/OwnerPortal/OwnerPortalMarket.js","components/OwnerPortal/OwnerPortal.js","components/Modal.js","components/Markets/Market/OrderInput.js","components/Markets/Market/ChangeablePrice.js","components/Markets/Market/OrderForm.js","components/Markets/Market/OrderRes.js","components/Markets/Market/OrderLoader.js","components/Markets/Market/OrderModal.js","components/App.js","components/Dashboard/explorer-api.js","components/Dashboard/formatData.js","components/Dashboard/index.js","index.js","assets/logo.png"],"names":["module","exports","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","daiToDollars","num","toFixed","initialState","flux","balance","reducer","state","action","type","payload","connect","a","fluxInstance","Flux","walletConnection","isSignedIn","getFDaiBalance","claimFDai","FluxContext","React","createContext","FluxProvider","children","useReducer","dispatch","Provider","value","Logo","styled","img","HeaderContainer","header","LoginButton","button","AccountInfo","span","AllowanceWarning","div","Header","useContext","reloadApp","reload","undefined","getAccountId","then","updatedBalance","catch","err","console","error","onClick","id","src","fluxLogo","alt","signOut","signIn","moreThanWeekFromNow","time","Date","getTime","timeDiff","TimeValue","CountDownTimer","days","hours","minutes","seconds","completed","Moment","EndDate","endTime","ended","format","TimeIndicator","ResolutionDate","zeroPadTime","date","renderer","CountdownTimer","capitalize","s","charAt","toUpperCase","slice","ExtraInfoContainer","ShowInfoButton","Title","p","Info","ExtraInfo","data","market","useState","showInfo","toggleShowInfo","outcome","price","OrderContext","OrderProvider","order","Button","Label","LastTradedPrice","MarketPrice","OutcomeButton","label","binary","index","color","lastTradedPrice","last_price_for_outcomes","hasLastTradedPrice","ColoredButton","className","StyledButton","Spinner","spinner","StyledSpinner","Loader","ButtonData","BoldText","CancelText","selected","setSelected","cancelOrder","canceled","setCanceled","spend","filled","OpenOrders","orders","selectedOrder","setSelectedOrder","StyledHeader","buttons","map","i","outcome_tags","outcomes","CancelButton","key","HeaderSection","sharesFilled","FilledOrderButton","Container","OrderSection","ButtonContainer","ModalButton","UserPositions","closeModal","accountId","updateMarketOrders","setOrders","useEffect","mounted","document","body","style","overflow","filterUserOrders","end_time","Description","description","openOrders","FilledOrders","filledOrders","ButtonSection","h1","PositionsButton","FirstHeader","SecondHeader","ThirdHeader","TopSection","MarketContent","props","marketOrders","setMarketOrders","showPositions","setShowPositions","extra_info","getAndSetMarketPrices","getMarketPrices","alert","tag","push","addMarket","marketId","categories","signedMessage","Error","markets","JSON","parse","localStorage","getItem","Array","isArray","unshift","publicKey","toString","setItem","stringify","success","getMarkets","length","removeMarket","log","indexToRemove","findIndex","splice","ResolutedContainer","ResolutionTitle","h2","Resolution","ClaimButton","ResolutedSection","updateBalance","claimable","setClaimable","updateClaimable","getClaimable","res","onClaimClick","canClaim","setCanClaim","setLoads","claimEarnings","resolution","loads","winning_outcome","MarketContainer","AllMarketsButton","Link","Market","specificId","resoluted","to","MarketsContainer","Markets","OwnerPortalMarket","resolute","winningOutcome","resoluteButtons","outcomeTag","OwnerPortalContainer","ShowHideButton","MarketCreator","display","flexDirection","padding","OwnerPortal","isOwner","setIsOwner","setDescription","setCategories","extraInfo","setExtraInfo","setOutcomes","setDate","getDate","setEndtime","show","toggleShow","outcomeTags","setOutcomeTags","outcomeInputs","showsMarkets","setShowsMarkets","getIsOwner","htmlFor","onChange","e","updatedTags","setOutcomeTag","target","createMarket","preventDefault","categoryArray","split","account","connection","signer","signMessage","parseInt","txRes","atob","status","SuccessValue","ownerPortalMarkets","onSubmit","event","placeholder","FadeIn","keyframes","MoveUp","ModalContainer","Blackground","Modal","blackground","onBlackgroundClick","Input","input","Demonination","changeValue","denomination","focus","createRef","ref","StaticPrice","ChangeButton","ChangeablePrice","changePrice","marketOrder","setMarketOrder","OrderInput","Row","Key","Value","OrderForm","signedIn","marketPrice","placeOrder","setPrice","setSpend","ResIcon","Text","LinkText","OrderRes","amountOfShares","ErrorIcon","SuccessIcon","open","tx","FluxLogo","OrderLoader","OrderModal","orderContext","dispatchOrderContext","dispatchFlux","loading","setLoading","orderRes","setOrderRes","setAmountOfShares","transaction","hash","App","setMarkets","params","marketIds","getMarketsById","formatMarkets","txLoading","wamp","Wampy","realm","getFunctionCallArgs","txHash","fetch","method","headers","jsonrpc","json","returned","result","actions","FunctionCall","args","callWamp","procedure","Promise","resolve","reject","call","onSuccess","dataArr","onError","getTransactions","allPlaceOrders","filter","t","action_args","method_name","placeOrderArgProms","signerId","all","placeOrderArgs","placeOrderTxWithArgs","validTx","allMarketCreations","marketCreationArgProms","marketCreationArgs","createdMarketTxWithArgs","validMarketTx","ordersPlaced","marketsCreated","ordersMappedToMarkets","ordersMappedByMarket","forEach","market_id","timestamp","mapOrdersToMarkets","groupedByDateAndMerged","Object","keys","marketData","orderData","dates","dateString","getMonth","getFullYear","price_per_share","outcomeData","dataObj","priceList","avg","reduce","sum","val","ChartContainer","Dashboard","charts","setCharts","loadingState","setLoadingState","fetchData","allData","formatData","mapOutcomeTagsToOutcomes","mappedData","elems","lines","colors","entry","dataKey","stroke","width","height","formatter","name","formatToolTip","getAllMarkets","allMarkets","ReactDOM","render","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,mRCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kRCfN,IAWeC,EAXKC,YAAH,ICAQ,W,gDCDZC,EAAe,SAACC,GAC5B,OAAQA,EAAG,SAAG,GAAM,KAAIC,QAAQ,I,0BCA3BC,EAAe,CACpBC,KAAM,KACNC,QAAS,MAEJC,EAAU,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACb,IAAK,YACJ,OAAY,eACRF,EADQ,CAEXH,KAAMI,EAAOE,QAAQN,OAGvB,IAAK,gBACJ,OAAY,eACRG,EADQ,CAEXF,QAASG,EAAOE,QAAQL,UAG1B,QACC,OAAOE,IAKGI,EAAO,uCAAG,4BAAAC,EAAA,6DACfC,EAAe,IAAIC,IADJ,SAEfD,EAAaF,QAAQ,qBAFN,WAGjBE,EAAaE,iBAAiBC,aAHb,0CAKXH,EAAaI,iBALF,wEAOXJ,EAAaK,YAPF,iCAUdL,GAVc,yDAAH,qDAaPM,EAAcC,IAAMC,cAAclB,GAElCmB,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAClBC,qBAAWlB,EAASH,GADF,mBACpCC,EADoC,KAC9BqB,EAD8B,KAG3C,OACC,kBAACN,EAAYO,SAAb,CAAsBC,MAAO,CAACvB,EAAMqB,IAAYF,I,uuCCvClD,IAAMK,EAAOC,IAAOC,IAAV,KAOJC,EAAkBF,IAAOG,OAAV,IHTI,WG+BnBC,EAAcJ,IAAOK,OAAV,IHjCQ,UAOJ,UAPI,WG4CnBC,EAAcN,IAAOO,KAAV,KAOXC,EAAmBR,IAAOS,IAAV,KAqDPC,MAxCf,WAAmB,IAAD,EACmBC,qBAAWrB,GAD9B,0BACTf,EADS,EACTA,KAAMC,EADG,EACHA,QAAUoB,EADP,KAEXT,EAAaZ,EAAKW,iBAAiBC,aAEnCyB,EAAY,WACjB/C,OAAOC,SAAS+C,UAUjB,OAPiB,OAAZrC,QAAgCsC,IAAZtC,IAA0BD,EAAKY,cAEvDZ,EAAKa,eAAeb,EAAKwC,cAAcC,MAAK,SAAAC,GAAc,OACzDrB,EAAS,CAAChB,KAAM,gBAAiBC,QAAS,CAACL,QAASyC,QACnDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MAI7B,kBAACjB,EAAD,KACE,kBAACH,EAAD,CAAMuB,QAASV,EAAWW,GAAG,cAAcC,IAAKC,IAAUC,IAAI,qBAE7DvC,EAMA,oCACC,kBAACmB,EAAD,SAAe/B,EAAKwC,eAApB,IAAoC,kBAACP,EAAD,UAApC,KACA,kBAACF,EAAD,cAA2BQ,IAAZtC,EAAA,WAA4BL,EAAaK,IAAa,MACrE,kBAAC4B,EAAD,CAAakB,QAAS,WACrB/C,EAAKoD,UACLf,MAFD,aAPD,kBAACR,EAAD,CAAakB,QAAS,WACtB/C,EAAKqD,WADL,aClFQC,EAAsB,SAAAC,GAElC,OARgB,SAAAA,GAGhB,OADaA,GADD,IAAIC,MAAOC,UAMVC,CAASH,GACR,Q,sGCLf,IAAMI,EAAYlC,IAAOO,KAAV,KAGA,SAAS4B,EAAT,GAAuE,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAC9D,OADoF,EAAbC,UAE9D,6CAEA,0CAAe,kBAACN,EAAD,KAAYE,EAAZ,SAAwBC,EAAQ,GAAK,IAAMA,EAAQA,EAAnD,IAA2DC,EAAU,GAAK,IAAMA,EAAUA,EAA1F,IAAqGC,EAAU,GAAK,IAAMA,EAAUA,I,mHCN7J,IAAML,EAAYlC,YAAOyC,IAAPzC,CAAH,KAIA,SAAS0C,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MAEzC,OAAO,6BAAOA,EAA4B,QAApB,kBAAf,KAA6C,kBAAC,EAAD,CAAWC,OAAO,cAAc,IAAId,KAAKY,K,yLCF9F,IAAMG,EAAgB9C,IAAOO,KAAV,IPLM,WOcV,SAASwC,EAAT,GAAoC,IAAXJ,EAAU,EAAVA,QACjCC,EAAQD,IAAW,IAAIZ,MAAOC,UAEpC,OACC,kBAACc,EAAD,KAEEjB,EAAoBc,IAAYC,EAAQ,kBAACF,EAAD,CAASE,MAAOA,EAAOD,QAASA,IAAc,kBAAC,IAAD,CAAWK,YAAa,EAAGC,KAAMN,EAASO,SAAUC,KCvBvI,IAAMC,EAAa,SAACC,GAC1B,GAAKA,EACL,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,I,upBCE5C,IAAMC,GAAqBzD,IAAOS,IAAV,MAIlBiD,GAAiB1D,IAAOK,OAAV,KTLK,oBAOJ,WSafsD,GAAQ3D,IAAO4D,EAAV,MAKLC,GAAO7D,IAAO4D,EAAV,KAMK,SAASE,GAAT,GAAoC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAAS,EAChBC,oBAAS,GADO,mBAC5CC,EAD4C,KAClCC,EADkC,KAGjD,OACC,kBAACV,GAAD,KACC,kBAACC,GAAD,CAAgBpC,QAAS,kBAAM6C,GAAgBD,KAAYA,EAAW,IAAM,KAE3EA,GACC,6BACC,kBAACP,GAAD,oBACA,kBAACE,GAAD,KAAOE,GACP,kBAACF,GAAD,mBAAkBG,EAAOzC,MC3C/B,IAAMjD,GAAe,CACpB0F,OAAQ,KACRI,QAAS,KACTC,MAAO,MAEF5F,GAAU,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACb,IAAK,sBACJ,MAAe,CACdoF,OAAQrF,EAAOE,QAAQmF,OACvBI,QAASzF,EAAOE,QAAQuF,QACxBC,MAAO1F,EAAOE,QAAQwF,OAGxB,IAAK,qBACJ,OAAe/F,GAEhB,QACC,OAAOI,IAKG4F,GAAe/E,IAAMC,cAAclB,IAEnCiG,GAAgB,SAAC,GAAgB,IAAf7E,EAAc,EAAdA,SAAc,EAClBC,qBAAWlB,GAASH,IADF,mBACrCkG,EADqC,KAC9B5E,EAD8B,KAG5C,OACC,kBAAC0E,GAAazE,SAAd,CAAuBC,MAAO,CAAC0E,EAAO5E,IAAYF,I,mlCC1B7C,IAAM+E,GAASzE,IAAOK,OAAV,KXFM,WWyBnBqE,GAAQ1E,IAAOO,KAAV,MAMLoE,GAAkB3E,IAAOO,KAAV,MAKfqE,GAAc5E,IAAOO,KAAV,MA6BFsE,GAtBO,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOhB,EAAmB,EAAnBA,OAAQK,EAAW,EAAXA,MAAW,EACjC1D,qBAAW2D,IADsB,mBAC7C1E,GAD6C,WAE1DqF,EAAQF,EAAmB,IAAVC,EX3CC,UAHL,UACK,UW8ClBE,EAAkBlB,EAAOmB,wBAAwBH,GACjDI,IAAuBF,EAEvBG,EAAgBrF,YAAOyE,GAAPzE,CAAH,KACEiF,GAErB,OAEC,kBAACI,EAAD,CACC/D,QAAS,kBAAM1B,EAAS,CAAChB,KAAM,sBAAuBC,QAAS,CAACmF,SAAQI,QAASY,EAAOX,aAExF,kBAACK,GAAD,KAAQI,GACR,kBAACH,GAAD,KAAkBS,EAAqBF,EAAkB,OAAM,MAC/D,kBAACN,GAAD,KAAcP,EAAQ,IAAMA,EAAQ,OAAM,Q,+PC3D9B,mBAA4C,IAA1CY,EAAyC,EAAzCA,MAAO3D,EAAkC,EAAlCA,QAAS5B,EAAyB,EAAzBA,SAAU4F,EAAe,EAAfA,UACpCC,EAAevF,IAAOK,OAAV,KACG4E,GASrB,OAAO,kBAACM,EAAD,CAAcD,UAAWA,EAAWhE,QAASA,GAAU5B,I,upDCV/D,IAAM8F,GAAUxF,IAAOS,IAAV,KbDY,Wa6FVgF,GAFC,kBAAM,kBAACD,GAAD,KAAU,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,gC,+HC1F7G,IAAME,GAAgB1F,YAAOwF,GAAPxF,CAAH,MAaJ2F,OARf,WACC,OACC,kBAACD,GAAD,O,kuBCLF,IAAME,GAAa5F,IAAOO,KAAV,MAKVmE,GAAQ1E,IAAOO,KAAV,MAOLsF,GAAW7F,IAAOO,KAAV,MAIRuF,GAAa9F,IAAO4D,EAAV,MASD,eAAyD,IAAvDY,EAAsD,EAAtDA,MAAOM,EAA+C,EAA/CA,MAAOiB,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAAiB,EACtChC,oBAAS,GAD6B,mBAC/DiC,EAD+D,KACrDC,EADqD,KAGhEd,EAAgBrF,YAAOyE,GAAPzE,CAAH,KACE+F,EfhCG,UAEA,Ue+BHA,EfjCG,UeiCoB,QAClCA,EAAW,QflCG,WeuCxB,OACCG,EAAW,KACV,kBAACb,EAAD,CAAe/D,QAAS,WAClByE,GAEJI,GAAY,GACZF,KAHcD,MAMdD,EAAW,kBAACD,GAAD,qBACX,oCACC,kBAAC,GAAD,KAAO,kBAACD,GAAD,KAAWf,IAClB,kBAACc,GAAD,KAAapB,EAAMH,MAAnB,QACA,kBAACuB,GAAD,KAAY,kBAACC,GAAD,SAAY1H,EAAaqG,EAAM4B,SAC3C,kBAACR,GAAD,MAAcpB,EAAM6B,OAAS7B,EAAM4B,MAAQ,KAAK/H,QAAQ,GAAxD,Q,qHClDN,IAoCeiI,GApCI,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQvC,EAAY,EAAZA,OAAY,EACEC,mBAAS,MADX,mBACjCuC,EADiC,KAClBC,EADkB,OAEb9F,qBAAWrB,GAFE,mBAEhCf,EAFgC,KAEhCA,KAAOqB,EAFyB,KAGlC8G,EAAe1G,YAAOU,GAAPV,CAAH,MAKZ2G,EAAUJ,EAAOK,KAAI,SAACpC,EAAOqC,GAClC,IAAMZ,EAAW,uCAAG,4BAAAlH,EAAA,sEACbR,EAAK0H,YAAYjC,EAAOzC,GAAIiD,EAAMJ,QAASI,EAAMjD,IADpC,uBAEUhD,EAAKa,iBAAiB8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MAF3D,OAEbF,EAFa,OAGnBrB,EAAS,CAAChB,KAAM,gBAAiBC,QAAS,CAACL,QAASyC,KAHjC,2CAAH,qDAKb8E,EAAWc,IAAML,EACjB1B,EAAQd,EAAO8C,aAAatC,EAAMJ,SAItC,OAHwB,IAApBJ,EAAO+C,WACVjC,EAA0B,IAAlBN,EAAMJ,QAAgB,KAAO,OAE/B,kBAAC4C,GAAD,CAAclC,MAAOA,EAAOmB,YAAaA,EAAaD,YAAa,kBAAMS,EAAiBI,IAAKd,SAAUA,EAAUvB,MAAOA,EAAOyC,IAAKJ,OAG9I,OACC,oCACC,kBAACK,GAAD,KACC,kBAACR,EAAD,iBACA,kBAACA,EAAD,wBACA,kBAACA,EAAD,oBACA,kBAACA,EAAD,kBAEAC,I,0fC9BJ,IAAMf,GAAa5F,IAAOO,KAAV,MAKVmE,GAAQ1E,IAAOO,KAAV,MAQLsF,GAAW7F,IAAOO,KAAV,MAIC,eAAqB,IAAnBiE,EAAkB,EAAlBA,MAAOM,EAAW,EAAXA,MACjBO,EAAgBrF,YAAOyE,GAAPzE,CAAH,KjBrBK,WiB0BxB,OACC,kBAACqF,EAAD,KACC,kBAAC,GAAD,KAAQP,GACR,kBAAC,GAAD,KAAaN,EAAMH,MAAnB,QACA,kBAAC,GAAD,KAAY,kBAAC,GAAD,SAAYlG,EAAaqG,EAAM4B,SAC3C,kBAAC,GAAD,KAAajI,EAAkC,IAArBqG,EAAM2C,iB,qHC7BpB,mBAAuB,IAArBZ,EAAoB,EAApBA,OAAQvC,EAAY,EAAZA,OAClB0C,EAAe1G,YAAOU,GAAPV,CAAH,MAKf2G,EAAUJ,EAAOK,KAAI,SAACpC,EAAOqC,GAChC,IAAI/B,EAAQd,EAAO8C,aAAatC,EAAMJ,SAItC,OAHwB,IAApBJ,EAAO+C,WACVjC,EAA0B,IAAlBN,EAAMJ,QAAgB,KAAO,OAE/B,kBAACgD,GAAD,CAAmBtC,MAAOA,EAAON,MAAOA,EAAOyC,IAAKJ,OAE3D,OACC,oCACC,kBAACK,GAAD,KACC,kBAACR,EAAD,iBACA,kBAACA,EAAD,wBACA,kBAACA,EAAD,oBACA,kBAACA,EAAD,gBAEAC,I,w3BCfJ,IAAMU,GAAYrH,IAAOS,IAAV,MAuBT6G,GAAetH,IAAOS,IAAV,MAKZkD,GAAQ3D,IAAO4D,EAAV,MAKL2D,GAAkBvH,IAAOS,IAAV,MAMfuG,GAAehH,YAAOwH,GAAPxH,CAAH,MAyCHyH,GApCO,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,WAAY1D,EAA2C,EAA3CA,OAAQ2D,EAAmC,EAAnCA,UAAmC,KAAxBC,mBAC3BjH,qBAAWrB,IADwC,mBACtEf,EADsE,KACtEA,KADsE,QAElD0F,mBAAS,OAFyC,mBAEvEsC,EAFuE,KAE/DsB,EAF+D,KAc9E,OAVAC,qBAAU,WACT,IAAIC,GAAU,EAGd,OAFAC,SAASC,KAAKC,MAAMC,SAAW,UACf,IAAZJ,GAAmBF,EAAUtJ,EAAK6J,iBAAiBpE,EAAQzF,EAAKwC,iBAC7D,WACNiH,SAASC,KAAKC,MAAMC,SAAW,SAC/BJ,GAAU,KAET,CAACF,EAAW7D,EAAQ2D,IAGtB,kBAACN,GAAD,KACc,OAAXd,EAAkB,kBAAC,GAAD,MACnB,oCACC,kBAACxD,EAAD,CAAgBJ,QAASqB,EAAOqE,WAChC,kBAACC,GAAD,KAActE,EAAOuE,aACrB,kBAACjB,GAAD,KACC,kBAAC,GAAD,uBACA,kBAAC,GAAD,CAAYtD,OAAQA,EAAQuC,OAAQA,EAAOiC,aAC3C,kBAAC,GAAD,yBACA,kBAACC,GAAD,CAAczE,OAAQA,EAAQuC,OAAQA,EAAOmC,iBAKhD,kBAACnB,GAAD,KACC,kBAAC,GAAD,CAActC,MnBlFO,UmBkFW3D,QAASoG,GAAwB,OAAXnB,EAAkB,SAAW,W,qyCC3EvF,IAAMoC,GAAgB3I,IAAOS,IAAV,MAIN6H,GAActI,IAAO4I,GAAV,KpBXC,WoBoBnBC,GAAkB7I,IAAO4D,EAAV,KpBpBI,WoB8BZsD,GAAgBlH,IAAOS,IAAV,KpB7BA,WoBuCbC,GAASV,IAAO4D,EAAV,MAObkF,GAAc9I,YAAOU,GAAPV,CAAH,MAKX+I,GAAe/I,YAAOU,GAAPV,CAAH,MAIZgJ,GAAchJ,YAAOU,GAAPV,CAAH,MAKXiJ,GAAajJ,IAAOS,IAAV,MAqEDyI,GAhEO,SAAC,GAAgB,IAAZC,EAAW,sBACVxI,qBAAWrB,GADD,2BAC7Bf,KAD6B,KAEG0F,mBAAS,KAFZ,mBAE9BmF,EAF8B,KAEhBC,EAFgB,OAGTpF,mBAASkF,EAAMnF,QAHN,mBAG9BA,EAH8B,aAIKC,oBAAS,IAJd,mBAI9BqF,EAJ8B,KAIfC,EAJe,KAK7BlB,EAA8DrE,EAA9DqE,SAAUE,EAAoDvE,EAApDuE,YAAaxB,EAAuC/C,EAAvC+C,SAAUD,EAA6B9C,EAA7B8C,aAAc0C,EAAexF,EAAfwF,WAEvD1B,qBAAU,WAET2B,MAEE,IAGH,IAAMA,EAAqB,uCAAG,4BAAA1K,EAAA,+EAEFiF,EAAO0F,kBAFL,OAEvBN,EAFuB,OAG7BC,EAAgBD,GAHa,gDAM5BO,MAAM,6CACNvI,QAAQC,MAAR,MAP4B,yDAAH,qDAevBsF,EAAU,GACd,GAAII,EAAW,EACdJ,EAAUG,EAAaF,KAAI,SAACgD,EAAK/C,GAAN,OAC1B,kBAAC,GAAD,CAAe7C,OAAQA,EAAQc,MAAO8E,EAAKvF,MAAO+E,EAAavC,GAAI7B,MAAO6B,EAAGI,IAAKJ,YAGnF,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACtBF,EAAQkD,KAAK,kBAAC,GAAD,CAAe7F,OAAQA,EAAQK,MAAO+E,EAAavC,GAAI/B,MAAa,IAAN+B,EAAU,KAAO,MAAQ9B,QAAM,EAACC,MAAO6B,EAAGI,IAAKJ,KAG5H,OACC,6BACC,kBAACoC,GAAD,KACC,kBAAClG,EAAD,CAAgBJ,QAAS0F,KAE1B,kBAACC,GAAD,KACGlF,EAAWmF,GACb,kBAACzE,GAAD,CAAWC,KAAMyF,EAAYxF,OAAQA,KAGtC,kBAACkD,GAAD,KACC,kBAAC4B,GAAD,iBACA,kBAACC,GAAD,0BACA,kBAACC,GAAD,uBAED,kBAACL,GAAD,KACEhC,GAED2C,GAAiB,kBAAC,GAAD,CAAe1B,mBAAoB6B,EAAuBzF,OAAQA,EAAQ0D,WAAY,kBAAM6B,GAAiB,MAC/H,kBAACV,GAAD,CAAiBvH,QAAS,kBAAMiI,GAAiB,KAAjD,kBC/HUO,GAAS,uCAAG,WAAOC,EAAUxB,EAAaZ,EAAWqC,EAAYC,GAArD,eAAAlL,EAAA,yDACA,kBAAbgL,EADa,sBACgB,IAAIG,MAAM,yBAD1B,cAEpBC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,YACzCC,MAAMC,QAAQN,KAClBA,EAAU,IAEXA,EAAQO,QAAQ,CACbX,WACAxB,cACAZ,YACAqC,aACAW,UAAWV,EAAcU,UAAUC,aAEtCN,aAAaO,QAAQ,UAAWT,KAAKU,UAAUX,IAC/CtM,OAAOC,SAAS+C,SAdQ,kBAejB,CAAEkK,SAAS,IAfM,2CAAH,8DAoBTC,GAAU,uCAAG,WAAOhB,GAAP,eAAAjL,EAAA,8DACC+B,IAAtBkJ,EAAWiB,OADU,sBACkB,IAAIf,MAAM,8EAD5B,cAErBC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,YACzCC,MAAMC,QAAQN,KAAUA,EAAU,IAHd,kBAIlB,CAAEA,YAJgB,2CAAH,sDAOVe,GAAY,uCAAG,WAAOnB,GAAP,iBAAAhL,EAAA,yDAC3BqC,QAAQ+J,IAAI,eACNhB,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,YAC3CC,MAAMC,QAAQN,GAHQ,wDAIrBiB,EAAgBjB,EAAQkB,WAAU,SAAArH,GAAM,OAAIA,EAAO+F,UAAYA,KACrE3I,QAAQ+J,IAAIpB,GACZ3I,QAAQ+J,IAAI,cAAgBhB,EAAQiB,IACpCjB,EAAQmB,OAAOF,EAAe,GAC9BhK,QAAQ+J,IAAI,kBAAoBhB,EAAQiB,IACxCd,aAAaO,QAAQ,UAAWT,KAAKU,UAAUX,IAC/CtM,OAAOC,SAAS+C,SAVW,kBAWpBuJ,KAAKU,UAAU,CAAEC,SAAS,KAXN,4CAAH,sD,4xBCjBzB,IAAMQ,GAAqBvL,IAAOS,IAAV,MAIlB+K,GAAkBxL,IAAOyL,GAAV,MAIfC,GAAa1L,IAAOO,KAAV,MAKVoL,GAAc3L,IAAOK,OAAV,KtBpBQ,WsBoGVuL,GA/DU,SAAC,GAAc,IAAb5H,EAAY,EAAZA,OAAY,EACXrD,qBAAWrB,GADA,mBAC9Bf,EAD8B,KAC9BA,KAAOqB,EADuB,KAGhCiM,EAAa,uCAAG,4BAAA9M,EAAA,sEACQR,EAAKa,eAAeb,EAAKwC,gBADjC,OACfE,EADe,OAErBrB,EAAS,CAAChB,KAAM,gBAAiBC,QAAS,CAACL,QAASyC,KAF/B,2CAAH,qDAHmB,EAOJgD,mBAAS,MAPL,mBAO/B6H,EAP+B,KAOpBC,EAPoB,KAQhCC,EAAkB,WAEvB,OADwBzN,EAAK0N,aAAajI,EAAOzC,GAAIhD,EAAKwC,gBAAgBC,MAAK,SAAAkL,GAAG,OAAIH,EAAaG,OAI9FC,EAAY,uCAAG,sBAAApN,EAAA,0DACH,IAAbqN,EADgB,wDAEpBC,GAAY,GACZC,GAAS,GAHW,kBAKb/N,EAAKgO,cAAcvI,EAAOzC,GAAIhD,EAAKwC,gBALtB,OAMnBiL,IACAH,IAPmB,kDAUnBlC,MAAM,gDACNvI,QAAQC,MAAR,MAXmB,QAapB6J,GAAalH,EAAOzC,IACpB+K,GAAS,GACTD,GAAY,GAfQ,0DAAH,qDAkBlBvE,qBAAU,WACT,IAAIC,GAAU,EAEd,OADKA,GAASiE,IACP,WACNjE,GAAU,KAET,IArCmC,IAyClCyE,EAzCkC,EAsCZvI,oBAAS,GAtCG,mBAsC/BwI,EAtC+B,KAsCxBH,EAtCwB,OAuCNrI,oBAAS,GAvCH,mBAuC/BmI,EAvC+B,KAuCrBC,EAvCqB,KAkDtC,OAPmCG,EADX,IAApBxI,EAAO+C,SACqB,IAA3B/C,EAAO0I,gBAAoC,KACX,IAA3B1I,EAAO0I,gBAAoC,MAClC,UAEL1I,EAAO8C,aAAa9C,EAAO0I,iBAAmB1I,EAAO8C,aAAa9C,EAAO0I,iBAAmB,UAIzG,kBAACnB,GAAD,KACC,kBAACxI,EAAD,CAAgBJ,QAASqB,EAAOqE,WAChC,kBAACC,GAAD,KAAclF,EAAWY,EAAOuE,cAChC,kBAACiD,GAAD,oBACa,kBAACE,GAAD,KAAac,IAG1B,kBAACb,GAAD,CAAarK,QAAS6K,GAAtB,IAAsCM,EAAO,aAAF,iBAA2BtO,EAAa2N,O,0sBC3FtF,IAAMa,GAAkB3M,IAAOS,IAAV,KvBJI,WuB0BnBmM,GAAmB5M,YAAO6M,IAAP7M,CAAH,KvB7BF,WuBuDL8M,OAjBf,YAAuC,IAAtB9I,EAAqB,EAArBA,OAAQ+I,EAAa,EAAbA,WACxB,OACC,oCACA,kBAACJ,GAAD,KAEE3I,EAEEA,EAAOgJ,UAAuE,kBAAC,GAAD,CAAkBhJ,OAAQA,IAArF,kBAAC,GAAD,CAAe+I,WAAYA,EAAY/I,OAAQA,IAEpE,MAGD+I,GAAa,kBAACH,GAAD,CAAkBK,GAAG,KAArB,kB,0OC7ChB,IAAMC,GAAmBlN,IAAOS,IAAV,MA4BN0M,GAhBA,SAAC,GAA2B,IAA1BhD,EAAyB,EAAzBA,QAAS4C,EAAgB,EAAhBA,WAC1B,OACC,kBAACG,GAAD,CAAkB3L,GAAG,qBAGP,OAAZ4I,EACA,kBAAC,GAAD,MAEAA,EAAQvD,KAAI,SAAC5C,GAAD,OACX,kBAAC,GAAD,CAAQA,OAAQA,EAAQ+I,WAAYA,EAAY9F,IAAKjD,EAAOzC,U,iFClBjE,IAAMuL,GAAS9M,IAAOS,IAAV,MAqDG2M,GAlDW,SAAC,GAAgB,IAAdpJ,EAAa,EAAbA,OAAa,EACfC,oBAAS,GADM,mBAClCwI,EADkC,KAC3BH,EAD2B,OAEd3L,qBAAWrB,GAFG,mBAEjCf,EAFiC,KAEjCA,KAEF8O,GAJmC,KAI3B,uCAAG,WAAOC,GAAP,SAAAvO,EAAA,6DAChBqC,QAAQ+J,IAAI,iBADI,SAGfmB,GAAS,GAHM,SAIT/N,EAAK8O,SAASrJ,EAAOzC,GAAI+L,GAJhB,uDAOflM,QAAQC,MAAR,MAPe,yBAUfiL,GAAS,GACTzO,OAAOC,SAAS+C,SAXD,4EAAH,uDAeV0M,EAAkB,GAOtB,OALCA,EADuB,IAApBvJ,EAAO+C,SACQ,CAAC,4BAAQE,IAAK,EAAG3F,QAAS,kBAAM+L,EAAS,KAAxC,eAAkE,4BAAQpG,IAAK,EAAG3F,QAAS,kBAAM+L,EAAS,KAAxC,iBAEnErJ,EAAO8C,aAAaF,KAAI,SAAC4G,EAAY3G,GAAb,OAAoB,4BAAQI,IAAKJ,EAAGvF,QAAS,kBAAM+L,EAASxG,KAAxC,YAAsD2G,MAIpH,oCACCf,GAAS,kBAAC,GAAD,MACV,kBAAC,GAAD,KACC,2BAAIzI,EAAOzC,GAAX,KAAiByC,EAAOuE,aACtBvE,EAAOgJ,UAOT,oCACC,yCAAehJ,EAAO8C,aAAa9C,EAAO0I,iBAA1C,MAPD,oCACC,2CAAkB1I,EAAOqE,UAAW,IAAItG,MAAOC,UAAY,OAAS,QAApE,KACCuL,EACD,4BAAQjM,QAAS,kBAAM+L,EAAS,QAAhC,qBAQD,4BAAQ/L,QAxCW,kBAAM4J,GAAalH,EAAOzC,MAwC7C,c,wQC7CH,IAAMkM,GAAuBzN,IAAOS,IAAV,MAIpBiN,GAAiB1N,IAAOK,OAAV,MAIdsN,GAAgB,CACrBC,QAAS,OACTC,cAAe,SACfC,QAAS,OAwIKC,GArIK,SAAC,GAAoB,IAAD,IAAlB5D,eAAkB,MAAR,GAAQ,IACZxJ,qBAAWrB,GADC,mBAC/Bf,EAD+B,KAC/BA,KAD+B,QAET0F,oBAAS,IAFA,mBAEhC+J,EAFgC,KAEvBC,EAFuB,OAGDhK,mBAAS,cAHR,mBAGhCsE,EAHgC,KAGnB2F,EAHmB,OAIHjK,qBAJG,mBAIhC+F,EAJgC,KAIpBmE,EAJoB,OAKLlK,mBAAS,IALJ,mBAKhCmK,EALgC,KAKrBC,EALqB,OAMPpK,mBAAS,GANF,mBAMhC8C,EANgC,KAMtBuH,EANsB,OAOTrK,mBAAS,IAAIlC,MAAK,IAAIA,MAAOwM,SAAQ,IAAIxM,MAAOyM,UAAY,KAPnD,mBAOhC7L,EAPgC,KAOvB8L,EAPuB,OAQZxK,oBAAS,GARG,mBAQhCyK,EARgC,KAQ1BC,EAR0B,OASD1K,mBAAS,IATR,mBAShC2K,EATgC,KASnBC,EATmB,KAUjCC,EAAgB,GAViB,EAWb7K,oBAAS,GAXI,mBAWhCwI,EAXgC,KAWzBH,EAXyB,OAYCrI,oBAAS,GAZV,mBAYhC8K,EAZgC,KAYlBC,EAZkB,KAcjCC,EAAU,uCAAG,sBAAAlQ,EAAA,yDACXR,EAAKW,iBAAiBC,aADX,0CACgC,GADhC,iCAEZ,GAFY,2CAAH,qDAehB,GAAI4H,EAAW,EACd,IADkB,IAAD,YACRF,GACRiI,EAAcjF,KACb,yBAAK5C,IAAKJ,GACV,2BAAOqI,QAAO,iBAAYrI,IAA1B,kBAA2CA,EAAI,EAA/C,OACA,2BAAOtF,GAAE,iBAAYsF,GAAKjI,KAAK,OAAOkB,MAAO8O,EAAY/H,GAAIsI,SAAU,SAAAC,GAAC,OAfrD,SAACtP,EAAO+G,GAC7B,IAAMwI,EAAcT,EACpBS,EAAYxI,GAAK/G,EACZuP,EAAYxI,GAIjBgI,EAAeQ,GAHd1F,MAAM,SAAD,OAAU9C,EAAV,6BAWwEyI,CAAcF,EAAEG,OAAOzP,MAAO+G,SAJnGA,GAAI,EAAGA,GAAIE,EAAUF,KAAM,GAA3BA,IAUTiB,qBAAU,WACRmH,IAAajO,MAAK,SAAAkL,GAAG,OAAI+B,EAAW/B,QACnC,IAGH,IAOKsD,GAAY,uCAAG,WAAOJ,GAAP,uBAAArQ,EAAA,2DAChBgI,EAAW,GADK,uBAEnB4C,MAAM,6CAFa,iCAKpBvI,QAAQ+J,IAAI,sBACZmB,GAAS,GACT8C,EAAEK,iBACIC,EAAgB1F,GAAcA,EAAWiB,OAAS,EAAIjB,EAAW2F,MAAM,KAAO,GARhE,mBAUQpR,EAAKqR,QAAQC,WAAWC,OAAOC,YAAY,kBAAmBxR,EAAKwC,eAAgB,WAV3F,eAUdkJ,EAVc,iBAWA1L,EAAKiR,aAAajH,EAAa6F,EAAW4B,SAASjJ,GAAW6H,EAAa,CAAC,QAASjM,EAAQX,WAX7F,eAWdiO,EAXc,OAYdlG,EAAWiG,SAASE,KAAKD,EAAME,OAAOC,eAZxB,UAaOtG,GAAUC,EAAUxB,EAAahK,EAAKwC,eAAgB2O,EAAezF,GAb5E,uBAaZc,QAbY,yDAed,IAAIb,MAAM,8CAfI,kCAkBnBP,MAAM,gDACNvI,QAAQC,MAAR,MACAD,QAAQ+J,IAAIyD,GApBO,0DAAH,sDAuBZyB,GAAsBlG,EAAQvD,KAAI,SAAC5C,EAAQiD,GAAT,OAAiB,kBAAC,GAAD,CAAmBA,IAAKA,EAAKjD,OAAQA,OAC9F,OACCgK,EACA,oCACEvB,GAAS,kBAAC,GAAD,MACV,kBAACiB,GAAD,CAAgBpM,QAAS,SAAA8N,GAAC,OAAIT,GAAYD,KAAQA,EAAO,IAAM,KAC9DA,GAAQ,kBAACjB,GAAD,KACR,8CACA,0BAAMvF,MAAOyF,GAAgB2C,SAAW,SAAClB,GAAD,OAAOI,GAAaJ,KAC3D,2BAAOF,QAAQ,QAAf,SACA,2BACC3N,GAAG,OACH3C,KAAK,OACLkB,MAAOyI,EACP4G,SAAU,SAAAoB,GAAK,OAAIrC,EAAeqC,EAAMhB,OAAOzP,UAEhD,2BAAOoP,QAAQ,cAAf,eACA,2BACC3N,GAAG,aACH3C,KAAK,OACLkB,MAAOkK,EACPwG,YAAY,aACZrB,SAAU,SAAAoB,GAAK,OAAIpC,EAAcoC,EAAMhB,OAAOzP,UAE/C,2BAAOoP,QAAQ,aAAf,eACA,2BACCtQ,KAAK,OACLkB,MAAOsO,EACPoC,YAAY,aACZrB,SAAU,SAAAoB,GAAK,OAAIlC,EAAakC,EAAMhB,OAAOzP,UAE9C,2BAAOoP,QAAQ,YAAf,wBACA,2BACI3N,GAAK,WACR3C,KAAK,OACLkB,MAAOiH,EACPoI,SA/DmB,SAACC,GAAO,IACxBtP,EAAUsP,EAAEG,OAAZzP,MACNwO,EAAYxO,MAgETgP,EAED,4CACA,kBAAC,KAAD,CACChP,MAAO6C,EACPwM,SAAUV,IAEX,4BAAQ7P,KAAK,UAAb,kBAED,4BAAQ0C,QA9Ec,WACzB0N,GAAiBD,KA6EqBA,EAAc,eAAiB,eAAlE,KACEA,GAAgBsB,KAKpB,+B,wwBCrJF,IAAMI,GAASC,YAAH,MASNC,GAASD,YAAH,MAUNE,GAAiB5Q,IAAOS,IAAV,KAMNkQ,IAKRE,GAAc7Q,IAAOS,IAAV,KAKHgQ,IA2BCK,OArBf,YAAwE,IAAxDxL,EAAuD,EAAvDA,UAAW5F,EAA4C,EAA5CA,SAAUqR,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,mBAUjD,OATAlJ,qBAAU,WAGT,OADAE,SAASC,KAAKC,MAAMC,SAAW,SACxB,WACNH,SAASC,KAAKC,MAAMC,SAAW,YAE9B,IAIF,oCACE4I,GAAe,kBAACF,GAAD,CAAavP,QAAS0P,IACtC,kBAACJ,GAAD,CAAgBtL,UAAWA,GACzB5F,K,klBCtDL,IAAMuR,GAAQjR,IAAOkR,MAAV,K5BDc,qB4BenBC,GAAenR,IAAOO,KAAV,K5BfO,W4B0BnB8G,GAAYrH,IAAOS,IAAV,MAIA,eAAgD,IAA9CX,EAA6C,EAA7CA,MAAOsR,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9CJ,EAAQ3R,IAAMgS,YAMlB,OAJAzJ,qBAAU,WACLwJ,GAAOJ,EAAMI,UAChB,IAGD,kBAAC,GAAD,KACC,kBAACH,GAAD,KAAeE,GACf,kBAACJ,GAAD,CAAOrS,KAAK,SAASkB,MAAOA,EAAO0R,IAAK,SAAAA,GAAG,OAAIN,EAAQM,GAAKrC,SAAU,SAAAC,GAAC,OAAIgC,EAAYhC,EAAEG,OAAOzP,Y,6RCvCnG,IAAI2R,GAAczR,IAAOO,KAAV,MAOXmR,GAAe1R,IAAOO,KAAV,MAMD,SAASoR,GAAT,GAAgD,IAAtBtN,EAAqB,EAArBA,MAAOuN,EAAc,EAAdA,YAAc,EACzB3N,oBAAS,GADgB,mBACxD4N,EADwD,KAC3CC,EAD2C,KAQ7D,OALc,MAAVzN,IACHA,EAAQ,GACRuN,EAAY,KAIZC,GAAyB,MAAVxN,EACd,yBAAK/C,QAAS,kBAAMwQ,GAAe,KAClC,kBAACL,GAAD,KAAcpN,EAAd,QACA,kBAACqN,GAAD,gBAGD,kBAACK,GAAD,CAAYjS,MAAOuE,EAAOgN,aAAc,OAAKC,OAAO,EAAMF,YAAaQ,I,ynBCxB1E,IAAM5K,GAAehH,IAAO4D,EAAV,K9BRE,W8BgBdoO,GAAMhS,IAAOS,IAAV,K9BbgB,W8BuBnBwR,GAAMjS,IAAO4D,EAAV,MAGHsO,GAAQlS,IAAOO,KAAV,MAqCI4R,GAjCG,SAAC,GAAsE,IAGpFrN,EAHed,EAAoE,EAApEA,OAAQoO,EAA4D,EAA5DA,SAAUhO,EAAkD,EAAlDA,QAASsD,EAAyC,EAAzCA,WAAY2K,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WAAgB,EAC7DrO,mBAASoO,GADoD,mBAChFhO,EADgF,KACzEkO,EADyE,OAE7DtO,mBAAS,GAFoD,mBAEhFmC,EAFgF,KAEzEoM,EAFyE,KAInFxO,IAEHc,IAD2Bd,EAAO8C,aAAa1C,GACpBJ,EAAO8C,aAAa1C,GAAuB,IAAZA,EAAgB,KAAO,OAGlF,OACC,oCACC,kBAAC,GAAD,CAAc9C,QAASoG,GAAvB,UACA,kBAACsK,GAAD,KACC,kBAACC,GAAD,kBACA,kBAACC,GAAD,KAAQpN,IAET,kBAACkN,GAAD,KACC,kBAACC,GAAD,4BACA,kBAACC,GAAD,KACA,kBAACP,GAAD,CAAiBC,YAAaW,EAAUlO,MAAOA,MAGhD,kBAAC2N,GAAD,KACC,kBAACC,GAAD,oBACA,kBAACF,GAAD,CAAYjS,MAAOsG,EAAOiL,aAAc,IAAKD,YAAaoB,KAG3D,kBAAC,GAAD,CAAQlR,QAAS,kBAAM8Q,GAAYE,EAAWjO,EAAO+B,IAAQnB,MAAOmN,E9BzD9C,U8ByDqE,QAASA,EAAW,eAAiB,oB,84BCtDnI,IAAM/K,GAAYrH,IAAOS,IAAV,MAKTgS,GAAUzS,IAAOC,IAAV,MAOPyS,GAAO1S,IAAO4D,EAAV,K/Bfe,W+BwBnBD,GAAQ3D,IAAOS,IAAV,K/BxBc,W+BiCnBoF,GAAW7F,IAAOO,KAAV,MAIRoS,GAAW3S,YAAO0S,GAAP1S,CAAH,MAMC,SAAS4S,GAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,eAAgB3G,EAAkB,EAAlBA,IAAKxE,EAAa,EAAbA,WACtD,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KAASwE,EAAI7K,MAAoB,uBAAZ,WACrB,kBAACoR,GAAD,CAASjR,IAAM0K,EAAI7K,MAAsByR,KAAdC,KAAyBrR,IAAI,0DACxD,kBAACgR,GAAD,KAAQxG,EAAI7K,MAA6B,2BAArB,mBAApB,IAAqE,kBAAC,GAAD,KAAWwR,EAAexU,QAAQ,GAAlC,aACnE6N,EAAI7K,OAAS,kBAACsR,GAAD,CAAUrR,QAAW,kBAAMzD,OAAOmV,KAAP,yDAA8D9G,EAAI+G,OAA7F,WACf,kBAACzL,GAAD,CAAalG,QAASoG,EAAYzC,MAAQiH,EAAI7K,M/BrD7B,UAGK,W+BkDoD6K,EAAI7K,MAAiB,QAAT,S,ogCCjDzF,IAAMgG,GAAYrH,IAAOS,IAAV,MAITkD,GAAQ3D,IAAOS,IAAV,KhCLc,WgCenByS,GAAWlT,IAAOC,IAAV,MAmBRyS,GAAO1S,IAAO4D,EAAV,KhClCe,WgC4CnBiC,GAAW7F,IAAOO,KAAV,MAGC,SAAS4S,GAAT,GAAwC,IAAlBN,EAAiB,EAAjBA,eAEpC,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,mBACA,kBAACK,GAAD,CAAU1R,IAAKC,MACf,kBAAC,GAAD,0BAAwB,kBAAC,GAAD,KAAWoR,EAAexU,QAAQ,GAAlC,aCIZ+U,OAlDf,WAAuB,IAAD,EAC0BzS,qBAAW2D,IADrC,mBACb+O,EADa,KACCC,EADD,OAEY3S,qBAAWrB,GAFvB,mBAEZf,EAFY,KAEZA,KAAOgV,EAFK,OAGWtP,oBAAS,GAHpB,mBAGbuP,EAHa,KAGJC,EAHI,OAIaxP,mBAAS,MAJtB,mBAIbyP,EAJa,KAIHC,EAJG,OAKyB1P,mBAAS,GALlC,mBAKb4O,EALa,KAKGe,EALH,KAMf5P,EAASqP,EAAarP,OACtBoO,EAAW7T,EAAKY,aAEhBuI,EAAa,WAClBiM,EAAY,MACZL,EAAqB,CAAC1U,KAAM,uBAC5Bf,OAAOC,SAAS+C,UAGXyR,EAAU,uCAAG,WAAOjO,EAAO+B,GAAd,iBAAArH,EAAA,6DAElB6U,EADexN,EAAQ/B,EAAQ,KAE/BoP,GAAW,GAHO,kBAMClV,EAAK+T,WAAWtO,EAAOzC,GAAI8R,EAAajP,ShCzBhChG,EgCyBsDgI,EhCxB3E4J,UAAU5R,EAAG,SAAG,GAAM,KAAIC,QAAQ,KgCwBiD2R,SAAS3L,IAAQnD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MANnH,cAMX+K,EANW,gBAOY3N,EAAKa,iBAAiB8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MAP7D,OAOXF,EAPW,OAQjBsS,EAAa,CAAC3U,KAAM,gBAAiBC,QAAS,CAACL,QAASyC,KACxD0S,EAAY,CAACtS,OAAO,EAAO4R,GAAI/G,EAAI2H,YAAYC,OAT9B,kDAYjB1S,QAAQC,MAAR,MACAsS,EAAY,CAACtS,OAAO,IAbH,QAelBoS,GAAW,GAfO,kChCnBQ,IAACrV,IgCmBT,qBAAH,wDAmBhB,OACC4F,GAAU,kBAAC,GAAD,CAAO+M,aAAa,EAAMC,mBAAoBtJ,GAErD8L,GAAwB,OAAbE,EAGZF,EAEA,kBAACL,GAAD,CAAaN,eAAgBA,IAE7B,kBAAC,GAAD,CAAWnL,WAAYA,EAAY0K,SAAUA,EAAUpO,OAAQA,EAAQsO,WAAYA,EAAYD,YAAagB,EAAahP,MAAOD,QAASiP,EAAajP,UANtJ,kBAACwO,GAAD,CAAUlL,WAAYA,EAAYwE,IAAKwH,EAAUb,eAAgBA,MCGtDkB,OAzCf,YAA0B,IAAT5K,EAAQ,sBACIxI,qBAAWrB,GADf,mBACff,EADe,KACfA,KAAOqB,EADQ,OAEOqE,mBAAS,IAFhB,mBAEhBkG,EAFgB,KAEP6J,EAFO,KAIjBjH,EAAa5D,EAAMnL,MAAMiW,OAAOlK,SAoBtC,OAlBAjC,qBAAU,WACRhJ,IAAUkC,KAAV,uCAAgB,WAAMhC,GAAN,iBAAAD,EAAA,yDACda,EAAS,CAAChB,KAAM,YAAaC,QAAS,CAACN,KAAMS,KACzCkV,EAAY,IACZnH,EAHU,gBAIZmH,EAAY,CAAClE,SAASjD,IAJV,uCAMM/B,GAAW,IANjB,OAMNkB,EANM,OAOZgI,EAAYhI,EAAI/B,QAAQc,OAAS,EAAIiB,EAAI/B,QAAQvD,KAAI,SAAA5C,GAAM,OAAIgM,SAAShM,EAAO+F,aAAa,GAPhF,QASd/K,EAAamV,eAAeD,GAAWlT,MAAK,SAAAkL,GAC1C8H,EAAWhV,EAAaoV,cAAclI,OAV1B,4CAAhB,yDAaC,CAACa,IAKFxO,EACA,oCACE,kBAAC,GAAD,CAAa4L,QAASA,IACtB,kBAAC,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAS4C,WAAYA,EAAY5C,QAASA,IAC1C,kBAAC,GAAD,QAIJ,kBAAC,GAAD,CAAQkK,WAAW,K,UCvCjBC,I,OAAO,IAAIC,SAHc,2CAGgB,CAAEC,MAAO,mB,SAEzCC,G,mFAAf,WAAmCC,EAAQ/M,GAA3C,iBAAA5I,EAAA,sEACsB4V,MAAM,+BAAgC,CACpDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,mCAC3B5M,KAAMmC,KAAKU,UAAU,CACjB8J,OAAQ,KACRX,OAAQ,CAACS,EAAQ/M,GACjBpG,GAAI,WACJuT,QAAS,UARrB,cACU5I,EADV,gBAYuBA,EAAI6I,OAZ3B,cAYUA,EAZV,sCAaYC,cAA8ClU,IAApCiU,EAAKE,OAAO9E,OAAOC,cAA6BF,KAAK6E,EAAKE,OAAO9E,OAAOC,eAAyBhG,KAAKC,MAAM6F,KAAK6E,EAAKE,OAAOpB,YAAYqB,QAAQ,GAAGC,aAAaC,SAbvL,4C,+BAgBeC,G,mFAAf,WAAwBC,EAAWF,GAAnC,SAAArW,EAAA,+EACW,IAAIwW,SAAQ,SAACC,EAASC,GAAV,OAAqBnB,GAAKoB,KAAL,UArBJ,oCAqBI,YACEJ,GACtCF,EACA,CACIO,UADJ,SACcC,GACNJ,EAAQI,EAAQ,KAEpBC,QAJJ,SAIY1U,GACJsU,EAAOtU,UATvB,4C,sBAeO,SAAe2U,KAAtB,gC,8CAAO,8DAAA/W,EAAA,6DAA+B4I,EAA/B,+BAA2C,GAA3C,SACc0N,GAAS,SAEtB,CAAC,gnBAgBG,CAAC1N,eAnBN,cACGsL,EADH,OAsBG8C,EAAiB9C,EAAG+C,QAAO,SAAAC,GAAC,MAAe,iBAAXA,EAAErX,MAAqE,gBAA1CwL,KAAKC,MAAM4L,EAAEC,aAAaC,eACvFC,EAAqBL,EAAenP,KAAI,SAAAiN,GAAW,OAAIY,GAAoBZ,EAAYC,KAAMD,EAAYwC,aAvB5G,SAwB0Bd,QAAQe,IAAIF,GAxBtC,cAwBGG,EAxBH,OAyBGC,EAAuBT,EAAenP,KAAI,SAACqP,EAAGpP,GAAJ,oBAAYuO,KAAMmB,EAAe1P,IAAOoP,MAClFQ,EAAUD,EAAqBR,QAAO,SAAA/C,GAAE,MAAyB,KAArBA,EAAGmC,KAAKJ,YAEpD0B,EAAqBzD,EAAG+C,QAAO,SAAAC,GAAC,MAAe,iBAAXA,EAAErX,MAAqE,kBAA1CwL,KAAKC,MAAM4L,EAAEC,aAAaC,eAC3FQ,EAAyBD,EAAmB9P,KAAI,SAAAiN,GAAW,OAAIY,GAAoBZ,EAAYC,KAAMD,EAAYwC,aA7BpH,UA8B8Bd,QAAQe,IAAIK,GA9B1C,eA8BGC,EA9BH,OA+BGC,EAA0BH,EAAmB9P,KAAI,SAACqP,EAAGpP,GAAJ,oBAAYuO,KAAMwB,EAAmB/P,IAAOoP,MAC7Fa,EAAgBD,EAAwBb,QAAO,SAAA/C,GAAE,OAAIA,EAAGmC,KAAKJ,YAhChE,kBAiCI,CACH+B,aAAcN,EACdO,eAAgBF,IAnCjB,6C,sBCvCQ,gBAAA/S,GAad,IAAMkT,EAiCP,SAA4BlT,GAC3B,IAAMmT,EAAuB,GAmB7B,OAjBAnT,EAAKgT,aAAaI,SAAQ,SAAA3S,GACzB,IAAMuF,EAAWvF,EAAM4Q,KAAKgC,UACvBF,EAAqBnN,KAAWmN,EAAqBnN,GAAY,IACjEmN,EAAqBnN,GAArB,OAAwCmN,EAAqBnN,GAArB,KAAyC,IAEtFmN,EAAqBnN,GAArB,KAAuCF,KAAvC,eACIrF,EAAM4Q,KADV,CAECiC,UAAW7S,EAAM6S,gBAKnBtT,EAAKiT,eAAeG,SAAQ,SAAAlE,GAC3B,IAAMlJ,EAAWkJ,EAAGmC,KAAKJ,SACnBzM,EAAc0K,EAAGmC,KAAK7M,YACxB2O,EAAqBnN,KAAWmN,EAAqBnN,GAAUxB,YAAcA,MAE3E2O,EArDuBI,CAAmBvT,GAC3CwT,EAAyB,GA2B/B,OA1BAC,OAAOC,KAAKR,GAAuBE,SAAQ,SAAApN,GAC1C,IAAM2N,EAAaT,EAAsBlN,GACnC4N,EAAYV,EAAsBlN,GAAUhG,KAC5C6T,EAAQ,GACdL,EAAuBxN,GAAY,CAACxB,YAAamP,EAAWnP,YAAaxE,KAAK,IAE9E4T,EAAUR,SAAQ,SAAA3S,GACjB,IAAMvB,EAAO,IAAIlB,KAAKyC,EAAM6S,WACtBQ,EAAa5U,EAAKuL,UAAY,KAAOwB,SAAS/M,EAAK6U,YAAc,GAAK,IAAM7U,EAAK8U,cAClFH,EAAMC,KAAaD,EAAMC,GAAc,IACvCD,EAAMC,GAAYrT,EAAMJ,WAAUwT,EAAMC,GAAYrT,EAAMJ,SAAW,IAC1EwT,EAAMC,GAAYrT,EAAMJ,SAASyF,KAAKrF,EAAMwT,oBAG7CR,OAAOC,KAAKG,GAAOT,SAAQ,SAAAlU,GAC1B,IAAMgV,EAAcL,EAAM3U,GACpBiV,EAAU,CAACjV,QACjBgV,EAAYd,SAAQ,SAACgB,EAAW/T,GAC/B,IAAMgU,GAAOD,EAAUE,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,KAAOJ,EAAUlN,QAAQ5M,QAAQ,GACnF6Z,EAAQ9T,GAAWgU,KAEpBb,EAAuBxN,GAAUhG,KAAK8F,KAAKqO,SAKtCX,G,wLCjCR,IAAMiB,GAAiBxY,IAAOS,IAAV,MAIdkD,GAAQ3D,IAAO4I,GAAV,MAmGI6P,OAhGf,WAAsB,IAAD,EACK9X,qBAAWrB,GADhB,gCAEQ2E,mBAAS,KAFjB,mBAEbyU,EAFa,KAELC,EAFK,OAGoB1U,mBAAS,YAH7B,mBAGb2U,EAHa,KAGCC,EAHD,KAKdC,EAAS,uCAAG,4BAAA/Z,EAAA,sEACK+W,GAAgB,qBADrB,cACXiD,EADW,yBAEV3O,KAAKU,UAAUiO,IAFL,2CAAH,qDAefjR,qBAAU,WAETgR,IAAY9X,MAAK,SAAAiS,GAChB4F,EAAgB,cAChB,IAAM9U,EAAOiV,GAAW5O,KAAKC,MAAM4I,IACnCgG,EAAyBlV,GAAM/C,MAAK,SAAAkY,GAEnC,IAAMC,EAAQ3B,OAAOC,KAAKyB,GAAYtS,KAAI,SAACmD,EAAUlD,GAEpD,IAAM6Q,EAAa3T,EAAKgG,GACpBqP,EAAQ,GAENC,EAAS,CACd,MACA,OACA,UAUD,OAPA3B,EAAW3T,KAAKoT,SAAQ,SAAAmC,GAEvB,IADA,IAAM7B,EAAOD,OAAOC,KAAK6B,GAChBzS,EAAI,EAAGA,EAAI4Q,EAAKxM,OAAQ,EAAGpE,IAAK,CACxC,IAAMzC,EAAUqT,EAAK5Q,GAChBuS,EAAMhV,KAAUgV,EAAMhV,GAAW,kBAAC,KAAD,CAAMxF,KAAK,WAAW2a,QAASnV,EAAS6C,IAAKJ,EAAG2S,OAAQH,EAAOxS,UAGxE,eAA3B6Q,EAAWnP,YAEb,kBAACiQ,GAAD,CAAgBvR,IAAKJ,GACpB,kBAAC,GAAD,KAAQ6Q,EAAWnP,aACnB,kBAAC,KAAD,CAAWkR,MAAO,IAAKC,OAAQ,IAAK3V,KAAM2T,EAAW3T,MACnDqV,EACD,kBAAC,KAAD,CAASO,UAAW,SAAC7Z,EAAO8Z,GAAR,OAzCN,SAAC9Z,EAAO8Z,EAAMhL,GAOnC,MAAO,CAAC9O,EAJP8Z,EADGhL,EAAY3D,OAAS,EACjB2D,EAAYgL,GAEH,MAATA,EAAe,KAAO,OAoCcC,CAAc/Z,EAAO8Z,EAAMlC,EAAW9I,gBAC3E,kBAAC,KAAD,CAAO2K,QAAQ,SACf,kBAAC,KAAD,QAKI,QAGTZ,EAAUQ,GACVN,EAAgB,cAGhB,IAEH,IAAMI,EAAwB,uCAAG,WAAOlV,GAAP,iBAAAhF,EAAA,sEACLD,IADK,cAC1BE,EAD0B,gBAEPA,EAAa8a,gBAFN,cAE1BC,EAF0B,OAIhCvC,OAAOC,KAAK1T,GAAMoT,SAAQ,SAAApN,GACzB,IAAM/F,EAAS+V,EAAWhQ,GAC1BhG,EAAKgG,GAAL,YAAgC/F,EAAO8C,gBANR,kBASzB/C,GATyB,2CAAH,sDAY9B,MAAqB,aAAjB6U,EAEF,mFAE0B,eAAjBA,EACH,qDAGN,6BACEF,IC9FLsB,IAASC,OACR,oCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrG,KACjC,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,aAAaC,UAAW3B,KAC1C,kBAAC,IAAD,CAAO0B,KAAK,qBAAqBC,UAAWrG,QAKhD/L,SAASqS,eAAe,SxC4GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxZ,MAAK,SAAAyZ,GACjCA,EAAaC,iB,mByCnInBhd,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.6f8d26ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.636d6b5f.png\";","module.exports = __webpack_public_path__ + \"static/media/success.ca1d9d6c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { DARK_BLUE } from './constants';\n\nconst GlobalStyle = createGlobalStyle`\n\t\n\tbody {\n\t\tmargin: 0!important;\n\t\tfont-family: \"Roboto\", sans-serif;\n\t\tcolor: ${DARK_BLUE};\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t}\n`\n\nexport default GlobalStyle;","export const PINK = \"#FF009C\";\nexport const O_PINK = \"rgba(255,0,156, 0.4)\";\nexport const BLUE = \"#5400FF\";\nexport const DARK_BLUE = \"#084486\";\nexport const LIGHT_GRAY = \"#d3d3d3\";\nexport const DARK_GRAY = \"#BBBDC0\";\nexport const API_URL = process.env.NODE_ENV === 'production' ? \"https://api.flux.market\" : \"http://localhost:3001\";\nexport const GREEN = \"#26a65b\"\nexport const YELLOW = \"#F7CA18\"\nexport const RED = \"#f03434\"\nexport const WHITE = \"#FFFFFF\"\nexport const TRACKING_ID = \"UA-159992242-1\";\nexport const NEAR_RPC_URL = \"https://rpc.nearprotocol.com\"\nexport const PRE_PAID_GAS = 10000000000000000;","import { GREEN, YELLOW, RED, WHITE } from \"../constants\"\n\nexport const daiToDollars = (num) => {\n\treturn (num / 10 ** 17).toFixed(2)\n}\n\nexport const dollarsToDai = (num) => {\n\treturn parseInt((num * 10 ** 17).toFixed(2))\n}\n\nexport const yoctoToNear = (num) => {\n\treturn (num / 10 ** 23)\n\t// return (num / 10 ** 23).toFixed(2)\n}\n\nexport const nearToYocto = (num) => {\n\treturn (num * 10 ** 23).toFixed(2)\n}\n\nexport const toEarnings = (order) => {\n\tif (order) {\n\t\treturn daiToDollars(order.amount / order.price * 100);\n\t} \n\treturn 0;\n} \n\nexport const allowanceToColor = (yocto) => {\n\tif (yocto === null) {\n\t\treturn WHITE\n\t}\t\t\t\t\t\t\t\t \n\telse if (yocto >= 50000000000000000) {\n\t\treturn GREEN\n\t}\t\t\t\t\t\t\t\t \n\telse if (yocto < 50000000000000000) {\n\t\treturn YELLOW\n\t}\n\telse {\n\t\treturn RED\n\t}\t\t\n}","import React, {useReducer} from 'react';\nimport Flux from 'flux-sdk';\n\nconst initialState = {\n\tflux: null,\n\tbalance: null,\n};\nconst reducer = (state, action) => {\n\tswitch(action.type) {\n\t\tcase 'connected': {\n\t\t\treturn state = {\n\t\t\t\t...state,\n\t\t\t\tflux: action.payload.flux\n\t\t\t}\n\t\t}\n\t\tcase 'balanceUpdate': {\n\t\t\treturn state = {\n\t\t\t\t...state, \n\t\t\t\tbalance: action.payload.balance\n\t\t\t};\n\t\t}\n\t\tdefault : {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const connect = async () => {\n  const fluxInstance = new Flux();\n  await fluxInstance.connect(\"flux-protocol-dev\");\n  if (fluxInstance.walletConnection.isSignedIn()) {\n    try {\n      await fluxInstance.getFDaiBalance();\n    } catch {\n      await fluxInstance.claimFDai();\n    }\n  }\n  return fluxInstance;\n}\n\nexport const FluxContext = React.createContext(initialState)\n\nexport const FluxProvider = ({children}) => {\n\tconst [flux, dispatch] = useReducer(reducer, initialState)\n\n\treturn(\n\t\t<FluxContext.Provider value={[flux, dispatch]}>{children}</FluxContext.Provider>\n\t)\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport fluxLogo from '../assets/logo.png';\nimport styled from 'styled-components';\nimport { daiToDollars } from '../utils/unitConvertion';\nimport { DARK_GRAY, WHITE, DARK_BLUE } from '../constants';\nimport { FluxContext } from './FluxProvider';\n\nconst Logo = styled.img`\n\tdisplay: inline-block;\n\talign-self: center;\n\twidth: 13%;\n\n`\n\nconst HeaderContainer = styled.header`\n\tdisplay: flex;\n\tposition: fixed;\n\tz-index: 99;\n\tbackground-color: white;\n\tjustify-content: space-between;\n\tvertical-align: middle;\n\talign-items: center;\n\tpadding: 2% 5%;\n\tfont-weight: bold;\n\ttop: 0;\n\tmax-height: 70px;\n\twidth: 90%;\n\tborder-bottom: 1px solid ${DARK_GRAY};\n\tbox-shadow: 0px 0px 1px rgba(0, 0, 0, 0.25);\n\tfont-size: 12px;\n\n\t@media (min-width: 560px) {\n\t\tpadding: 1% 5%;\n\t}\n`\n\nconst LoginButton = styled.button`\n\talign-self: center;\n\tcolor: ${DARK_BLUE};\n\tbackground-color: ${WHITE};\n\tborder: 1px solid ${DARK_BLUE};\n\tborder-radius: 6px;\n\tpadding: 8px 12px;\n\tfont-weight: bold;\n\n\tfont-size: 10px;\n`\nconst AccountInfo = styled.span`\n\tdisplay: block;\n\tposition: relative;\n\ttext-align: center;\n`\n\n/* TODO: Finish allowance warning */\nconst AllowanceWarning = styled.div`\n\tdisplay: none; \n\tcolor: red;\n\tborder: 1px solid red;\n\tborder-radius: 50%;\n\tposition: absolute;\n\twidth: 12px;\n\tfont-size: 10px;\n\tright: -18px;\n\ttop: 1px;\n\n`\n\nfunction Header() {\n\tconst [{flux, balance}, dispatch] = useContext(FluxContext);\n\tconst isSignedIn = flux.walletConnection.isSignedIn();\n\t\n\tconst reloadApp = () => {\n\t\twindow.location.reload();\n\t}\n\n\tif ((balance === null || balance === undefined) && flux.isSignedIn()) {\n\n\t\tflux.getFDaiBalance(flux.getAccountId).then(updatedBalance => \n\t\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}})\n\t\t).catch(err => console.error(err))\n\t}\n\t\n\treturn (\n\t\t<HeaderContainer>\n\t\t  <Logo onClick={reloadApp} id=\"header-logo\" src={fluxLogo} alt=\"our company logo\"/>\n\t\t  {\n\t\t\t\t!isSignedIn\n\t\t\t\t? \n\t\t\t  <LoginButton onClick={() => {\n\t\t\t\t\tflux.signIn()\n\t\t\t\t}} >Sign in</LoginButton>\n\t\t\t\t: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AccountInfo> {flux.getAccountId()} <AllowanceWarning>!</AllowanceWarning> </AccountInfo>\n\t\t\t\t\t\t<AccountInfo> {balance !== undefined ? `$${daiToDollars(balance)}` : null}</AccountInfo>\n\t\t\t\t\t\t<LoginButton onClick={() => {\n\t\t\t\t\t\t\tflux.signOut()\n\t\t\t\t\t\t\treloadApp()\n\t\t\t\t\t\t}}>Sign out</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t  }\n\t\t</HeaderContainer>\n\t);\n\n}\n\nexport default Header;\n","const timeDiff = time => {\n\tconst now = new Date().getTime();\n\tconst diff = time - now; \n\treturn diff;\n}\n\nexport const moreThanWeekFromNow = time => {\n\tconst diff = timeDiff(time);\n\treturn diff > 604800000;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst TimeValue = styled.span`\n\tfont-weight: bold;\n`;\nexport default function CountDownTimer({ days, hours, minutes, seconds, completed }) {\n\tif (completed) {\n\t  return <div>Market ended</div>;\n\t} else {\n\t  return <div> ends in: <TimeValue>{days} days {hours < 10 ? \"0\" + hours : hours}:{minutes < 10 ? \"0\" + minutes : minutes }:{seconds < 10 ? \"0\" + seconds : seconds}</TimeValue></div>;\n\t}\n};","import React from 'react';\nimport styled from 'styled-components';\nimport Moment from 'react-moment';\n\nconst TimeValue = styled(Moment)`\n\tfont-weight: bold;\n`;\n\nexport default function EndDate({endTime, ended}) {\n\n\treturn <div>{!ended ? \"resolution date\" : \"ended\"}: <TimeValue format=\"DD/MM/YYYY\">{new Date(endTime)}</TimeValue></div>\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { moreThanWeekFromNow } from '../../../utils/dateUtils.js';\nimport Countdown from 'react-countdown-now';\nimport CountdownTimer from './CountdownTimer.js';\nimport EndDate from './EndDate.js';\nimport { DARK_BLUE } from '../../../constants.js';\n\nconst TimeIndicator = styled.span`\n\tfont-size: 12px;\n  color: ${DARK_BLUE};\n\tdisplay: block;\n\twidth: 100%;\n\ttext-align: right;\n\tpadding-top: 18px;\n`;\n\nexport default function ResolutionDate({endTime}) {\n\tconst ended = endTime <= new Date().getTime();\n\t\n\treturn (\n\t\t<TimeIndicator>\n\t\t\t{\n\t\t\t\tmoreThanWeekFromNow(endTime) || ended ? <EndDate ended={ended} endTime={endTime}/> : \t<Countdown zeroPadTime={2} date={endTime} renderer={CountdownTimer} />\n\t\t\t}\n\t\t</TimeIndicator>\n\t)\n};","export const capitalize = (s) => {\n\tif (!s) return;\n\treturn s.charAt(0).toUpperCase() + s.slice(1)\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE, WHITE } from '../../../constants';\n\nconst ExtraInfoContainer = styled.div`\n\tpadding: 20px 0 ;\n`;\n\nconst ShowInfoButton = styled.button`\n\tborder: 1px solid ${DARK_BLUE};\n\tmargin: 0;\n\tpadding: 0 4px;\n\twidth: 18px;\n\theight: 17px;\n\tcolor: ${DARK_BLUE};\n\ttext-align: center;\n\tdisplay: block;\n\tborder-radius: 50%;\n\tbackground-color: ${WHITE};\n\tmargin:  auto;\n\tdisplay: block;\n`\n\nconst Title = styled.p`\n\tfont-weight: medium;\n\tmargin: 0;\n\tfont-size: 12px;\n`\nconst Info = styled.p`\n\tfont-weight: lighter;\n\tmargin: 0;\n\tfont-size: 12px;\n`\n\nexport default function ExtraInfo({data, market}) {\n\tlet [showInfo, toggleShowInfo] = useState(false);\n\n\treturn (\n\t\t<ExtraInfoContainer>\n\t\t\t<ShowInfoButton onClick={() => toggleShowInfo(!showInfo)}>{showInfo ? \"-\" : \"+\"}</ShowInfoButton>\n\t\t\t{\n\t\t\t\tshowInfo && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Title>extra info:</Title> \n\t\t\t\t\t\t<Info>{data}</Info>\n\t\t\t\t\t\t<Info>Market id: {market.id}</Info>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t</ExtraInfoContainer>\n\t)\n};","import React, {useReducer} from 'react';\n\nconst initialState = {\n\tmarket: null, \n\toutcome: null, \n\tprice: null\n};\nconst reducer = (state, action) => {\n\tswitch(action.type) {\n\t\tcase 'startOrderPlacement': {\n\t\t\treturn state = {\n\t\t\t\tmarket: action.payload.market,\n\t\t\t\toutcome: action.payload.outcome,\n\t\t\t\tprice: action.payload.price\n\t\t\t}\n\t\t} \n\t\tcase 'stopOrderPlacement': {\n\t\t\treturn state = initialState;\n\t\t} \n\t\tdefault : {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\nexport const OrderContext = React.createContext(initialState)\n\nexport const OrderProvider = ({children}) => {\n\tconst [order, dispatch] = useReducer(reducer, initialState)\n\n\treturn(\n\t\t<OrderContext.Provider value={[order, dispatch]}>{children}</OrderContext.Provider>\n\t)\n}","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE, DARK_GRAY , BLUE } from '../../../constants';\nimport { OrderContext } from '../../OrderProvider';\n\nexport const Button = styled.button`\n\twidth: 100%;\n\tbackground-color: white;\n\tborder-radius: 6px;\n\tpadding: 10px 15px;\n\tmargin: 5px 0;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t-webkit-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t-moz-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\tcolor: ${DARK_BLUE};\n\t@media (min-width: 560px) {\n\t\tpadding: 15px 25px;\n\t}\n\t&:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n`;\n\nconst Label = styled.span`\nfont-size: 12px;\nwidth: 50%;\nfont-weight: bold;\ntext-align: left;\n`;\nconst LastTradedPrice = styled.span`\nwidth: 25%;\nfont-size: 20px;\ntext-align: center;\n`;\nconst MarketPrice = styled.span`\ntext-align: right;\nwidth: 25%;\nfont-size: 20px;\nfont-weight: bold;\n`;\n\nconst OutcomeButton = ({label, binary, index, market, price}) => {\n\tconst [orderModal, dispatch] = useContext(OrderContext)\n\tconst color = binary ? index === 0 ? DARK_GRAY : BLUE : DARK_BLUE;\n\tconst lastTradedPrice = market.last_price_for_outcomes[index];\n\tconst hasLastTradedPrice = !!lastTradedPrice;\n\n\tconst ColoredButton = styled(Button)`\n\t\tborder: 1px solid ${color};\n\t`\n\treturn (\n\n\t\t<ColoredButton \n\t\t\tonClick={() => dispatch({type: 'startOrderPlacement', payload: {market, outcome: index, price}})} \n\t\t>\n\t\t\t<Label>{label}</Label>\n\t\t\t<LastTradedPrice>{hasLastTradedPrice ? lastTradedPrice + \"¢\" : \"--\"}</LastTradedPrice>\n\t\t\t<MarketPrice>{price < 100 ? price + \"¢\" : \"--\"}</MarketPrice>\n\t\t</ColoredButton>\n\n\t)\n}\n\nexport default OutcomeButton;","import React from 'react';\nimport styled from 'styled-components';\n\nexport default ({color, onClick ,children, className}) => {\n\tconst StyledButton = styled.button`\n\t\tbackground-color: ${color};\n\t\tcolor: white;\n\t\tborder-radius: 10px;\n\t\tfont-size: 20px;\n\t\tfont-weight: bold;\n\t\twidth: 100%;\n\t\tmargin-top: 18px;\n\t\tpadding: 18px;\n\t`;\n\treturn <StyledButton className={className} onClick={onClick}>{children}</StyledButton>\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE } from '../constants';\n\nconst Spinner = styled.div `\n\tdisplay: inline-block;\n\tposition: absolute;\n\twidth: 80px;\n\theight: 80px;\n\tleft: calc(50% - 40px);\n\ttop: calc(50% - 40px);\n\n\t& div {\n\t\tanimation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n\t\ttransform-origin: 40px 40px;\n\t}\n\t& div:after {\n\t\tcontent: \" \";\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\twidth: 6px;\n\t\theight: 6px;\n\t\tborder-radius: 50%;\n\t\tbackground: ${DARK_BLUE};\n\t\tmargin: -4px 0 0 -4px;\n\t}\n\t& div:nth-child(1) {\n\t\tanimation-delay: -0.036s;\n\t}\n\t& div:nth-child(1):after {\n\t\ttop: 63px;\n\t\tleft: 63px;\n\t}\n\t& div:nth-child(2) {\n\t\tanimation-delay: -0.072s;\n\t}\n\t& div:nth-child(2):after {\n\t\ttop: 68px;\n\t\tleft: 56px;\n\t}\n\t& div:nth-child(3) {\n\t\tanimation-delay: -0.108s;\n\t}\n\t& div:nth-child(3):after {\n\t\ttop: 71px;\n\t\tleft: 48px;\n\t}\n\t& div:nth-child(4) {\n\t\tanimation-delay: -0.144s;\n\t}\n\t& div:nth-child(4):after {\n\t\ttop: 72px;\n\t\tleft: 40px;\n\t}\n\t& div:nth-child(5) {\n\t\tanimation-delay: -0.18s;\n\t}\n\t& div:nth-child(5):after {\n\t\ttop: 71px;\n\t\tleft: 32px;\n\t}\n\t& div:nth-child(6) {\n\t\tanimation-delay: -0.216s;\n\t}\n\t& div:nth-child(6):after {\n\t\ttop: 68px;\n\t\tleft: 24px;\n\t}\n\t& div:nth-child(7) {\n\t\tanimation-delay: -0.252s;\n\t}\n\t& div:nth-child(7):after {\n\t\ttop: 63px;\n\t\tleft: 17px;\n\t}\n\t& div:nth-child(8) {\n\t\tanimation-delay: -0.288s;\n\t}\n\t& div:nth-child(8):after {\n\t\ttop: 56px;\n\t\tleft: 12px;\n\t}\n\t@keyframes lds-roller {\n\t\t0% {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n`\n  \n\nconst spinner = () => <Spinner ><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></Spinner>\n\nexport default spinner;","import React from 'react';\nimport styled from 'styled-components';\nimport Spinner from './Spinner';\n\nconst StyledSpinner = styled(Spinner) `\n\tleft: calc(50% - 32px);\n\ttop: calc(50vh - 32px);\n`;\n\nfunction Loader() {\n\treturn (\n\t\t<StyledSpinner />\n\t);\n\n}\n\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from './../OutcomeButton';\nimport { DARK_BLUE, DARK_GRAY } from '../../../../constants';\nimport { daiToDollars } from '../../../../utils/unitConvertion';\n\nconst ButtonData = styled.span`\n\twidth: 25%;\n\ttext-align: center;\n\tfont-size: 20px;\n`\nconst Label = styled.span`\n\twidth: 25%;\n\ttext-align: center;\n\tfont-size: 12px;\n\tfont-weight: bold;\n`\n\nconst BoldText = styled.span`\n\tfont-weight: bold;\n`;\n\nconst CancelText = styled.p`\n\tfont-size: 20px;\n\ttext-align: center;\n\tmargin: 0;\n\tdisplay: block;\n\twidth: 100%;\n\tfont-weight: bold;\n`\n\nexport default ({order, label, selected, setSelected, cancelOrder}) => {\n\tconst [canceled, setCanceled] = useState(false);\n\n\tconst ColoredButton = styled(Button)`\n\t\tborder: 1px solid ${selected ? DARK_BLUE : DARK_GRAY };\n\t\tbackground-color: ${selected ? DARK_BLUE : \"white\"};\n\t\tcolor: ${selected ? \"white\" : DARK_BLUE};\n\t\tmargin: 10px 0 ;\n\n\t`;\n\n\treturn (\n\t\tcanceled ? null : (\n\t\t\t<ColoredButton onClick={() => {\n\t\t\t\tif (!selected) setSelected();\n\t\t\t\telse {\n\t\t\t\t\tsetCanceled(true);\n\t\t\t\t\tcancelOrder();\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t\t{selected ? <CancelText>cancel order</CancelText> : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Label><BoldText>{label}</BoldText></Label>\n\t\t\t\t\t\t<ButtonData>{order.price}¢</ButtonData>\n\t\t\t\t\t\t<ButtonData><BoldText>${daiToDollars(order.spend)}</BoldText></ButtonData>\n\t\t\t\t\t\t<ButtonData>{(order.filled / order.spend * 100).toFixed(2)}%</ButtonData>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</ColoredButton>\n\t\t)\n\t)\n}","import React, {useState, useContext} from 'react';\nimport styled from 'styled-components';\nimport { Header, HeaderSection } from '../MarketContent';\nimport CancelButton from './CancelButton';\nimport { FluxContext } from './../../../FluxProvider';\n\nconst OpenOrders = ({orders, market}) => {\n\tconst [selectedOrder, setSelectedOrder] = useState(null)\n\tconst [{flux}, dispatch] = useContext(FluxContext);\n\tconst StyledHeader = styled(Header)`\n\t\ttext-align: center;\n\t\twidth: 25%;\n\t`\n\n\tconst buttons = orders.map((order, i) => {\n\t\tconst cancelOrder = async () => {\n\t\t\tawait flux.cancelOrder(market.id, order.outcome, order.id)\n\t\t\tconst updatedBalance = await flux.getFDaiBalance().catch(err => console.error(err));\n\t\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\n\t\t};\n\t\tlet selected = i === selectedOrder;\n\t\tlet label = market.outcome_tags[order.outcome];\n\t\tif (market.outcomes === 2) {\n\t\t\tlabel = order.outcome === 0 ? \"NO\" : \"YES\";\n\t\t}\n\t\treturn <CancelButton label={label} cancelOrder={cancelOrder} setSelected={() => setSelectedOrder(i) } selected={selected} order={order} key={i} />\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderSection>\n\t\t\t\t<StyledHeader>contract</StyledHeader>\n\t\t\t\t<StyledHeader>price per share</StyledHeader>\n\t\t\t\t<StyledHeader>order value</StyledHeader>\n\t\t\t\t<StyledHeader>% filled</StyledHeader>\n\t\t\t</HeaderSection>\n\t\t\t{buttons}\n\t\t</>\n\t)\n}\n\n\nexport default OpenOrders","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from './../OutcomeButton';\nimport { DARK_BLUE } from '../../../../constants';\nimport { daiToDollars } from '../../../../utils/unitConvertion';\n\nconst ButtonData = styled.span`\n\twidth: 25%;\n\ttext-align: center;\n\tfont-size: 20px;\n`\nconst Label = styled.span`\n\twidth: 25%;\n\ttext-align: center;\n\tfont-size: 12px;\n\tfont-weight: bold;\n\n`\n\nconst BoldText = styled.span`\n\tfont-weight: bold;\n`;\n\nexport default ({order, label}) => {\n\tconst ColoredButton = styled(Button)`\n\t\tborder: 1px solid ${DARK_BLUE};\n\t\tmargin: 10px 0 ;\n\t`;\n\n\treturn (\n\t\t<ColoredButton>\n\t\t\t<Label>{label}</Label>\n\t\t\t<ButtonData>{order.price}¢</ButtonData>\n\t\t\t<ButtonData><BoldText>${daiToDollars(order.spend)}</BoldText></ButtonData>\n\t\t\t<ButtonData>{daiToDollars(order.sharesFilled * 100)}</ButtonData>\n\t\t</ColoredButton>\n\t)\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Header, HeaderSection } from '../MarketContent';\nimport FilledOrderButton from './FilledOrderButton';\n\nexport default ({orders, market}) => {\n\tconst StyledHeader = styled(Header)`\n\t\ttext-align: center;\n\t\twidth: 25%;\n\t`;\n\nlet buttons = orders.map((order, i) => {\n\tlet label = market.outcome_tags[order.outcome];\n\tif (market.outcomes === 2) {\n\t\tlabel = order.outcome === 0 ? \"NO\" : \"YES\";\n\t}\n\treturn <FilledOrderButton label={label} order={order} key={i} />\n})\n\treturn (\n\t\t<>\n\t\t\t<HeaderSection>\n\t\t\t\t<StyledHeader>contract</StyledHeader>\n\t\t\t\t<StyledHeader>price per share</StyledHeader>\n\t\t\t\t<StyledHeader>order value</StyledHeader>\n\t\t\t\t<StyledHeader>shares</StyledHeader>\n\t\t\t</HeaderSection>\n\t\t\t{buttons}\n\t\t</>\n\t)\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport ModalButton from '../../../ModalButton';\nimport { DARK_BLUE } from '../../../../constants';\nimport Loader from '../../../Loader';\nimport OpenOrders from './OpenOrders';\nimport FilledOrders from './FilledOrders';\nimport { Description } from './../MarketContent';\nimport ResolutionDate from '../ResolutionDate';\nimport { FluxContext } from \"./../../../FluxProvider\";\n\nconst Container = styled.div`\n\tbackground-color: white;\n\tanimation: fadein 500ms linear;\n\tposition: fixed;\n\twidth: 90%;\n\theight: calc(100% - 70px);\n\tleft: 0;\n\ttop: 0;\n\tpadding: 0 5%;\n\tz-index: 2;\n\tpadding-top: 71px;\n\n\t@keyframes fadein {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t100% {\n\t\t\topacity: 100;\n\t\t}\n\t}\n`\n\nconst OrderSection = styled.div`\n\theight: 67%;\n\toverflow: scroll;\n`;\n\nconst Title = styled.p`\n\tfont-weight: 500;\n\tfont-size: 14px;\n`;\n\nconst ButtonContainer = styled.div`\n\tposition: absolute;\n\twidth: 90%!important;\n\tbottom: 3%;\n\tbackground-color:white;\n`;\nconst CancelButton = styled(ModalButton)`\n\twidth: 100%!important;\n\tbottom: 3%;\n`;\n\nconst UserPositions = ({closeModal, market, accountId, updateMarketOrders}) => {\n\tconst [{flux}, dispatch] = useContext(FluxContext)\n\tconst [orders, setOrders] = useState(null);\n\n\tuseEffect(() => {\n\t\tlet mounted = false;\n\t\tdocument.body.style.overflow = 'hidden';\n\t\tif (mounted === false) setOrders(flux.filterUserOrders(market, flux.getAccountId()));\n\t\treturn () => {\n\t\t\tdocument.body.style.overflow = 'scroll';\n\t\t\tmounted = true;\n\t\t};\n\t}, [setOrders, market, accountId]);\n\n\treturn (\n\t\t<Container>\n\t\t\t{\torders === null ? <Loader /> : (\n\t\t\t\t<>\n\t\t\t\t\t<ResolutionDate endTime={market.end_time} />\n\t\t\t\t\t<Description>{market.description}</Description>\n\t\t\t\t\t<OrderSection>\n\t\t\t\t\t\t<Title>my open orders</Title>\n\t\t\t\t\t\t<OpenOrders market={market} orders={orders.openOrders} />\n\t\t\t\t\t\t<Title>my filled orders</Title>\n\t\t\t\t\t\t<FilledOrders market={market} orders={orders.filledOrders}/>\n\t\t\t\t\t</OrderSection>\n\t\t\t\t</>\n\t\t\t)\n\t\t }\n\t\t\t<ButtonContainer>\n\t\t\t\t<CancelButton color={DARK_BLUE} onClick={closeModal}>{orders === null ? \"Cancel\" : \"Done\"}</CancelButton>\n\t\t \t</ButtonContainer>\n\t\t</Container>\n\t);\n};\n\nexport default UserPositions;","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { capitalize } from '../../../utils/stringManipulation';\nimport { DARK_BLUE, LIGHT_GRAY } from '../../../constants';\nimport ExtraInfo from './ExtraInfo.js';\nimport OutcomeButton from './OutcomeButton.js';\nimport UserPositions from './UserPositions/UserPositions.js';\nimport ResolutionDate from './ResolutionDate.js';\nimport { FluxContext } from '../../FluxProvider';\n\nconst ButtonSection = styled.div`\n  width: 100%;\n`;\n\nexport const Description = styled.h1`\n\tfont-size: 24px;\n\tcolor: ${DARK_BLUE};\n\tpadding-top: 55px;\n\tdisplay: block;\n\tfont-weight: 500;\n\tmargin: 0 auto;\n`\n\nconst PositionsButton = styled.p`\n\ttext-decoration: underline;\n\tcolor: ${DARK_BLUE};\n\tfont-weight: bold;\n\tfont-size: 14px;\n\tpadding: 14px 0;\n\ttext-align: center;\n\tcursor: pointer;\n`;\n\nexport const HeaderSection = styled.div`\n\tcolor: ${LIGHT_GRAY};\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\twidth: calc(100% - 30px);\n\tpadding: 0 15px;\n\tmargin: auto;\n`;\n\nexport const Header = styled.p`\n\tfont-size: 10px;\n\tfont-weight: 900;\n\tmargin: 0;\n\tpadding: 0;\n`\n\nconst FirstHeader = styled(Header)`\n\twidth: 50%;\n\ttext-align: left;\n`;\n\nconst SecondHeader = styled(Header)`\n\twidth: 25%;\n\ttext-align: center;\n`;\nconst ThirdHeader = styled(Header)`\n\twidth: 25%;\n\ttext-align: right;\n`;\n\nconst TopSection = styled.div`\n\tposition: relative;\n\tz-index: 1;\n`\n\nconst MarketContent = ({...props}) => {\n\tconst [{flux}, dispatch] = useContext(FluxContext);\n\tconst [marketOrders, setMarketOrders] = useState([]);\n\tconst [market, setMarket] = useState(props.market);\n\tconst [showPositions, setShowPositions] = useState(false);\n\tconst { end_time, description, outcomes, outcome_tags, extra_info } = market;\n\n\tuseEffect(() => {\n\t\n\t\tgetAndSetMarketPrices();\n\t\n\t}, []);\n\n\n\tconst getAndSetMarketPrices = async () => {\n\t\ttry {\n\t\tconst marketOrders = await market.getMarketPrices()\n\t\tsetMarketOrders(marketOrders)\n\t\t}\n\t\tcatch(err) {\n\t\t\talert('Something went wrong! Look up the console');\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\tconst getAndSetOrderbook = async () => {\n\t\tmarket.orderbooks = await market.getOrderbooks();\n\t\tsetMarket(market);\n\t}\n\tlet buttons = [];\n\tif (outcomes > 2) {\n\t\tbuttons = outcome_tags.map((tag, i) => (\n\t\t\t<OutcomeButton market={market} label={tag} price={marketOrders[i]} index={i} key={i} />\n\t\t));\n\t} else {\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tbuttons.push(<OutcomeButton market={market} price={marketOrders[i]} label={i === 0 ? \"NO\" : \"YES\" } binary index={i} key={i} />)\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<TopSection>\n\t\t\t\t<ResolutionDate endTime={end_time} />\n\t\t\t</TopSection>\n\t\t\t<Description>\n\t\t\t\t{ capitalize(description) }\n\t\t\t\t<ExtraInfo data={extra_info} market={market}/>\n\t\t\t</Description>\n\t\t\t\n\t\t\t<HeaderSection>\n\t\t\t\t<FirstHeader>contract</FirstHeader>\n\t\t\t\t<SecondHeader>last price traded</SecondHeader>\n\t\t\t\t<ThirdHeader>market price:</ThirdHeader>\n\t\t\t</HeaderSection>\n\t\t\t<ButtonSection>\n\t\t\t\t{buttons}\n\t\t\t</ButtonSection>\n\t\t\t{showPositions && <UserPositions updateMarketOrders={getAndSetMarketPrices} market={market} closeModal={() => setShowPositions(false)}/>}\n\t\t\t<PositionsButton onClick={() => setShowPositions(true)}>my positions</PositionsButton>\n\t\t</div>\n\n\t);\n};\n\nexport default MarketContent;","export const addMarket = async (marketId, description, accountId ,categories, signedMessage) => {\n\tif (typeof marketId !== \"number\") throw new Error(\"Invalid marketId type\");\n\tlet markets = JSON.parse(localStorage.getItem('markets'));\n\tif (!Array.isArray(markets)) {\n\t\tmarkets = []; \n\t}\n\tmarkets.unshift({\n\t\t\t marketId,\n\t\t\t description,\n\t\t\t accountId,\n\t\t\t categories,\n\t\t\t publicKey: signedMessage.publicKey.toString() \n\t\t});\n\tlocalStorage.setItem(\"markets\", JSON.stringify(markets));\n\twindow.location.reload();\n\treturn { success: true };\n}\n\n\n\nexport const getMarkets = async (categories) => {\n\tif (categories.length === undefined) throw new Error(\"categories need to be an array, pass an empty array if no category filters\");\n\tlet markets = JSON.parse(localStorage.getItem('markets'));\n\tif (!Array.isArray(markets)) markets = [];\n\treturn { markets }; \n}\n\nexport const removeMarket = async (marketId) => {\n\tconsole.log('deleting...');\n\tconst markets = JSON.parse(localStorage.getItem('markets'));\n\tif (!Array.isArray(markets)) return;\n\tconst indexToRemove = markets.findIndex(market => market.marketId == marketId);\n\tconsole.log(marketId);\n\tconsole.log('deleting...' + markets[indexToRemove]);\n\tmarkets.splice(indexToRemove, 1);\n\tconsole.log(\"Market removed!\" + markets[indexToRemove]);\n\tlocalStorage.setItem('markets', JSON.stringify(markets));\n\twindow.location.reload();\n\treturn JSON.stringify({ success: true });\n}\nexport const updateMarket = (market) => {\n\tconst markets = JSON.parse(localStorage.getItem('markets'));\n\tif (!Array.isArray(markets)) return;\n\tconst index = markets.findIndex(market => market.marketId == market.id);\n\tmarkets[index] = market;\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE } from '../../../constants';\nimport ResolutionDate from './ResolutionDate';\nimport { Description } from './MarketContent';\nimport { capitalize } from '../../../utils/stringManipulation';\nimport { daiToDollars } from '../../../utils/unitConvertion';\nimport { FluxContext } from '../../FluxProvider';\nimport {removeMarket} from '../../../utils/marketsUtils';\n\nconst ResolutedContainer = styled.div`\n\tdisplay: block;\n\twidth: 100%;\n`;\nconst ResolutionTitle = styled.h2`\n\tfont-weight: 400;\n\tfont-size: 14px;\n`;\nconst Resolution = styled.span`\n\twidth: 100%;\n\tfont-weight: bold;\n`;\n\nconst ClaimButton = styled.button`\n\tbackground-color: ${DARK_BLUE};\n\tcolor: white;\n\tborder-radius: 6px;\n\tpadding: 15px;\n\tfont-size: 16px;\n\tborder: none;\n\tbox-sizing: border-box;\n  -webkit-box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\n  -moz-box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\n  box-shadow: 0 2px 4px 0 rgb(171, 190, 200);\n\twidth: 100%;\n\tleft: 10%;\n\tfont-weight: bold;\n\tbottom: 25px;\n\tmargin: 25px 0;\n`;\nconst ResolutedSection = ({market}) => {\n\tconst [{flux}, dispatch] = useContext(FluxContext);\n\n\tconst updateBalance = async () => {\n\t\tconst updatedBalance = await flux.getFDaiBalance(flux.getAccountId());\n\t\tdispatch({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\n\t}\n\tconst [claimable, setClaimable] = useState(null);\n\tconst updateClaimable = () => {\n\t\tconst claimableAmount = flux.getClaimable(market.id, flux.getAccountId()).then(res => setClaimable(res));\n\t\treturn claimableAmount;\n\t}\n\n\tconst onClaimClick = async () => {\n\t\tif (canClaim === false) return;\n\t\tsetCanClaim(false);\n\t\tsetLoads(true);\n\t\ttry {\n\t\t\tawait flux.claimEarnings(market.id, flux.getAccountId());\n\t\t\tupdateClaimable();\n\t\t\tupdateBalance();\n\t\t}\n\t\tcatch(e) {\n\t\t\talert('Something went wrong. Look into the console!');\n\t\t\tconsole.error(e);\n\t\t}\n\t\tremoveMarket(market.id);\n\t\tsetLoads(false);\n\t\tsetCanClaim(true);\n\t}\n\n\tuseEffect(() => {\n\t\tlet mounted = false;\n\t\tif (!mounted) updateClaimable();\n\t\treturn () => {\n\t\t\tmounted = true;\n\t\t};\n\t}, []);\n\tconst [loads, setLoads] = useState(false);\n\tconst [canClaim, setCanClaim] = useState(true);\n\n\tlet resolution;\n\tif (market.outcomes === 2) {\n\t\tif (market.winning_outcome === 0) resolution = \"NO\";\n\t\telse if (market.winning_outcome === 1) resolution = \"Yes\";\n\t\telse resolution = \"Invalid\";\n\t} else {\n\t\tresolution = market.outcome_tags[market.winning_outcome] ? market.outcome_tags[market.winning_outcome] : \"invalid\"\n\t}\n\n\treturn (\n\t\t<ResolutedContainer>\n\t\t\t<ResolutionDate endTime={market.end_time}/>\n\t\t\t<Description>{capitalize(market.description)}</Description>\n\t\t\t<ResolutionTitle>\n\t\t\t\tResolution: <Resolution>{resolution}</Resolution>\n\t\t\t</ResolutionTitle>\n\n\t\t\t<ClaimButton onClick={onClaimClick}> {loads? 'Working...' : `Claim $${daiToDollars(claimable)}`}</ClaimButton> \n \t</ResolutedContainer>\n\t);\n};\n\nexport default ResolutedSection;","import React from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE, PINK } from '../../../constants';\nimport ResolutedSection from './ResolutedSection';\nimport MarketContent from './MarketContent.js';\nimport { Link } from 'react-router-dom';\n\nconst MarketContainer = styled.div`\n  width: 90%;\n  padding: 0 5%;\n\tmargin-top: 25px;\n  position: static;\n\tcolor: ${DARK_BLUE};\n  display: block;\n  background-color: white;\n  border-radius: 8px;\n  box-sizing: border-box;\n  -webkit-box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\n  -moz-box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\n  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.25);\n  margin-left: 5%;\n\n\t@media (min-width: 560px) {\n\t\toverflow: auto;\n\t\tmargin-bottom: 25px; \n\t}\n\n`;\n\nconst AllMarketsButton = styled(Link)`\n\tpadding-top: 14px;\n\tcolor: ${PINK};\n\tborder: none;\n\tfont-size: 18px;\n\ttext-align: center;\n\tdisplay: block;\n`\n\nfunction Market({market, specificId}) {\n\treturn (\n\t\t<>\n\t\t<MarketContainer >\n\t\t\t{\n\t\t\t\tmarket \n\t\t\t\t?\n\t\t\t\t\t!market.resoluted ? <MarketContent specificId={specificId} market={market}/> : <ResolutedSection market={market}/>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t</MarketContainer>\n\t\t{specificId &&<AllMarketsButton to=\"/\"> all markets</AllMarketsButton>}\n\t\t</>\n\t)\n}\n\nexport default Market;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Market from './Market/Market';\nimport Spinner from '../Spinner';\n\nconst MarketsContainer = styled.div`\n  width: 100%;\n  display: block;\n  margin: 0 auto;\n\tmargin-top: 80px;\n\tmargin-bottom: 30px;\n\n\t@media (min-width: 560px) {\n\t\tmargin-top: 115px;\n\t}\n`\n\nconst Markets = ({markets, specificId}) => {\n\treturn (\n\t\t<MarketsContainer id=\"markets-container\">\n\t\t\t\t\n\t\t\t{\n\t\t\t\tmarkets === null ? \n\t\t\t\t<Spinner /> \n\t\t\t\t:\n\t\t\t\tmarkets.map((market) => (\n\t\t\t\t\t<Market market={market} specificId={specificId} key={market.id}/>\n\t\t\t\t))\n\t\t\t}\t\n\t\t</MarketsContainer>\n\t);\n}\n\nexport default (Markets);\n","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport BN from 'bn.js';\nimport { FluxContext } from '../FluxProvider';\nimport { PRE_PAID_GAS } from './../../constants';\nimport { removeMarket } from './../../utils/marketsUtils';\nimport Loader from '../Loader';\n\nconst Market = styled.div`\n\n`;\nconst OwnerPortalMarket = ({ market }) => {\n\tconst [loads, setLoads] = useState(false);\n\tconst [{flux}, dispatch] = useContext(FluxContext);\n\tconst deleteMarket = () => removeMarket(market.id);\n\tconst resolute = async (winningOutcome) => {\n\t\tconsole.log(\"resoluting...\");\n\t\ttry {\n\t\t\tsetLoads(true);\n\t\t\tawait flux.resolute(market.id, winningOutcome);\n\t\t} \n\t\tcatch (err){\n\t\t\tconsole.error(err)\n\t\t}\n\t\tfinally {\n\t\t\tsetLoads(false);\n\t\t\twindow.location.reload();\n\t\t}\n\t}\n\n\tlet resoluteButtons = [];\n\tif (market.outcomes === 2) {\n\t\tresoluteButtons = [<button key={0} onClick={() => resolute(0)}>resolute NO</button>, <button key={1} onClick={() => resolute(1)}>resolute YES</button>];\n\t} else {\n\t\tresoluteButtons = market.outcome_tags.map((outcomeTag, i) => (<button key={i} onClick={() => resolute(i)}>resolute {outcomeTag}</button>));\n\t\n\t}\n\treturn (\n\t\t<>\n\t\t{loads && <Loader />}\n\t\t<Market>\n\t\t\t<p>{market.id}. {market.description}</p>\n\t\t\t{!market.resoluted ? \n\t\t\t<>\n\t\t\t\t<p>Resolutable: { market.end_time < new Date().getTime() ? \"true\" : \"false\" } </p>\n\t\t\t\t{resoluteButtons}\n\t\t\t\t<button onClick={() => resolute(null)}>Resolute invalid</button>\n\t\t\t</>\n\t\t  : \n\t\t\t<>\n\t\t\t\t<p>Resoluted: {market.outcome_tags[market.winning_outcome]} </p>\n\t\t\t</>\t\n\t\t\t}\n\t\t\t\n\t\t\t<button onClick={deleteMarket}> Delete</button>\n\t\t</Market>\n\t\t</>\n\t);\n};\n\n\nexport default OwnerPortalMarket;","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport OwnerPortalMarket from './OwnerPortalMarket';\nimport DateTimePicker from 'react-datetime-picker';\nimport BN from 'bn.js';\nimport { FluxContext } from '../FluxProvider';\nimport {addMarket} from '../../utils/marketsUtils';\nimport Loader from '../Loader';\n\nconst OwnerPortalContainer = styled.div`\n\tpadding-top: 250px;\n\tbackground-color: white;\n`;\nconst ShowHideButton = styled.button`\n\tpadding-top: 250px;\n\tposition: absolute;\n`;\nconst MarketCreator = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tpadding: '2px',\n};\n\nconst OwnerPortal = ({markets = []}) => {\n\tconst [{flux}, dispatch] = useContext(FluxContext);\n\tconst [isOwner, setIsOwner] = useState(false);\n\tconst [description, setDescription] = useState('new market');\n\tconst [categories, setCategories] = useState();\n\tconst [extraInfo, setExtraInfo] = useState('');\n\tconst [outcomes, setOutcomes] = useState(2);\n\tconst [endTime, setEndtime] = useState(new Date(new Date().setDate(new Date().getDate() + 1)));\n\tconst [show, toggleShow] = useState(false);\n\tconst [outcomeTags, setOutcomeTags] = useState([]);\n\tconst outcomeInputs = [];\n\tconst [loads, setLoads] = useState(false);\n\tconst [showsMarkets, setShowsMarkets] = useState(false);\n\n\tconst getIsOwner = async () => {\n    if (!flux.walletConnection.isSignedIn()) return false;\n\treturn true;\n\t}\n\t\n\tconst setOutcomeTag = (value, i) => {\n\t\tconst updatedTags = outcomeTags;\n\t\tupdatedTags[i] = value;\n\t\tif (!updatedTags[i]) {\n\t\t\talert(`Input ${i} is changed incorrectly!`);\n\t\t\treturn;\n\t\t}\n\t\tsetOutcomeTags(updatedTags);\n\t}\n\n\tif (outcomes > 2) {\n\t\tfor (let i = 0; i < outcomes; i++) {\n\t\t\toutcomeInputs.push(\n\t\t\t\t<div key={i}>\n\t\t\t\t<label htmlFor={`outcome${i}`}>{`Outcome ${i + 1}: `}</label>\n\t\t\t\t<input id={`outcome${i}`} type=\"text\" value={outcomeTags[i]} onChange={e => setOutcomeTag(e.target.value, i)}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t} \n\n  useEffect(() => {\n    getIsOwner().then(res => setIsOwner(res));\n  }, []);\n\n\n  const showMarketAdmin = () => {\n\tsetShowsMarkets(!showsMarkets);\n  };\n  const ChangeOutcomes = (e) => {\n\t  let { value } = e.target;\n\t  setOutcomes(value);\n  }\n\tconst createMarket = async (e) => {\n\t\tif (outcomes < 2) { \n\t\t\talert('Number of outcomes must be greater then 1');\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(\"creating market...\");\n\t\tsetLoads(true);\n\t\te.preventDefault();\n\t\tconst categoryArray = categories && categories.length > 0 ? categories.split(\",\") : [];\n\t\ttry {\n\t\tconst signedMessage = await flux.account.connection.signer.signMessage(\"market_creation\", flux.getAccountId(), \"default\")\n\t\tconst txRes = await flux.createMarket(description, extraInfo, parseInt(outcomes), outcomeTags, [\"test\"], endTime.getTime());\n\t\tconst marketId = parseInt(atob(txRes.status.SuccessValue));\n\t\tconst { success } =  await addMarket(marketId, description, flux.getAccountId(), categoryArray, signedMessage);\n\t\tif (success) return; \n\t\tthrow new Error(\"Market wasn't successfully added to server\");\n\t\t}\n\t\tcatch(e) {\n\t\t\talert('Something went wrong. Look into the console!');\n\t\t\tconsole.error(e);\n\t\t\tconsole.log(outcomeTags);\n\t\t}\n\t}\n\tconst ownerPortalMarkets = \tmarkets.map((market, key) => <OwnerPortalMarket key={key} market={market}/>);\n\treturn (\n\t\tisOwner ?\n\t\t<>\n\t\t\t{loads && <Loader />}\n\t\t\t<ShowHideButton onClick={e => toggleShow(!show)}>{show ? \"-\" : \"+\"}</ShowHideButton>\n\t\t\t{show && <OwnerPortalContainer>\n\t\t\t\t<label>New market:</label>\n\t\t\t\t<form style={MarketCreator}  onSubmit={ (e) => createMarket(e) }>\n\t\t\t\t\t<label htmlFor='desc'>Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='desc'\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tonChange={event => setDescription(event.target.value)} \n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor='categories'>Categories:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='categories'\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={categories}\n\t\t\t\t\t\tplaceholder=\"categories\"\n\t\t\t\t\t\tonChange={event => setCategories(event.target.value)} \n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor='extraInfo'>Extra Info:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={extraInfo}\n\t\t\t\t\t\tplaceholder=\"extra info\"\n\t\t\t\t\t\tonChange={event => setExtraInfo(event.target.value)} \n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor='outcomes'> Number of outcomes:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t   \tid = 'outcomes'\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={outcomes}\n\t\t\t\t\t\tonChange={ChangeOutcomes}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{outcomeInputs}\n\n\t\t\t\t\t<label>end time:</label>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tvalue={endTime}\n\t\t\t\t\t\tonChange={setEndtime} \n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Create Market</button>\n\t\t\t\t</form>\n\t\t\t\t<button onClick={showMarketAdmin}>{showsMarkets? 'Hide Markets' : 'Show Markets'} </button>\n\t\t\t\t{ showsMarkets && ownerPortalMarkets }\n\t\t\t\t\n\t\t\t</OwnerPortalContainer>}\n\t\t</>\n\t\t:\n\t\t<div></div>\n\t);\n};\n\nexport default OwnerPortal;","import React, { useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst FadeIn = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t}\n\tto {\n\t\topacity: 1;\n\t}\n`;\n\nconst MoveUp = keyframes`\n\tfrom {\n\t\tbottom: -40vh;\n\t}\n\tto {\n\t\tbottom: 0;\n\t}\n`;\n\n\nconst ModalContainer = styled.div`\n\tbackground-color: white;\n\tposition: fixed;\n\tbottom: 0;\n\twidth: 90%;\n\tz-index: 102;\n\tanimation: ${MoveUp} 500ms linear;\n\tpadding: 0 5%;\n\tpadding-bottom: 18px;\n`\n\nconst Blackground = styled.div`\n\tposition: fixed;\n\twidth: 100vw;\n\theight: 100vh;\n\ttop: 0;\n\tanimation: ${FadeIn} 500ms linear;\n\tleft: 0;\n\toverflow: hidden;\n\tbackground-color: rgba(0, 0, 0, 0.3);\n\tz-index: 101;\n`\nfunction Modal({className, children, blackground, onBlackgroundClick}) {\n\tuseEffect(() => {\n\t\t\n\t\tdocument.body.style.overflow = 'hidden';\n\t\treturn () => {\n\t\t\tdocument.body.style.overflow = 'scroll';\n\t\t}\n\t}, [])\n\n\n\treturn (\n\t\t<>\n\t\t\t{blackground && <Blackground onClick={onBlackgroundClick}/>}\n\t\t\t<ModalContainer className={className}>\n\t\t\t\t{children}\n\t\t\t</ModalContainer>\n\t\t</>\n\t);\n}\n\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE } from '../../../constants';\n\nconst Input = styled.input`\n\tborder: 1px solid ${DARK_BLUE};\n\tborder-radius: 10px;\n\tcolor: ${DARK_BLUE};\n\tbox-shadow: none;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\ttext-align: right;\n\tmax-width: 90px;\n\tpadding: 7px 7px;\n\tfont-weight: bold;\n\tz-index: 4;\n`;\n\nconst Demonination = styled.span`\n\tfont-size: 18px;\n\tcolor: ${DARK_BLUE};\n\tfont-weight: bold;\n\tz-index: 5;\n\tposition: absolute;\n\tleft: 7px;\n\ttop: 7px;\n\n`;\n\nconst Container = styled.div`\n\tposition: relative;\n`\n\nexport default ({value, changeValue, denomination, focus}) => {\n\tlet input = React.createRef();\n\n\tuseEffect(() => {\n\t\tif (focus) input.focus();\n\t},[]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Demonination>{denomination}</Demonination>\n\t\t\t<Input type=\"number\" value={value} ref={ref => input = ref} onChange={e => changeValue(e.target.value)}/>\n\t\t</Container>\n\t);\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport OrderInput from './OrderInput';\n\nlet StaticPrice = styled.span`\n\tmargin: 0 5px;\n\tfont-size: 18px;\n\tvertical-align: middle;\n\n`;\n\nlet ChangeButton = styled.span`\n\tfont-size: 12px;\n\ttext-decoration: underline;\n\tfont-weight: 400;\n`\n\nexport default function ChangeablePrice({price, changePrice}) {\n\tlet [marketOrder, setMarketOrder] = useState(true);\n\n\tif (price === 100) {\n\t\tprice = 50;\n\t\tchangePrice(50);\n\t}\n\n\treturn (\n\t\tmarketOrder && price !== 100 ? (\n\t\t\t<div onClick={() => setMarketOrder(false)}>\n\t\t\t\t<StaticPrice>{price}¢</StaticPrice>\n\t\t\t\t<ChangeButton >change</ChangeButton>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<OrderInput value={price} denomination={\"¢\"} focus={true} changeValue={changePrice} />\n\t\t)\n\t)\n};","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport ChangeablePrice from './ChangeablePrice';\nimport OrderInput from './OrderInput';\nimport { PINK, DARK_BLUE } from '../../../constants';\nimport Button from '../../ModalButton';\n\nconst CancelButton = styled.p`\n\tcolor: ${PINK};\n\tfont-size: 18px;\n\tfont-weight: lighter;\n\ttext-decoration: underline;\n\ttext-align: right;\n`\n\nconst Row = styled.div`\n\twidth: 100%;\n\tfont-size: 18px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding-bottom: 6px;\n\tpadding-top: 12px;\n\tborder-bottom: 1px solid ${DARK_BLUE};\n`\nconst Key = styled.p`\n\tmargin: 0;\n`\nconst Value = styled.span`\n\tfont-weight: bold;\n`\n\nconst OrderForm = ({market, signedIn, outcome, closeModal, marketPrice, placeOrder}) => {\n\tconst [price, setPrice] = useState(marketPrice);\n\tconst [spend, setSpend] = useState(1);\n\tlet label;\n\tif (market) {\n\t\tconst outcomeTagExists = !!market.outcome_tags[outcome];\n\t\tlabel = outcomeTagExists ? market.outcome_tags[outcome] : outcome === 0 ? \"NO\" : \"YES\";\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<CancelButton onClick={closeModal}>cancel</CancelButton>\n\t\t\t<Row>\n\t\t\t\t<Key>contract:</Key>\n\t\t\t\t<Value>{label}</Value>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Key>price per contract:</Key>\n\t\t\t\t<Value>\n\t\t\t\t<ChangeablePrice changePrice={setPrice} price={price} />\n\t\t\t\t</Value>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Key>total cost:</Key>\n\t\t\t\t<OrderInput value={spend} denomination={\"$\"} changeValue={setSpend}/>\n\t\t\t</Row>\n\n\t\t\t<Button onClick={() => signedIn && placeOrder(price, spend)} color={signedIn ? DARK_BLUE : \"grey\"}>{signedIn ? \"BUY CONTRACT\" : \"PLEASE SIGN IN\"}</Button>\n\t\t</>\n\n\t)\n}\n\nexport default OrderForm;","import React from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE, PINK } from '../../../constants';\nimport ErrorIcon from './../../../assets/error.png'\nimport SuccessIcon from './../../../assets/success.png'\nimport ModalButton from '../../ModalButton';\nconst Container = styled.div`\n\n`;\n\n\nconst ResIcon = styled.img`\n\theight: 75px;\n\twidth: 75px;\n\tdisplay: block;\n\tpadding-top: 15px;\n\tmargin: auto;\n`;\nconst Text = styled.p`\n\tfont-size: 19px;\n\tfont-weight: lighter;\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 0;\n\tcolor: ${DARK_BLUE};\n`;\n\nconst Title = styled.div`\n\tfont-size: 24px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tpadding-top: 45px;\n\tpadding-bottom: 10px;\n\tcolor: ${DARK_BLUE};\n`;\n\nconst BoldText = styled.span`\n\tfont-weight: bold;\n`;\n\nconst LinkText = styled(Text)`\n\ttext-decoration: underline;\n\tfont-size: 14px;\n\tcursor: pointer;\n`;\n\nexport default function OrderRes({amountOfShares, res, closeModal}) {\n\treturn (\n\t\t<Container>\n\t\t\t<Title>{!res.error ? \"Success\" : \"Something went wrong\"}</Title>\n\t\t\t<ResIcon src={!res.error ? SuccessIcon : ErrorIcon} alt=\"logo reflecting if the order faield or was successful\"/>\n\t\t\t<Text>{!res.error ? \"order placed for\" : \"couldn't place order for\"} <BoldText>{amountOfShares.toFixed(2)} shares</BoldText></Text>\n\t\t\t{!res.error && <LinkText onClick = {() => window.open(`https://explorer.nearprotocol.com/transactions/${res.tx}`)}>view tx</LinkText>}\n\t\t\t<ModalButton onClick={closeModal} color={!res.error ? DARK_BLUE : PINK}>{!res.error ? \"Done\" : \"Close\"}</ModalButton>\n\t\t</Container>\n\t)\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { DARK_BLUE } from '../../../constants';\nimport fluxLogo from './../../../assets/logo.png'\nconst Container = styled.div`\n\n`;\n\nconst Title = styled.div`\n\tfont-size: 24px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tpadding-top: 45px;\n\tpadding-bottom: 10px;\n\tcolor: ${DARK_BLUE};\n\t\n`;\n\nconst FluxLogo = styled.img`\n\theight: 125px;\n\twidth: 125px;\n\tdisplay: block;\n\tpadding-top: 15px;\n\tmargin: auto;\n\tanimation: wiggle 1.5s linear infinite;\n\n\t@keyframes wiggle {\n    0% { transform: rotate(0deg); }\n   \t50% { transform: rotate(0deg); }\n   \t70% { transform: rotate(30deg); }\n   \t90% { transform: rotate(-30deg); }\n  \t100% { transform: rotate(0deg); }\n\t}\n\n\n`;\n\nconst Text = styled.p`\n\tfont-size: 19px;\n\tfont-weight: lighter;\n\ttext-align: center;\n\tpadding: 10px 0;\n\tmargin: 0;\n\tpadding-bottom: 45px;\n\tcolor: ${DARK_BLUE};\n`;\n\nconst BoldText = styled.span`\n\tfont-weight: bold;\n`;\nexport default function OrderLoader({amountOfShares}) {\n\n\treturn (\n\t\t<Container>\n\t\t\t<Title>Processing</Title>\n\t\t\t<FluxLogo src={fluxLogo}/>\n\t\t\t<Text>placing order for <BoldText>{amountOfShares.toFixed(2)} shares</BoldText></Text>\n\t\t</Container>\n\t)\n};","import React, { useContext, useState } from 'react';\nimport Modal from './../../Modal';\nimport OrderForm from './OrderForm';\nimport OrderRes from './OrderRes';\nimport OrderLoader from './OrderLoader';\nimport { OrderContext } from '../../OrderProvider';\nimport { FluxContext } from '../../FluxProvider';\nimport { dollarsToDai } from '../../../utils/unitConvertion';\nimport { updateMarket } from '../../../utils/marketsUtils';\n\nfunction OrderModal() {\n\tconst [ orderContext, dispatchOrderContext ] = useContext(OrderContext);\n\tconst [ {flux}, dispatchFlux ] = useContext(FluxContext);\n\tconst [ loading, setLoading ] = useState(false);\n\tconst [ orderRes, setOrderRes ] = useState(null);\n\tconst [ amountOfShares, setAmountOfShares ] = useState(0);\n\tconst market = orderContext.market;\n\tconst signedIn = flux.isSignedIn();\n\t\n\tconst closeModal = () => {\n\t\tsetOrderRes(null);\n\t\tdispatchOrderContext({type: 'stopOrderPlacement'});\n\t\twindow.location.reload();\n\t};\n\n\tconst placeOrder = async (price, spend) => {\n\t\tconst shares = spend / price * 100\n\t\tsetAmountOfShares(shares);\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tconst res = await flux.placeOrder(market.id, orderContext.outcome, dollarsToDai(spend), parseInt(price)).catch(err => console.error(err));\n\t\t\tconst updatedBalance = await flux.getFDaiBalance().catch(err => console.error(err));\n\t\t\tdispatchFlux({type: \"balanceUpdate\", payload: {balance: updatedBalance}});\n\t\t\tsetOrderRes({error: false, tx: res.transaction.hash});\n\n\t\t} catch (err){\n\t\t\tconsole.error(err);\n\t\t\tsetOrderRes({error: true})\n\t\t}\n\t\tsetLoading(false);\n\t\t\n\t};\n\n\treturn (\n\t\tmarket && <Modal blackground={true} onBlackgroundClick={closeModal}>\n\t\t\t{\n\t\t\t\t!loading && orderRes !== null ?\n\t\t\t\t<OrderRes closeModal={closeModal} res={orderRes} amountOfShares={amountOfShares}/>\n\t\t\t\t:\n\t\t\t\tloading \n\t\t\t\t?\n\t\t\t\t<OrderLoader amountOfShares={amountOfShares}/>\n\t\t\t\t:\n\t\t\t\t<OrderForm closeModal={closeModal} signedIn={signedIn} market={market} placeOrder={placeOrder} marketPrice={orderContext.price} outcome={orderContext.outcome} />\n\t\t\t}\n\t\t</Modal>\n\t);\n}\n\nexport default OrderModal;","import React, { useEffect, useContext, useState} from 'react';\nimport Header from './Header';\nimport Markets from './Markets/Markets';\nimport OwnerPortal from './OwnerPortal/OwnerPortal';\nimport OrderModal from './Markets/Market/OrderModal';\nimport Loader from './Loader';\nimport { FluxContext, connect } from './FluxProvider';\nimport { OrderProvider } from './OrderProvider';\nimport {getMarkets} from '../utils/marketsUtils';\n\nfunction App({...props}) {\n  const [{flux}, dispatch] = useContext(FluxContext);\n  const [markets, setMarkets] = useState([]);\n\n  const specificId = props.match.params.marketId;\n  \n  useEffect(() => {\n    connect().then( async fluxInstance => {\n      dispatch({type: 'connected', payload: {flux: fluxInstance}});\n      let marketIds = [];\n      if (specificId) {\n        marketIds = [parseInt(specificId)];\n      } else {\n        const res = await getMarkets([])\n        marketIds = res.markets.length > 0 ? res.markets.map(market => parseInt(market.marketId)) : [];\n      }\n      fluxInstance.getMarketsById(marketIds).then(res => {\n        setMarkets(fluxInstance.formatMarkets(res));\n      })\n    })\n  }, [specificId]);\n\n\n\n  return (\n    flux ?\n    <>\n      <OwnerPortal markets={markets}/>\n      <Header />\n      <OrderProvider>\n        <Markets specificId={specificId} markets={markets}/>\n        <OrderModal />\n      </OrderProvider>\n    </>\n    :\n    <Loader txLoading={true}/>\n  );\n}\n\n\n\nexport default App;\n","import { Wampy } from 'wampy'\nimport { providers, Account } from 'nearlib';\nimport { NEAR_RPC_URL } from '../../constants';\nconst WAMP_NEAR_EXPLORER_URL = 'wss://near-explorer-wamp.onrender.com/ws'\nconst WAMP_NEAR_EXPLORER_TOPIC_PREFIX = 'com.nearprotocol.testnet.explorer'\n\nconst wamp = new Wampy(WAMP_NEAR_EXPLORER_URL, { realm: 'near-explorer' })\n\nasync function getFunctionCallArgs(txHash, accountId) {\n    const res = await fetch(`https://rpc.nearprotocol.com`, {\n        method: 'POST',\n        headers: { 'Content-type': 'application/json; charset=utf-8' },\n        body: JSON.stringify({\n            method: 'tx',\n            params: [txHash, accountId],\n            id: 'dontcare',\n            jsonrpc: '2.0'\n        }),\n    })\n\n    const json = await res.json();\n    return {returned: json.result.status.SuccessValue !== undefined ? atob(json.result.status.SuccessValue) : false,...JSON.parse(atob(json.result.transaction.actions[0].FunctionCall.args))}\n}\n\nasync function callWamp(procedure, args) {\n    return new Promise((resolve, reject) => wamp.call(\n        `${WAMP_NEAR_EXPLORER_TOPIC_PREFIX}.${procedure}`,\n        args,\n        {\n            onSuccess(dataArr) {\n                resolve(dataArr[0])\n            },\n            onError(err) {\n                reject(err);\n            }\n        }\n    ));\n}\n\nexport async function getTransactions(accountId = '') {\n    const tx = await callWamp(\n        `select`,\n        [\n            `\n                SELECT \n                    transactions.hash,\n                    transactions.signer_id as signerId,\n                    blocks.timestamp as timestamp,\n                    actions.action_type as type,\n                    actions.action_args as action_args\n                FROM\n                    transactions\n                LEFT JOIN blocks ON blocks.hash = transactions.block_hash\n                LEFT JOIN actions ON actions.transaction_hash = transactions.hash\n                WHERE\n                    receiver_id = :accountId\n                ORDER BY blocks.height ASC\n            `,\n            {accountId}\n        ],\n    );\n    const allPlaceOrders = tx.filter(t => t.type === \"FunctionCall\" && JSON.parse(t.action_args).method_name === \"place_order\");\n    const placeOrderArgProms = allPlaceOrders.map(transaction => getFunctionCallArgs(transaction.hash, transaction.signerId));\n    const placeOrderArgs = await Promise.all(placeOrderArgProms);\n    const placeOrderTxWithArgs = allPlaceOrders.map((t, i) => ({args: placeOrderArgs[i], ...t}))\n    const validTx = placeOrderTxWithArgs.filter(tx => tx.args.returned === \"\")\n    \n    const allMarketCreations = tx.filter(t => t.type === \"FunctionCall\" && JSON.parse(t.action_args).method_name === \"create_market\");\n    const marketCreationArgProms = allMarketCreations.map(transaction => getFunctionCallArgs(transaction.hash, transaction.signerId));\n    const marketCreationArgs = await Promise.all(marketCreationArgProms);\n    const createdMarketTxWithArgs = allMarketCreations.map((t, i) => ({args: marketCreationArgs[i], ...t}))\n    const validMarketTx = createdMarketTxWithArgs.filter(tx => tx.args.returned)\n    return {\n        ordersPlaced: validTx,\n        marketsCreated: validMarketTx\n    };\n}\n\n\n\n\n","export default data => {\n\t/* goal:\n\t\t {\n\t\t\t marketId: {\n\t\t\t\t description: \"description\",\n\t\t\t\t data: [\n\t\t\t\t\t {date: exampleDate, outcome1: price, outcome2: price [...]},\n\t\t\t\t\t {...}\n\t\t\t\t ]\n\t\t\t }\n\t\t }\n\t*/\n\n\tconst ordersMappedToMarkets = mapOrdersToMarkets(data);\t\n\tconst groupedByDateAndMerged = {};\n\tObject.keys(ordersMappedToMarkets).forEach(marketId => {\n\t\tconst marketData = ordersMappedToMarkets[marketId];\n\t\tconst orderData = ordersMappedToMarkets[marketId].data;\n\t\tconst dates = [];\n\t\tgroupedByDateAndMerged[marketId] = {description: marketData.description, data:[]};\n\n\t\torderData.forEach(order => {\n\t\t\tconst date = new Date(order.timestamp);\n\t\t\tconst dateString = date.getDate() + \"/\" + (parseInt(date.getMonth()) + 1) + \"/\" + date.getFullYear();\n\t\t\tif (!dates[dateString]) dates[dateString] = [];\n\t\t\tif (!dates[dateString][order.outcome]) dates[dateString][order.outcome] = [];\n\t\t\tdates[dateString][order.outcome].push(order.price_per_share)\n\t\t})\n\n\t\tObject.keys(dates).forEach(date => {\n\t\t\tconst outcomeData = dates[date];\n\t\t\tconst dataObj = {date}\n\t\t\toutcomeData.forEach((priceList, outcome) => {\n\t\t\t\tconst avg = (priceList.reduce((sum, val) => sum + val) / priceList.length).toFixed(2);\n\t\t\t\tdataObj[outcome] = avg;\n\t\t\t})\n\t\t\tgroupedByDateAndMerged[marketId].data.push(dataObj);\n\t\t});\n\n\t})\n\n\treturn groupedByDateAndMerged;\n\t\n}\n\n\nfunction mapOrdersToMarkets(data) {\n\tconst ordersMappedByMarket = {};\n\n\tdata.ordersPlaced.forEach(order => {\n\t\tconst marketId = order.args.market_id;\n\t\tif (!ordersMappedByMarket[marketId]) ordersMappedByMarket[marketId] = {}\n\t\tif (!ordersMappedByMarket[marketId][\"data\"]) ordersMappedByMarket[marketId][\"data\"] = []\n\n\t\tordersMappedByMarket[marketId][\"data\"].push({\n\t\t\t...order.args,\n\t\t\ttimestamp: order.timestamp\n\t\t})\n\t});\n\n\t\n\tdata.marketsCreated.forEach(tx => {\n\t\tconst marketId = tx.args.returned;\n\t\tconst description = tx.args.description;\n\t\tif (ordersMappedByMarket[marketId]) ordersMappedByMarket[marketId].description = description;\n\t})\n\treturn ordersMappedByMarket;\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { getTransactions } from './explorer-api';\nimport { FluxContext, connect } from '../FluxProvider';\nimport formatData from './formatData';\nimport allTxLatest from './allTxLatest';\nimport { LineChart, Line, YAxis, XAxis, Tooltip } from 'recharts';\nimport styled from 'styled-components';\n\nconst ChartContainer = styled.div`\n\tpadding: 0 5%;\n`\n\nconst Title = styled.h1`\n`\n\nfunction Dashboard() {\n\tconst [flux, dispatch] = useContext(FluxContext);\n\tconst [charts, setCharts] = useState([]);\n\tconst [loadingState, setLoadingState] = useState(\"fetching\");\n\n\tconst fetchData = async () => {\n\t\tconst allData = await getTransactions(\"flux-protocol-dev\");\n\t\treturn JSON.stringify(allData);\n\t}\n\n\tconst formatToolTip = (value, name, outcomeTags) => {\n\n\t\tif (outcomeTags.length > 0) {\n\t\t\tname = outcomeTags[name];\n\t\t} else {\n\t\t\tname = name === \"0\" ? \"NO\" : \"YES\";\n\t\t}\n\t\treturn [value, name]\n\t}\n\n\tuseEffect(() => {\n\n\t\tfetchData().then(tx => {\n\t\t\tsetLoadingState(\"formatting\");\n\t\t\tconst data = formatData(JSON.parse(tx));\n\t\t\tmapOutcomeTagsToOutcomes(data).then(mappedData => {\n\n\t\t\t\tconst elems = Object.keys(mappedData).map((marketId, i) => {\n\n\t\t\t\t\tconst marketData = data[marketId];\n\t\t\t\t\tlet lines = []\n\t\t\t\t\t\n\t\t\t\t\tconst colors = [\n\t\t\t\t\t\t\"red\",\n\t\t\t\t\t\t\"blue\",\n\t\t\t\t\t\t\"purple\",\n\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t\tmarketData.data.forEach(entry => {\n\t\t\t\t\t\tconst keys = Object.keys(entry);\n\t\t\t\t\t\tfor (let i = 0; i < keys.length -1; i++) {\n\t\t\t\t\t\t\tconst outcome = keys[i];\n\t\t\t\t\t\t\tif (!lines[outcome]) lines[outcome] = <Line type=\"monotone\" dataKey={outcome} key={i} stroke={colors[i]}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (marketData.description !== \"new market\") {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ChartContainer key={i} >\n\t\t\t\t\t\t\t\t<Title>{marketData.description}</Title>\n\t\t\t\t\t\t\t\t<LineChart width={400} height={400} data={marketData.data}>\n\t\t\t\t\t\t\t\t\t{lines}\n\t\t\t\t\t\t\t\t\t<Tooltip formatter={(value, name) => formatToolTip(value, name, marketData.outcomeTags)} />\n\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"date\"/>\n\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t</ChartContainer>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tsetCharts(elems);\n\t\t\t\tsetLoadingState(null);\n\t\t\t});\n\t\t})\n\t}, [])\n\n\tconst mapOutcomeTagsToOutcomes = async (data) => {\n\t\tconst fluxInstance = await connect();\n\t\tconst allMarkets=  await fluxInstance.getAllMarkets();\n\t\t\n\t\tObject.keys(data).forEach(marketId => {\n\t\t\tconst market = allMarkets[marketId];\n\t\t\tdata[marketId][\"outcomeTags\"] = market.outcome_tags;\n\t\t})\n\t\n\t\treturn data;\n\t}\n\n\tif (loadingState === \"fetching\") {\n\t\treturn (\n\t\t\t<div> fetching latest order data from NEAR explorer... </div>\n\t\t)\n\t} else if (loadingState === \"formatting\") {\n\t\treturn <div> formatting data... </div>\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{charts}\n\t\t\t</div>\n\t\n\t\t);\n\t}\n\n}\n\nexport default Dashboard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyles from  \"./global-styles\";\nimport App from './components/App';\nimport { FluxProvider } from './components/FluxProvider';\nimport Dashboard from './components/Dashboard';\n\nReactDOM.render(\n\t<>\n\t\t<GlobalStyles/>\n\t\t<FluxProvider>\n\t\t\t\t<Router>\n\t\t\t\t\t<Route exact path=\"/\" component={App}/>\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard}/>\n\t\t\t\t\t<Route path=\"/market/:marketId?\" component={App}/>\n\t\t\t\t</Router>\n\t\t</FluxProvider>\n\t</>\n\t, \n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.ef2536e4.png\";"],"sourceRoot":""}